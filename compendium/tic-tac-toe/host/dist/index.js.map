{"version":3,"sources":["../src/index.js"],"names":["React","useEffect","Link","styled","NOUGHTS","CROSSES","Tile","div","Board","Host","state","roomId","moves","connections","length","crossesConnId","noughtsConnId","startGame","window","location","host","board","map","value","position"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,8BAAjC;AAEA,MAAMC,IAAI,GAAGH,MAAM,CAACI,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,MAAMC,KAAK,GAAGL,MAAM,CAACI,GAAI;AACzB;AACA;AACA,CAHA;;AAKA,MAAME,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA,KAAjB;AAAwBC,EAAAA;AAAxB,CAAD,KAA2C;AACtDZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,WAAW,CAACC,MAAZ,IAAsB,CAA1B,EAA6B;AAC3B,YAAM,CAACC,aAAD,EAAgBC,aAAhB,IAAiCH,WAAvC;AACAD,MAAAA,KAAK,CAACK,SAAN,CAAgB;AAAEF,QAAAA,aAAF;AAAiBC,QAAAA;AAAjB,OAAhB;AACD;AACF,GALQ,EAKN,CAACH,WAAD,CALM,CAAT;;AAOA,MAAIA,WAAW,CAACC,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B,wBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,UAASH,MAAO;AAA3B,OAA+BO,MAAM,CAACC,QAAP,CAAgBC,IAA/C,aAA4DT,MAA5D,CADF;AAGD;;AAED,sBACE,oBAAC,KAAD,QACGD,KAAK,CAACW,KAAN,IAAeX,KAAK,CAACW,KAAN,CAAYC,GAAZ,CAAgB,CAACC,KAAD,EAAQC,QAAR,kBAC9B,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA;AAAX,KACGD,KAAK,KAAKnB,OAAV,GAAoB,GAApB,GAA0B,IAD7B,EAEGmB,KAAK,KAAKlB,OAAV,GAAoB,GAApB,GAA0B,IAF7B,CADc,CADlB,CADF;AAUD,CAxBD;;AA0BA,eAAeI,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { NOUGHTS, CROSSES } from \"@compendium/tic-tac-toe-game\";\n\nconst Tile = styled.div`\n  width: 33.333%;\n  height: 33.333%;\n  background-color: cyan;\n  border: 2px solid yellow;\n  color: black;\n  text-align: center;\n  float: left;\n  box-sizing: border-box;\n`;\n\nconst Board = styled.div`\n  width: 30em;\n  height: 30em;\n`;\n\nconst Host = ({ state, roomId, moves, connections }) => {\n  useEffect(() => {\n    if (connections.length >= 2) {\n      const [crossesConnId, noughtsConnId] = connections;\n      moves.startGame({ crossesConnId, noughtsConnId });\n    }\n  }, [connections])\n\n  if (connections.length < 2) {\n    return (\n      <Link to={`/guest/${roomId}`}>{window.location.host}/guest/{roomId}</Link>\n    )\n  }\n\n  return (\n    <Board>\n      {state.board && state.board.map((value, position) => (\n        <Tile key={position}>\n          {value === NOUGHTS ? \"O\" : null}\n          {value === CROSSES ? \"X\" : null}\n        </Tile>\n      ))}\n    </Board>\n  );\n}\n\nexport default Host;\n"],"file":"index.js"}