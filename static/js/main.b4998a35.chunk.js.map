{"version":3,"sources":["components/paragraph/Paragraph.js","components/paragraph/index.js","components/heading/Heading.js","components/heading/index.js","../../.yarn/cache/peerjs-npm-1.3.2-8966839def-8766e61cf9.zip/node_modules/peerjs/dist sync","../../src/usePersist.ts","../../src/random.ts","../../src/secret.ts","../../src/host/funcs.ts","../../src/host/useGameState.ts","../../src/host/stores.ts","../../src/usePeer.ts","../../src/host/useConnections.ts","../../src/shared.ts","../../src/host/usePartyHost.ts","../../src/host/useRandom.ts","../../src/host/useMoves.ts","../../src/host/useInputBuffer.ts","../../src/host/useSendSyncs.ts","../../src/guest/funcs.ts","../../src/guest/useSync.ts","../../src/guest/useMoves.ts","../../src/guest/usePartyGuest.ts","../../src/guest/stores.ts","../../src/guest/useConnection.ts","../../src/guest/useAck.ts","games/tic-tac-toe/client/index.js","games/tic-tac-toe/index.js","games/tic-tac-toe/tic-tac-toe.jpg","components/players/game/index.js","components/players/client/Host.js","components/players/client/Guest.js","components/players/index.js","components/players/client/index.js","games/whist/game/index.js","games/whist/client/index.js","games/whist/index.js","games/whist/whist.jpg","games/hot-potato/game/index.js","games/hot-potato/client/index.js","games/hot-potato/index.js","games/hot-potato/hot-potato.jpg","games/chess/game/index.js","games/chess/client/index.js","games/chess/chess.jpg","compendium.js","games/chess/index.js","rooms.js","useGame.js","components/input/Input.js","components/input/index.js","components/join-form/index.js","components/join-form/JoinForm.js","components/dropdown/Dropdown.js","components/dropdown/index.js","components/host-form/index.js","components/host-form/HostForm.js","components/navbar/NavBar.js","components/navbar/index.js","components/typed-banner/TypedBanner.js","components/typed-banner/index.js","components/cta-card/CallToActionCard.js","components/cta-card/index.js","Home.js","theme.js","Router.js","App.js","reportWebVitals.js","index.js","components/emoji/Emoji.js","components/emoji/EmojiPicker.js","components/emoji/index.js","games/tic-tac-toe/game/index.js","components/playing-card/client/cards/AH.svg","components/playing-card/client/cards/AC.svg","components/playing-card/client/cards/AD.svg","components/playing-card/client/cards/AS.svg","components/playing-card/client/cards/2H.svg","components/playing-card/client/cards/2C.svg","components/playing-card/client/cards/2D.svg","components/playing-card/client/cards/2S.svg","components/playing-card/client/cards/3H.svg","components/playing-card/client/cards/3C.svg","components/playing-card/client/cards/3D.svg","components/playing-card/client/cards/3S.svg","components/playing-card/client/cards/4H.svg","components/playing-card/client/cards/4C.svg","components/playing-card/client/cards/4D.svg","components/playing-card/client/cards/4S.svg","components/playing-card/client/cards/5H.svg","components/playing-card/client/cards/5C.svg","components/playing-card/client/cards/5D.svg","components/playing-card/client/cards/5S.svg","components/playing-card/client/cards/6H.svg","components/playing-card/client/cards/6C.svg","components/playing-card/client/cards/6D.svg","components/playing-card/client/cards/6S.svg","components/playing-card/client/cards/7H.svg","components/playing-card/client/cards/7C.svg","components/playing-card/client/cards/7D.svg","components/playing-card/client/cards/7S.svg","components/playing-card/client/cards/8H.svg","components/playing-card/client/cards/8C.svg","components/playing-card/client/cards/8D.svg","components/playing-card/client/cards/8S.svg","components/playing-card/client/cards/9H.svg","components/playing-card/client/cards/9C.svg","components/playing-card/client/cards/9D.svg","components/playing-card/client/cards/9S.svg","components/playing-card/client/cards/10H.svg","components/playing-card/client/cards/10C.svg","components/playing-card/client/cards/10D.svg","components/playing-card/client/cards/10S.svg","components/playing-card/client/cards/JH.svg","components/playing-card/client/cards/JC.svg","components/playing-card/client/cards/JD.svg","components/playing-card/client/cards/JS.svg","components/playing-card/client/cards/QH.svg","components/playing-card/client/cards/QC.svg","components/playing-card/client/cards/QD.svg","components/playing-card/client/cards/QS.svg","components/playing-card/client/cards/KH.svg","components/playing-card/client/cards/KC.svg","components/playing-card/client/cards/KD.svg","components/playing-card/client/cards/KS.svg","components/playing-card/client/cards/JOKER.svg","components/playing-card/game/model.js","components/playing-card/game/constructDeckOfCards.js","components/playing-card/client/Card.js","components/playing-card/client/CardFront.js","components/playing-card/client/cards/RED_BACK.svg","components/playing-card/client/cards/BLUE_BACK.svg","components/playing-card/client/CardBack.js","components/playing-card/client/felt.png","components/playing-card/client/FeltTable.js","components/playing-card/client/Hand.js","components/playing-card/index.js"],"names":["Paragraph","children","props","as","color","fontFamily","fontSize","fontSizeVariants","primary","secondary","asVariants","Header","variant","Heading","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","usePersist","useState","item","store","JSON","defaultValue","state","setState","useEffect","key","withRandom","moveFn","isRandomMove","withSecret","isSecretMove","applyActions","actions","contextId","controller","seed","initialState","reducer","action","event","index","isRandom","isSecret","simpleMoveArgs","hostId","callerId","args","randomMixin","random","seedrandom","secretMixin","revealSecret","newState","diff","accumulator","eventLog","error","console","useInputCallback","params","useCallback","move","actionUsesRandomMove","result","connectionId","useGameState","roomId","game","connectionIds","eventLogs","logEvent","window","states","setStates","useStatesStore","useMemo","fn","newConnection","useNewConnectionEffect","input","destructPeer","peer","setPeer","opts","host","secure","usePeer","open","setOpen","useReducer","a","attempts","countAttempt","retry","timeout","setTimeout","clearTimeout","onConnectionClosed","useConnections","connections","setConnections","connectionLogSizeMap","useRef","addConnectionId","onGuestEvent","setOnGuestEvent","conn","appendConnection","isInteger","size","updateLogSizeMap","isString","validMoves","m","validateEvent","Object","conns","c","removeConnection","constructMoves","handleMove","Proxy","get","has","Symbol","Reflect","usePartyHost","secret","useRandom","setEventLogs","logs","useEventLogStore","onEvent","setOnHostEvent","moves","useMoves","inputBuffer","setInputBuffer","pushInput","inputItem","head","tail","useInputBuffer","connection","numSent","events","i","useSendSyncs","logSizeToIndex","logSize","constructReducer","patch","o","moveArgs","useSync","data","clearData","setLogSize","updateLogSize","cache","sync","constructMovesHandler","setMoves","preempt","emit","usePartyGuest","useIdStore","useStateStore","useLogSizeStore","setData","connected","setConnected","serialization","connect","useConnection","ack","useAck","withSuspense","Component","fallback","Host","lazy","Guest","TicTacToe","name","description","image","alt","src","initPlayers","players","maxPlayers","minPlayers","everyoneIsIn","list","length","joinAsAPlayer","player","emoji","playerList","PlayerList","flexGrow","map","alignItems","width","height","my","mx","HowToJoin","fontWeight","canStartGame","checkIfCanStartGame","flexDirection","justifyContent","onClick","onKeyPress","JoinScreen","onJoin","setName","setEmoji","pickerIsShown","setPickerIsShown","showPicker","hidePicker","join","onHide","onSelectEmoji","htmlFor","onChange","target","value","Spectator","Waiting","isPlayer","findIndex","findConnectionIsPlayer","gameIsFull","checkIfGameIsFull","withPlayers","options","OriginalHost","OriginalGuest","originalGame","rest","NewGuest","NewHost","withHostPlayers","newGame","contextIsHosts","startGame","discard","deck","constructDeckOfCards","hand","deal","shuffledDeck","Math","array","lastIndex","rand","shuffle","s","playerIndex","filter","_","Whist","passPotato","hotPotato","numPlayers","floor","setBackgroundColour","backgroundColour","throwPotato","stopMusic","hotPotatoPlayer","find","loser","HotPotato","theme","presetTheme","chessMove","chess","Chess","board","fen","compendium","thumbnail","permutations","getGame","compendiumIndex","words","split","sortedWords","sort","permutation","word","w","permu","isEqual","decodeCompendiumIndex","useGame","setGame","LabelledInput","Input","label","placeholder","uniqueId","JoinForm","onJoinGame","set","onSubmit","minWidth","px","preventDefault","Dropdown","option","HostForm","onNewGame","NavHeading","NavLink","href","prepareHandler","handler","py","MenuItem","Nav","flexWrap","p","backgroundColor","NavMenu","hidden","NavBar","leftButtonLabel","leftButtonHandler","title","onMenuToggle","menuIsHidden","menuItems","toPairs","constructor","String","ReactTyped","TypedBanner","typedSentences","stopped","sx","userSelect","strings","typeSpeed","backSpeed","backDelay","loop","smartBackspace","leftWidthVariants","rightWidthVariants","CallToActionCard","imageSrc","imageAlt","headingText","bodyText","onAction","buttonLabel","leftWidth","rightWidth","display","pt","mt","Home","push","useHistory","hideMenu","toggleMenu","order","randomWords","exactly","createRoomId","GitHub","Documentation","Storybook","merge","base","fonts","heading","body","HostRoute","useParams","baseTheme","GuestRoute","Router","path","exact","NormaliseStyles","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","Emoji","memo","dangerouslySetInnerHTML","__html","twemoji","parse","folder","ext","Background","styled","div","Wrapper","EmojiPicker","tabIndex","stopPropagation","onSelect","native","NOUGHTS","CROSSES","fillSquare","crossesPlayer","noughtsPlayer","position","splice","crossesConnId","noughtsConnId","Array","fill","SUITS","JACK","QUEEN","KING","VALUES","jokers","cards","suit","Container","UnSelectable","Selectable","isSelected","Overlay","selectColor","FaceImg","img","SelectableFace","faceImage","altText","UnSelectableFace","Card","canBeSelected","Face","CardFront","log","JKR","HA","DA","SA","CA","H2","D2","S2","C2","H3","D3","S3","C3","H4","D4","S4","C4","H5","D5","S5","C5","H6","D6","S6","C6","H7","D7","S7","C7","H8","D8","S8","C8","H9","D9","S9","C9","H10","D10","S10","C10","HJ","DJ","SJ","CJ","HQ","DQ","SQ","CQ","HK","DK","SK","CK","getFaceImage","getAltText","CardBack","colour","RED_BACK","BLUE_BACK","FeltTable","felt","Hand","section","PlayingCardFront"],"mappings":"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","file":"static/js/main.b4998a35.chunk.js","sourcesContent":["import { Text } from \"rebass/styled-components\";\n\nfunction Paragraph ({ children, ...props }) {\n  return (\n    <Text {...props} as=\"p\" color=\"text\" fontFamily=\"body\" fontSize={[1,2,3]}>\n      {children}\n    </Text>\n  );\n}\n\nexport default Paragraph;","import Paragraph from \"./Paragraph\";\nexport default Paragraph;","import { Heading } from \"rebass/styled-components\";\n\nconst fontSizeVariants = {\n  primary: [4,5,6],\n  secondary: [3,4,5],\n}\n\nconst asVariants = {\n  primary: \"h1\",\n  secondary: \"h2\",\n}\n\nfunction Header({ children, variant = \"primary\", ...props }) {\n  const fontSize = fontSizeVariants[variant];\n  const as = asVariants[variant];\n  return (\n    <Heading color=\"text\" fontFamily=\"heading\" fontSize={fontSize} as={as} {...props}>\n      {children}\n    </Heading>\n  );\n}\n\nexport default Header;","import Heading from \"./Heading\";\nexport default Heading;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 163;","import { useState, useEffect, Dispatch, SetStateAction } from 'react'\n\nfunction usePersist<T>(\n  store: Storage,\n  key: string,\n  defaultValue: T | (() => T)\n): [T, Dispatch<SetStateAction<T>>] {\n  const [state, setState] = useState<T>(() => {\n    const item = store.getItem(key)\n    if (item) {\n      return JSON.parse(item ?? '')\n    } else {\n      return defaultValue instanceof Function ? defaultValue() : defaultValue\n    }\n  })\n\n  useEffect(() => {\n    store.setItem(key, JSON.stringify(state))\n  }, [key, state, store])\n\n  return [state, setState]\n}\n\nexport default usePersist\n","import { RandomNumberGenerator, Move, RandomMove, RandomSecretMove } from '.'\nimport { Seed } from './types'\n\n/**\n * A higher order function to provide `random`, a random number generator, to a move defintion.\n * ```js\n * withRandom(({ random, state }) => {\n *   const isHeads = random() > 0.5;\n *   return ({ ...state, isHeads })\n * })\n * ```\n * @param moveFn A game move definition, which will require randomness\n * @return A random move definition\n */\nexport function withRandom(moveFn: Move): RandomMove | RandomSecretMove {\n  moveFn._isRandom = true\n  return moveFn as RandomMove | RandomSecretMove\n}\n\nexport const isRandomMove = (moveFn: Move) => moveFn._isRandom\n\nexport const shuffle = ({\n  random = Math.random,\n  array\n}: {\n  random: RandomNumberGenerator\n  array: any[]\n}) => {\n  const length = array == null ? 0 : array.length\n  if (!length) {\n    return []\n  }\n  let index = -1\n  const lastIndex = length - 1\n  const result = [...array]\n  while (++index < length) {\n    const rand = index + Math.floor(random() * (lastIndex - index + 1))\n    const value = result[rand]\n    result[rand] = result[index]\n    result[index] = value\n  }\n  return result\n}\n\nexport function genSeed(random: RandomNumberGenerator): Seed {\n  return random().toString()\n}\n","import { Move, SecretMove, RandomSecretMove } from '.'\n\n/**\n * A higher order function to provide `contextId` and `revealASecret`, enabling the move\n * to return a different state for different peers.\n * ```js\n * withSecret(({ contextId, hostId, revealSecret, state }) => {\n *   const isHostContext = hostId === contextId\n *   if (isHostContext) {\n *     return ({ ...state, deck: state.deck.slice(1) })\n *   } else {\n *     const topCardOfDeck = revealSecret(hostId, s => s.deck[0])\n *     return ({ ...state, revealedCard: topCardOfDeck })\n *   }\n * })\n * ```\n * @param moveFn A move defition that needs to be secretive\n * @return A move defintion with context awareness and access to secret state\n */\nexport function withSecret(moveFn: Move): SecretMove | RandomSecretMove {\n  moveFn._isSecret = true\n  return moveFn as SecretMove | RandomSecretMove\n}\n\nexport const isSecretMove = (moveFn: Move) => moveFn._isSecret\n","import { diff } from 'jsondiffpatch'\nimport seedrandom from 'seedrandom'\nimport { isRandomMove } from '../random'\nimport { isSecretMove } from '../secret'\nimport {\n  State,\n  PeerId,\n  RandomNumberGenerator,\n  RevealSecretFunction,\n  Game,\n  RandomMove,\n  SecretMove,\n  SimpleMove,\n  RandomArgsMixin,\n  SecretArgsMixin,\n  RandomSecretMove\n} from '..'\nimport { EventItem, EventList, Seed } from '../types'\nimport { Action } from '.'\n\nexport interface Controller {\n  roomId: PeerId\n  game: Game\n  random: RandomNumberGenerator\n  revealSecret: RevealSecretFunction\n}\n\ninterface ReducerParameters {\n  state: State\n  contextId: PeerId\n  action: Action\n  controller: Controller\n  seed?: Seed\n}\n\ninterface ReducerReturn {\n  state: State\n  event: EventItem\n}\n\nexport function reducer({\n  state,\n  contextId,\n  action,\n  controller,\n  seed\n}: ReducerParameters): ReducerReturn {\n  const moveFn = controller.game[action.move]\n  const event: EventItem = { index: null, ...action }\n\n  let newState: State\n\n  const isRandom = isRandomMove(moveFn)\n  const isSecret = isSecretMove(moveFn)\n\n  if (isRandom && seed) {\n    event.seed = seed\n  }\n\n  const simpleMoveArgs = {\n    state,\n    hostId: controller.roomId,\n    callerId: action.connectionId,\n    args: action.args\n  }\n  const randomMixin: RandomArgsMixin | null = isRandom\n    ? { random: seedrandom(event.seed) }\n    : null\n  const secretMixin: SecretArgsMixin | null = isSecret\n    ? { contextId, revealSecret: controller.revealSecret }\n    : null\n\n  if (randomMixin && !isSecret) {\n    const randomMoveFn = moveFn as RandomMove\n    newState = randomMoveFn({ ...simpleMoveArgs, ...randomMixin })\n    return { state: newState, event }\n  }\n\n  if (secretMixin) {\n    if (!isRandom) {\n      const secretMoveFn = moveFn as SecretMove\n      newState = secretMoveFn({ ...simpleMoveArgs, ...secretMixin })\n    }\n\n    if (randomMixin) {\n      const randomSecretMoveFn = moveFn as RandomSecretMove\n      newState = randomSecretMoveFn({\n        ...simpleMoveArgs,\n        ...secretMixin,\n        ...randomMixin\n      })\n    }\n\n    event.patch = diff(state, newState)\n    return { state: newState, event }\n  }\n\n  const simpleMoveFn = moveFn as SimpleMove\n  newState = simpleMoveFn(simpleMoveArgs)\n  return { state: newState, event }\n}\n\ntype Result = { state: State; eventLog: EventList }\n\ninterface ApplyActionsParameters {\n  actions: Action[]\n  contextId: PeerId\n  controller: Controller\n  initialState?: State\n  initialEventLog?: EventList\n  seed?: Seed\n}\n\nexport function applyActions({\n  actions,\n  contextId,\n  controller,\n  seed,\n  initialState = {}\n}: ApplyActionsParameters): Result {\n  const result = actions.reduce(\n    (accumulator, action) => {\n      try {\n        const { state, event }: { state: State; event: EventItem } = reducer({\n          state: accumulator.state,\n          contextId,\n          action,\n          controller,\n          seed\n        })\n        const eventLog: EventList = [...accumulator.eventLog, event]\n        return { state, eventLog }\n      } catch (error) {\n        console.error('Invalid Event', error)\n        return accumulator\n      }\n    },\n    { state: initialState, eventLog: [] as EventList }\n  )\n  return result\n}","import { useCallback, useEffect, useMemo } from 'react'\nimport { StateStoreSetter, useStatesStore } from './stores'\nimport { EventLogs, EventLogger, Inputer, Action, States } from '.'\nimport { State, PeerId, RandomNumberGenerator, Game } from '..'\nimport { applyActions, Controller } from './funcs'\nimport { genSeed, isRandomMove } from '../random'\n\ninterface UseGameStateParameters {\n  roomId: PeerId\n  game: Game\n  random: RandomNumberGenerator\n  connectionIds: PeerId[]\n  eventLogs: EventLogs\n  logEvent: EventLogger\n}\n\ninterface UseGameStateReturn {\n  state: State\n  input: Inputer\n}\n\ninterface InternalGameStateHookParameters {\n  setState: StateStoreSetter\n  connectionIds: PeerId[]\n  controller: Controller\n  states: States\n  eventLogs: EventLogs\n  logEvent: EventLogger\n}\n\nconst actionUsesRandomMove = (action: Action, controller: Controller) => {\n  const move = controller.game[action.move]\n  return isRandomMove(move)\n}\n\nfunction useInputCallback(params: InternalGameStateHookParameters): Inputer {\n  return useCallback(\n    (action: Action) => {\n      let seed\n      if (actionUsesRandomMove(action, params.controller)) {\n        seed = genSeed(params.controller.random)\n      }\n      const contextIds = [...params.connectionIds, params.controller.roomId]\n      for (const contextId of contextIds) {\n        const result = applyActions({\n          initialState: params.states[contextId],\n          actions: [action],\n          controller: params.controller,\n          contextId,\n          seed\n        })\n\n        result.eventLog.forEach((event) =>\n          params.logEvent({ connectionId: contextId, event })\n        )\n        params.setState({ contextId, state: result.state })\n      }\n    },\n    [params]\n  )\n}\n\nfunction useNewConnectionEffect(params: InternalGameStateHookParameters): void {\n  useEffect(() => {\n    const [newConnection] = params.connectionIds.filter(\n      (peer) => !params.states[peer] && !params.eventLogs[peer]?.length\n    )\n    if (!newConnection) return\n\n    const hostEvents =\n      params.eventLogs[params.controller.roomId] ?? ([] as Action[])\n\n    const result = applyActions({\n      actions: hostEvents as Action[],\n      controller: params.controller,\n      contextId: newConnection\n    })\n\n    result.eventLog.forEach((event) =>\n      params.logEvent({ connectionId: newConnection, event })\n    )\n    params.setState({ contextId: newConnection, state: result.state })\n  }, [params])\n}\n\nfunction useGameState({\n  roomId,\n  game,\n  random,\n  connectionIds,\n  eventLogs,\n  logEvent\n}: UseGameStateParameters): UseGameStateReturn {\n  const { states, setState } = useStatesStore(roomId)\n\n  const params = useMemo(() => {\n    const revealSecret = (id: PeerId, fn: (s: State) => State) => fn(states[id])\n    const controller = { roomId, game, random, revealSecret }\n    return { logEvent, setState, connectionIds, controller, states, eventLogs }\n  }, [\n    states,\n    eventLogs,\n    roomId,\n    game,\n    random,\n    logEvent,\n    setState,\n    connectionIds\n  ])\n\n  useNewConnectionEffect(params)\n  const input = useInputCallback(params)\n  const hostState = useMemo(() => states[roomId] || {}, [roomId, states])\n\n  return { state: hostState, input }\n}\n\nexport default useGameState\n","import usePersist from '../usePersist'\nimport { useCallback, Dispatch, SetStateAction } from 'react'\nimport { PeerId, State } from '..'\nimport { EventItem } from '../types'\nimport { States, EventLogs, EventLogger } from '.'\n\nexport type StateStoreSetter = Dispatch<SetStateAction<State>>\n\nexport function useStatesStore(\n  roomId: PeerId\n): { states: States; setState: StateStoreSetter } {\n  const [states, setStates] = usePersist<States>(\n    window.localStorage,\n    `hostState-${roomId}`,\n    {}\n  )\n\n  const setState = useCallback(\n    ({ contextId, state }: { contextId: PeerId; state: State }) => {\n      setStates((states) => ({ ...states, [contextId]: state }))\n    },\n    [setStates]\n  )\n\n  return { states, setState }\n}\n\nexport function useEventLogStore(\n  roomId: PeerId\n): { eventLogs: EventLogs; logEvent: EventLogger } {\n  const [eventLogs, setEventLogs] = usePersist<EventLogs>(\n    window.localStorage,\n    `eventLog-${roomId}`,\n    {}\n  )\n  const logEvent = useCallback(\n    ({ connectionId, event }: { connectionId: PeerId; event: EventItem }) => {\n      setEventLogs((eventLogs) => {\n        const logs = eventLogs[connectionId] || []\n        return { ...eventLogs, [connectionId]: [...logs, event] }\n      })\n    },\n    [setEventLogs]\n  )\n  return { eventLogs, logEvent }\n}\n","import {\n  useEffect,\n  useState,\n  useReducer,\n  Dispatch,\n  SetStateAction\n} from 'react'\nimport Peer from 'peerjs'\nimport { ConnectionStatus, PeerId } from '.'\n\ntype PeerSetter = Dispatch<SetStateAction<Peer | null>>\nconst destructPeer = ({\n  peer,\n  setPeer\n}: {\n  peer: Peer\n  setPeer: PeerSetter\n}) => {\n  peer && peer.destroy()\n  setPeer(null)\n}\n\nconst opts = { host: 'signalling.compendium.games', secure: true }\n\nfunction usePeer(id: PeerId): { open: ConnectionStatus; peer: Peer | null } {\n  const [peer, setPeer] = useState<Peer | null>(null)\n  const [open, setOpen] = useState(false)\n  const [attempts, countAttempt] = useReducer((a: number) => a + 1, 0)\n\n  useEffect(() => {\n    if (open) return\n\n    const peer = new Peer(id, opts)\n    setPeer(peer)\n\n    const retry = () => {\n      setOpen(false)\n      destructPeer({ peer, setPeer })\n      countAttempt()\n    }\n\n    let timeout = setTimeout(retry, 1000)\n\n    peer.on('open', () => {\n      clearTimeout(timeout)\n      setOpen(true)\n    })\n\n    const onConnectionClosed = () => {\n      clearTimeout(timeout)\n      timeout = setTimeout(retry, 1000)\n    }\n    peer.on('close', onConnectionClosed)\n    peer.on('disconnected', onConnectionClosed)\n    peer.on('error', onConnectionClosed)\n\n    return () => {\n      destructPeer({ peer, setPeer })\n      clearTimeout(timeout)\n    }\n  }, [attempts, id])\n\n  return { open, peer }\n}\n\nexport default usePeer\n","import {\n  useRef,\n  useState,\n  useEffect,\n  useReducer,\n  MutableRefObject,\n  Dispatch,\n  SetStateAction\n} from 'react'\nimport { isString, isInteger } from 'lodash'\nimport usePeer from '../usePeer'\nimport { PeerId, Game } from '..'\nimport { LogSize, ConnectionList, Connection } from '../types'\nimport { PeerAcks, InputerSetter, Action, Inputer } from '.'\n\n// TODO: refactor, event is now action, validMoves should be game probably..\nconst validateEvent = (event: Action, validMoves: string[]) =>\n  event &&\n  isString(event.move) &&\n  validMoves.findIndex((m) => m === event.move) > -1\n\ntype ConnectionArgs = {\n  setConnections: Dispatch<SetStateAction<ConnectionList>>\n  conn: Connection\n}\n\nconst appendConnection = ({ setConnections, conn }: ConnectionArgs) => {\n  setConnections((conns: ConnectionList) => [...conns, conn])\n}\n\nconst removeConnection = ({ setConnections, conn }: ConnectionArgs) => {\n  setConnections((conns: ConnectionList) =>\n    conns.filter((c: Connection) => c !== conn)\n  )\n}\n\ntype UpdateLogSizeMapArgs = {\n  conn: Connection\n  connectionLogSizeMap: MutableRefObject<PeerAcks>\n  size: LogSize\n}\nconst updateLogSizeMap = ({\n  conn,\n  connectionLogSizeMap,\n  size = 0\n}: UpdateLogSizeMapArgs) => {\n  connectionLogSizeMap.current[conn.peer] = size\n}\n\ntype UseConnectionsArgs = { game: Game; roomId: PeerId }\ntype UseConnectionsReturn = {\n  connections: ConnectionList\n  connectionIds: PeerId[]\n  connectionLogSizeMap: MutableRefObject<PeerAcks>\n  setOnGuestEvent: InputerSetter\n}\nfunction useConnections({\n  game,\n  roomId\n}: UseConnectionsArgs): UseConnectionsReturn {\n  const { peer } = usePeer(roomId)\n  const [connections, setConnections] = useState<ConnectionList>([])\n  const connectionLogSizeMap = useRef<PeerAcks>({})\n  const [connectionIds, addConnectionId] = useReducer(\n    (state: PeerId[], connId: PeerId) => [...state, connId],\n    []\n  )\n  const [onGuestEvent, setOnGuestEvent] = useState<Inputer>(() => () => {})\n\n  useEffect(() => {\n    if (!peer || !onGuestEvent) return\n\n    peer.on('connection', (conn) => {\n      conn.on('open', () => {\n        appendConnection({ setConnections, conn })\n        addConnectionId(conn.peer)\n      })\n\n      conn.on('data', ({ index, ...event } = {}) => {\n        if (isInteger(index)) {\n          updateLogSizeMap({ conn, connectionLogSizeMap, size: index + 1 })\n        }\n\n        if (\n          (isInteger(index) || index === null) &&\n          validateEvent(event, Object.keys(game))\n        ) {\n          onGuestEvent({ ...event, connectionId: conn.peer })\n        }\n      })\n\n      conn.on('close', () => {\n        removeConnection({ setConnections, conn })\n      })\n\n      conn.on('error', (error) => {\n        console.error(conn.peer, error)\n      })\n    })\n  }, [peer, game, roomId, onGuestEvent])\n\n  return { connections, connectionIds, connectionLogSizeMap, setOnGuestEvent }\n}\n\nexport default useConnections\n","import has from 'lodash/has'\nimport { Game, Args, Moves } from '.'\nimport { MoveHandler } from './types'\n\ninterface ConstructMovesArgs {\n  game: Game\n  handleMove: MoveHandler\n}\n\nexport function constructMoves({\n  game,\n  handleMove\n}: ConstructMovesArgs): Moves {\n  return new Proxy(\n    {},\n    {\n      get: (target, key, receiver) => {\n        if (has(game, key)) {\n          return (args: Args) => handleMove({ move: key.toString(), args })\n        } else if (key === Symbol.iterator && game) {\n          return Object.keys(game)[Symbol.iterator].bind(target)\n        } else {\n          return Reflect.get(target, key, receiver)\n        }\n      }\n    }\n  )\n}\n","import { useMemo } from 'react'\nimport uniq from 'lodash/uniq'\nimport { useEventLogStore } from './stores'\nimport useGameState from './useGameState'\nimport useConnections from './useConnections'\nimport useMoves from './useMoves'\nimport useSendSyncs from './useSendSyncs'\nimport useInputBuffer from './useInputBuffer'\nimport useRandom from './useRandom'\nimport { Connection } from '../types'\nimport { UsePartyHostArgs, UsePartyHostReturn } from '..'\n\n/**\n * A React hook that, provided the game rules and a shared room identifier,\n * returns the host's state representation and an object with moves\n * to call on the host's user action.\n */\nfunction usePartyHost({\n  roomId,\n  game,\n  secret\n}: UsePartyHostArgs): UsePartyHostReturn {\n  // The host will need to make some random decisions\n  const random = useRandom({ secret, roomId })\n\n  // The event log will store validated events, so we can sync guests.\n  const { eventLogs, logEvent } = useEventLogStore(roomId)\n\n  // Guests connect and send (not trusted) events.\n  // The host remembers the last event a guest has acknowledged receiving a sync for.\n  const {\n    setOnGuestEvent,\n    connections,\n    connectionIds,\n    connectionLogSizeMap\n  } = useConnections({ game, roomId })\n\n  // The host creates events also\n  const { setOnHostEvent, moves } = useMoves({ roomId, game })\n\n  // When an event takes places, applies it to a state for each connection, to check it is a valid move.\n  // If no error is thrown it is a valid move, then the state is updated and the valid event is logged.\n  const { state, input } = useGameState({\n    roomId,\n    game,\n    logEvent,\n    random,\n    connectionIds,\n    eventLogs\n  })\n\n  // Connect yet-to-be-validated guest and host events to the event handler\n  useInputBuffer({ setOnHostEvent, setOnGuestEvent, input })\n\n  // Update active connections with valid events in the log they have yet to acknowledge.\n  useSendSyncs({ connections, connectionLogSizeMap, eventLogs })\n\n  const activeConnectionIds = useMemo(\n    () => uniq(connections.map((conn: Connection) => conn.peer)).sort(),\n    [connections]\n  )\n\n  return { state, moves, connections: activeConnectionIds }\n}\n\nexport default usePartyHost\n","import { useMemo } from 'react'\nimport seedrandom from 'seedrandom'\nimport { PeerId, RandomNumberGenerator, Secret } from '..'\n\nfunction useRandom({\n  secret,\n  roomId\n}: {\n  secret?: Secret\n  roomId: PeerId\n}): RandomNumberGenerator {\n  const random = useMemo<RandomNumberGenerator>(\n    () => seedrandom(secret || roomId),\n    [secret, roomId]\n  )\n  return random\n}\n\nexport default useRandom\n","import { useState, useMemo, useCallback } from 'react'\nimport { constructMoves } from '../shared'\nimport { PeerId, Game, Moves } from '..'\nimport { InputerSetter, Inputer } from '.'\n\ntype UseMovesArgs = { roomId: PeerId; game: Game }\n\ntype UseMovesReturn = { moves: Moves; setOnHostEvent: InputerSetter }\n\nfunction useMoves({ roomId, game }: UseMovesArgs): UseMovesReturn {\n  const [onEvent, setOnHostEvent] = useState<Inputer>(() => () => null)\n\n  const handleMove = useCallback(\n    (event) => {\n      onEvent({ ...event, connectionId: roomId })\n    },\n    [roomId, onEvent]\n  )\n\n  const moves = useMemo(() => {\n    if (!handleMove || !game) return {}\n    return constructMoves({ game, handleMove })\n  }, [game, handleMove])\n\n  return { moves, setOnHostEvent }\n}\n\nexport default useMoves\n","import { useEffect, useState } from 'react'\nimport { InputerSetter, Inputer, ActionList, Action } from '.'\n\ntype UseInputBufferArgs = {\n  setOnGuestEvent: InputerSetter\n  setOnHostEvent: InputerSetter\n  input: Inputer\n}\n\nfunction useInputBuffer({\n  setOnGuestEvent,\n  setOnHostEvent,\n  input\n}: UseInputBufferArgs) {\n  const [inputBuffer, setInputBuffer] = useState<ActionList>([])\n\n  useEffect(() => {\n    const pushInput = (inputItem: Action) => {\n      setInputBuffer((buffer: ActionList) => [...buffer, inputItem])\n    }\n    setOnGuestEvent(() => pushInput)\n    setOnHostEvent(() => pushInput)\n  }, [setOnGuestEvent, setOnHostEvent, setInputBuffer])\n\n  useEffect(() => {\n    if (!inputBuffer.length || !input) return\n    setInputBuffer(([head, ...tail]) => {\n      input(head)\n      console.info('INPUT ACTION', head)\n      return tail\n    })\n  }, [inputBuffer, input, setInputBuffer])\n}\n\nexport default useInputBuffer\n","import { useEffect, MutableRefObject } from 'react'\nimport { ConnectionList, EventItem } from '../types'\nimport { EventLogs, PeerAcks } from '.'\n\ntype UseSendSyncArgs = {\n  connections: ConnectionList\n  connectionLogSizeMap: MutableRefObject<PeerAcks>\n  eventLogs: EventLogs\n}\nfunction useSendSyncs({\n  connections,\n  connectionLogSizeMap,\n  eventLogs\n}: UseSendSyncArgs): void {\n  useEffect(() => {\n    if (eventLogs == null) return\n    for (const connection of connections) {\n      const eventLog = eventLogs[connection.peer] || []\n      const numSent = connectionLogSizeMap.current[connection.peer] || 0\n      if (eventLog.length > numSent) {\n        const events = eventLog\n          .slice(numSent)\n          .map((e: EventItem, i: number) => ({ ...e, index: numSent + i }))\n        connection.send(events)\n      }\n    }\n  }, [connections, connectionLogSizeMap, eventLogs])\n}\n\nexport default useSendSyncs\n","import seedrandom, { State } from 'seedrandom'\nimport { patch } from 'jsondiffpatch'\nimport { isRandomMove } from '../random'\nimport { isSecretMove } from '../secret'\nimport { Game, SimpleMoveArgs, RandomMove, SimpleMove, PeerId } from '..'\nimport { EventList, LogSize, Index } from '../types'\n\nexport function logSizeToIndex(logSize: LogSize): Index {\n  const index = logSize - 1\n  return index < 0 ? null : index\n}\n\nexport const constructReducer = ({\n  game,\n  events,\n  roomId\n}: {\n  game: Game\n  events: EventList\n  roomId: PeerId\n}) => (state: State) => {\n  try {\n    return events.reduce((o, event) => {\n      const moveFn = game[event.move]\n\n      if (isSecretMove(moveFn)) {\n        if (event.patch != null) {\n          patch(o, event.patch)\n        }\n        return o\n      }\n\n      const moveArgs: SimpleMoveArgs = {\n        state: o,\n        hostId: roomId,\n        callerId: event.connectionId,\n        args: event.args\n      }\n\n      if (isRandomMove(moveFn)) {\n        if (event.seed == null) {\n          throw new Error('Random moves require a seed from the host')\n        }\n        const random = seedrandom(event.seed)\n        const randomMoveFn = moveFn as RandomMove\n        return randomMoveFn({ ...moveArgs, random })\n      }\n\n      const simpleMoveFn = moveFn as SimpleMove\n      return simpleMoveFn(moveArgs)\n    }, state)\n  } catch (e) {\n    console.error(e)\n    return state\n  }\n}\n","import { useEffect } from 'react'\nimport { constructReducer } from './funcs'\nimport { Game, PeerId } from '..'\nimport { EventList } from '../types'\nimport { CacheAndStateSetter, LogSizeSetter } from '.'\n\ntype SyncArgs = {\n  setState: CacheAndStateSetter\n  roomId: PeerId\n  game: Game\n  events: EventList\n}\nconst sync = ({ setState, roomId, game, events }: SyncArgs) => {\n  const reducer = constructReducer({ game, roomId, events })\n  setState(({ state }) => {\n    const newState = reducer(state)\n    return { state: newState, cache: newState }\n  })\n}\n\ntype UpdateLogSizeArgs = { setLogSize: LogSizeSetter; events: EventList }\nconst updateLogSize = ({ setLogSize, events }: UpdateLogSizeArgs) => {\n  setLogSize((events[events.length - 1].index ?? 0) + 1)\n}\n\ntype UseSyncArgs = {\n  data: EventList\n  clearData: () => void\n  game: Game\n  roomId: PeerId\n  setState: CacheAndStateSetter\n  setLogSize: LogSizeSetter\n}\nfunction useSync({\n  data,\n  clearData,\n  game,\n  roomId,\n  setState,\n  setLogSize\n}: UseSyncArgs): void {\n  useEffect(() => {\n    if (!data || !data.length) return\n    console.info('SYNC', data)\n    const events = [...data]\n    clearData()\n    updateLogSize({ setLogSize, events })\n    sync({ setState, roomId, game, events })\n  }, [data, clearData, game, roomId, setLogSize, setState])\n}\n\nexport default useSync\n","import { useEffect, useState, Dispatch, SetStateAction } from 'react'\nimport { constructMoves } from '../shared'\nimport { logSizeToIndex, constructReducer } from './funcs'\nimport { isRandomMove } from '../random'\nimport { isSecretMove } from '../secret'\nimport { Moves, PeerId, Game, Args, ConnectionStatus } from '..'\nimport { LogSize, Emit } from '../types'\nimport { CacheAndStateSetter, DataConnectionRef } from '.'\n\nconst emit = ({ conn, emit }: { emit: Emit; conn: DataConnectionRef }) => {\n  console.info('EMIT', emit)\n  conn.current?.send(emit)\n}\n\ntype PreemptArgs = {\n  game: Game\n  setState: CacheAndStateSetter\n  move: string\n  args: Args\n  connectionId: PeerId\n  roomId: PeerId\n}\nconst preempt = ({\n  setState,\n  game,\n  move,\n  args,\n  connectionId,\n  roomId\n}: PreemptArgs) => {\n  const reducer = constructReducer({\n    game,\n    roomId,\n    events: [{ index: null, move, args, connectionId }]\n  })\n  setState(({ state, cache }) => ({\n    cache: reducer(cache),\n    state\n  }))\n}\n\ntype ConstructMovesHandlerArgs = {\n  conn: DataConnectionRef\n  connectionId: PeerId\n  logSize: LogSize\n  roomId: PeerId\n  game: Game\n  setState: CacheAndStateSetter\n  setMoves: Dispatch<SetStateAction<Moves | null>>\n}\nfunction constructMovesHandler({\n  conn,\n  connectionId,\n  setMoves,\n  setState,\n  game,\n  logSize,\n  roomId\n}: ConstructMovesHandlerArgs): void {\n  const handleMove = ({ move, args }: { move: string; args: Args }) => {\n    const moveFn = game[move]\n    if (!isRandomMove(moveFn) && !isSecretMove(moveFn)) {\n      preempt({ setState, game, move, args, roomId, connectionId })\n    }\n    const index = logSizeToIndex(logSize)\n    emit({ conn, emit: { move, args, index } })\n  }\n  setMoves(() => constructMoves({ game, handleMove }))\n}\n\ntype UseMovesArgs = {\n  connected: ConnectionStatus\n  conn: DataConnectionRef\n  id: PeerId\n  setState: CacheAndStateSetter\n  roomId: PeerId\n  game: Game\n  logSize: LogSize\n}\ntype UseMovesReturn = { moves: Moves | null }\nfunction useMoves({\n  connected,\n  conn,\n  id,\n  setState,\n  roomId,\n  game,\n  logSize\n}: UseMovesArgs): UseMovesReturn {\n  const [moves, setMoves] = useState<Moves | null>(null)\n  useEffect(() => {\n    if (!connected) return\n    constructMovesHandler({\n      conn,\n      connectionId: id,\n      setMoves,\n      setState,\n      roomId,\n      game,\n      logSize\n    })\n  }, [connected, conn, id, setMoves, setState, roomId, game, logSize])\n  return { moves }\n}\n\nexport default useMoves\n","import useAck from './useAck'\nimport useSync from './useSync'\nimport useMoves from './useMoves'\nimport useConnection from './useConnection'\nimport { useIdStore, useStateStore, useLogSizeStore } from './stores'\nimport { UsePartyGuestArgs, UsePartyGuestReturn } from '..'\n\n/**\n * A React hook that, provided the game rules and a shared room identifier,\n * returns the guest's state representation and an object with moves\n * to call on the guest's user action.\n */\nfunction usePartyGuest({\n  roomId,\n  game\n}: UsePartyGuestArgs): UsePartyGuestReturn {\n  const { id } = useIdStore(roomId)\n  const { cache, setState } = useStateStore(roomId)\n  const { logSize, setLogSize } = useLogSizeStore(roomId)\n  const { connected, conn, data, clearData } = useConnection({ id, roomId })\n  useAck({ connected, conn, logSize })\n  useSync({ data, clearData, game, roomId, setState, setLogSize })\n  const { moves } = useMoves({\n    connected,\n    conn,\n    id,\n    setState,\n    roomId,\n    game,\n    logSize\n  })\n  return { connectionId: id, connected, state: cache, moves }\n}\n\nexport default usePartyGuest\n","import usePersist from '../usePersist'\nimport { v4 as uuid } from 'uuid'\nimport { PeerId, State } from '..'\nimport { LogSize } from '../types'\nimport { CacheAndState, CacheAndStateSetter } from '.'\n\nimport { Dispatch, SetStateAction } from 'react'\n\nexport function useIdStore(roomId: PeerId): { id: PeerId } {\n  const [id] = usePersist<PeerId>(window.localStorage, `id-${roomId}`, uuid)\n  return { id }\n}\n\ntype UseStateStoreReturn = { cache: State; setState: CacheAndStateSetter }\nexport function useStateStore(roomId: PeerId): UseStateStoreReturn {\n  const [{ cache }, setState] = usePersist<CacheAndState>(\n    window.localStorage,\n    `guestState-${roomId}`,\n    { state: {}, cache: {} }\n  )\n  return { cache, setState }\n}\n\ntype UseLogSizeStoreReturn = {\n  logSize: LogSize\n  setLogSize: Dispatch<SetStateAction<LogSize>>\n}\nexport function useLogSizeStore(roomId: PeerId): UseLogSizeStoreReturn {\n  const [logSize, setLogSize] = usePersist<number>(\n    window.localStorage,\n    `logSize-${roomId}`,\n    0\n  )\n  return { logSize, setLogSize }\n}\n","import { useEffect, useRef, useState, useReducer } from 'react'\nimport usePeer from '../usePeer'\nimport { DataConnectionRef } from '.'\nimport Peer, { DataConnection } from 'peerjs'\nimport { PeerId } from '..'\nimport { EventList } from '../types'\n\nfunction connect({\n  roomId,\n  peer\n}: {\n  roomId: PeerId\n  peer: Peer\n}): DataConnection {\n  return peer.connect(roomId, { serialization: 'json' })\n}\n\ntype UseConnectionArgs = { id: PeerId; roomId: PeerId }\ntype UseConnectionReturn = {\n  connected: boolean\n  conn: DataConnectionRef\n  data: EventList\n  clearData: () => void\n}\nfunction useConnection({ id, roomId }: UseConnectionArgs): UseConnectionReturn {\n  const conn = useRef<DataConnection | null>(null)\n  const { open, peer } = usePeer(id)\n  const [data, setData] = useState<EventList>([])\n  const [connected, setConnected] = useState<boolean>(false)\n  const [attempts, countAttempt] = useReducer((a: number) => a + 1, 0)\n\n  useEffect(() => {\n    if (!peer || !open || connected) return\n\n    conn.current = connect({ peer, roomId })\n\n    const retry = () => {\n      conn.current = null\n      setConnected(false)\n      countAttempt()\n    }\n    const timeout = setTimeout(retry, 1000)\n\n    conn.current.on('open', () => {\n      clearTimeout(timeout)\n      setConnected(true)\n    })\n\n    conn.current.on('data', (data) => {\n      setData((stream) => [...stream, ...data])\n    })\n\n    conn.current.on('close', () => {\n      clearTimeout(timeout)\n      retry()\n    })\n\n    conn.current.on('error', (error) => {\n      console.error(error)\n    })\n  }, [attempts, open, connected, roomId, peer])\n\n  const clearData = () => {\n    setData([])\n  }\n  return { connected: open && connected, conn, data, clearData }\n}\n\nexport default useConnection\n","import { useEffect } from 'react'\nimport { logSizeToIndex } from './funcs'\nimport { DataConnectionRef } from '.'\nimport { Index } from '../types'\n\nconst ack = ({ conn, index }: { conn: DataConnectionRef; index: Index }) => {\n  conn.current?.send({ index })\n}\n\ntype UseAckArgs = {\n  connected: boolean\n  conn: DataConnectionRef\n  logSize: number\n}\nfunction useAck({ connected, conn, logSize }: UseAckArgs): void {\n  useEffect(() => {\n    if (!conn.current || !connected) return\n    const index = logSizeToIndex(logSize)\n    ack({ conn, index })\n  }, [connected, conn, logSize])\n}\n\nexport default useAck\n","import { Suspense, lazy } from \"react\";\n\nconst withSuspense = (Component) => (props) => (\n  <Suspense fallback=\"Loading...\">\n    <Component {...props}/>\n  </Suspense>\n)\n\nconst Host = withSuspense(lazy(() => import(\"./Host\")))\nconst Guest = withSuspense(lazy(() => import(\"./Guest\")))\n\nexport { Host, Guest }\n","import game from \"./game\";\nimport { Host, Guest } from \"./client\";\nimport thumbnail from \"./tic-tac-toe.jpg\";\n\nconst name = \"Tic Tac Toe\";\nconst description = \"a paper-and-pencil game for two players, X and O, who take turns marking the spaces in a 3×3 grid.\"\nconst image = { alt: \"tic tac toe\", src: thumbnail }\n\nconst TicTacToe = { name, description, image, Host, Guest, game };\n\nexport default TicTacToe;\n","export default __webpack_public_path__ + \"static/media/tic-tac-toe.3795d447.jpg\";","const joinAsAPlayer = ({ state, callerId, args }) => {\n  if (state.players.list.length >= state.players.maxPlayers) {\n    throw new Error(\"The number of players has reached it's maximum\");\n  }\n  const player = { connectionId: callerId, name: args.name, emoji: args.emoji };\n  const playerList = [...state.players.list, player];\n  const players = { ...state.players, list: playerList };\n  return { ...state, players };\n}\n\nconst initPlayers = ({ state, args }) => {\n  const players = {\n    maxPlayers: args.maxPlayers,\n    minPlayers: args.minPlayers,\n    everyoneIsIn: false,\n    list: []\n  }\n  return { ...state, players }\n}\n\nconst everyoneIsIn = ({ state }) => {\n  if (state.players.list.length > state.players.maxPlayers) {\n    throw new Error(\"Too many players\");\n  }\n  if (state.players.list.length < state.players.minPlayers) {\n    throw new Error(\"Not enough players\");\n  }\n  return {\n    ...state,\n    players: {\n      ...state.players,\n      everyoneIsIn: true\n    }\n  }\n}\n\nconst game = {\n  initPlayers,\n  everyoneIsIn,\n  joinAsAPlayer,\n}\n\nexport default game;\n","import React, { useEffect } from \"react\";\nimport Emoji from \"components/emoji\";\nimport { Flex, Box, Button, Text } from \"rebass/styled-components\";\n\nconst checkIfCanStartGame = ({ state: { players } }) => (\n  players.list.length >= players.minPlayers\n);\n\nconst PlayerList = ({ children, players }) => {\n  return (\n    <Flex>\n      <Box flexGrow={1}>\n        {players.map(({ name, emoji }, index) => (\n          <Flex alignItems=\"center\"  key={index}>\n            <Box width=\"2em\" height=\"2em\" my={2} mx={3}>\n              {emoji && <Emoji emoji={emoji}/>}\n            </Box>\n            {name}\n          </Flex>\n        ))}\n      </Box>\n      <Box flexGrow={3}>\n        {children}\n      </Box>\n    </Flex>\n  );\n}\n\nconst HowToJoin = ({ roomId }) => (\n  <Text as=\"h1\" fontSize={[ 3, 4, 5 ]} fontWeight='bold' color='secondary'>\n    Join: {roomId}\n  </Text>\n)\n\nconst Host = ({ state, roomId, moves, connections, maxPlayers, minPlayers, children }) => {\n  useEffect(() => {\n    if (!state.players && moves?.initPlayers) {\n      moves.initPlayers({ maxPlayers, minPlayers });\n    }\n  }, [state.players, moves]);\n\n  if (!state.players) return null;\n  if (state.players.everyoneIsIn) return children;\n  const canStartGame = checkIfCanStartGame({ state });\n  return (\n    <PlayerList players={state.players.list}>\n      <Flex height=\"100%\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"space-around\">\n        <HowToJoin roomId={roomId}/>\n        {canStartGame && (\n          <Button\n            my={2}\n            onClick={() => moves.everyoneIsIn()}\n            onKeyPress={() => moves.everyoneIsIn()}\n          >\n            Start Game\n          </Button>\n        )}\n      </Flex>\n    </PlayerList>\n  )\n};\n\nexport default Host;\n","import React, { useState } from \"react\";\nimport Emoji, { EmojiPicker } from \"components/emoji\";\nimport { Flex, Box, Button, Text } from \"rebass/styled-components\";\nimport { Input, Label } from \"@rebass/forms/styled-components\";\n\nconst JoinScreen = ({ onJoin }) => {\n  const [name, setName] = useState(\"\");\n  const [emoji, setEmoji] = useState('😎');\n  const [pickerIsShown, setPickerIsShown] = useState(false);\n  const showPicker = () => setPickerIsShown(true);\n  const hidePicker = () => setPickerIsShown(false);\n\n  const join = () => {\n    name?.length && onJoin({ name, emoji })\n  }\n\n  const onSelectEmoji = (emoji) => {\n    setEmoji(emoji);\n    hidePicker();\n  }\n\n  return (\n    <>\n      {pickerIsShown && <EmojiPicker onHide={hidePicker} onSelectEmoji={onSelectEmoji} />}\n      <Flex my={5} alignItems=\"center\" flexDirection=\"column\">\n        <Box width={'10em'} height={'10em'} onKeyPress={showPicker} onClick={showPicker}>\n          <Emoji emoji={emoji}/>\n        </Box>\n        <Box my={2}>\n          <Text fontSize={[ 3, 4, 5 ]} fontWeight='bold' color='primary'>\n            {name}\n          </Text>\n        </Box>\n        <Box>\n          <Label htmlFor=\"nickname\">Nickname</Label>\n          <Input id=\"nickname\" onChange={(e) => setName(e.target.value)} value={name}/>\n        </Box>\n        <Box my={3}>\n          <Button variant=\"primary\" onKeyPress={join} onClick={join}>\n            Sit down to Play\n          </Button>\n        </Box>\n      </Flex>\n    </>\n  );\n}\n\nconst Spectator = () => (\n  <Flex height=\"100vh\" justifyContent=\"center\" alignItems=\"center\">\n    <Text fontSize={[ 3, 4, 5 ]} fontWeight='bold' color='primary'>\n      You are a Spectator\n    </Text>\n  </Flex>\n)\n\nconst Waiting = () => (\n  <Flex height=\"100vh\" justifyContent=\"center\" alignItems=\"center\">\n    <Text as=\"h1\" fontSize={[ 3, 4, 5 ]} fontWeight='bold' color='primary'>\n      Be patient, the host is setting up your game.\n    </Text>\n  </Flex>\n)\n\nconst findConnectionIsPlayer = ({ players, connectionId }) => (\n  players.findIndex(player => player.connectionId === connectionId) > -1\n)\n\nconst checkIfGameIsFull = ({ state: { players } }) => (\n  players.list.length > players.maxPlayers\n);\n\nconst Guest = ({ children, state, roomId, moves, connectionId }) => {\n  if (!state.players) {\n    return <Waiting/>;\n  }\n\n  const isPlayer = findConnectionIsPlayer({ players: state.players.list, connectionId });\n\n  const onJoin = ({ name, emoji }) => {\n    moves.joinAsAPlayer({ name, emoji });\n  }\n\n  if (state.players.everyoneIsIn) {\n    return isPlayer ? children : <Spectator/>;\n  } else {\n    const gameIsFull = checkIfGameIsFull({ state });\n    return isPlayer || gameIsFull ? <Waiting/> : <JoinScreen onJoin={onJoin}/>;\n  }\n}\n\nexport default Guest;\n","import game from \"./game\";\nimport { Host, Guest, withGuestPlayers, withHostPlayers } from \"./client\";\n\nconst Players = { Host, Guest, game };\n\nexport const withPlayers = (options, { Host: OriginalHost, Guest: OriginalGuest, game: originalGame, ...rest }) => {\n    const NewGuest = withGuestPlayers(OriginalGuest)\n    const NewHost = withHostPlayers(options, OriginalHost)\n    const newGame = { ...game, ...originalGame }\n    return { Guest: NewGuest, Host: NewHost, game: newGame, ...rest  }\n}\n\nexport default Players;\n","import React from \"react\";\nimport Host from \"./Host\";\nimport Guest from \"./Guest\";\n\nconst withGuestPlayers = (Component) => ({ children, ...props }) => (\n    <Guest {...props}>\n        <Component {...props}>\n            {children}\n        </Component>\n    </Guest>\n)\n\nconst withHostPlayers = (options, Component) => ({ children, ...props }) => (\n    <Host {...options} {...props}>\n        <Component {...props}>\n            {children}\n        </Component>\n    </Host>\n)\n\nexport { Host, Guest, withGuestPlayers, withHostPlayers }\n","import { constructDeckOfCards } from \"components/playing-card\";\nimport { withRandom, withSecret, shuffle } from \"@compendium/peer-party\";\n\nconst contextIsHosts = ({ hostId, contextId }) => (\n  hostId === contextId \n);\n\nconst startGame = withSecret(({ state, hostId, contextId }) => {\n  const newState = { ...state, discard: [] };\n  const isHost = contextIsHosts({ hostId, contextId });\n  if (isHost) {\n    newState.deck = constructDeckOfCards();\n  } else {\n    newState.hand = []\n  }\n  return newState;\n})\n\nconst deal = withRandom(withSecret(({ state, random, hostId, contextId, revealSecret }) => {\n  const deck = revealSecret(hostId, s => s.deck)\n  const shuffledDeck = shuffle({ random, array: deck })\n  const isHost = contextIsHosts({ hostId, contextId })\n  if (isHost) {\n    return { ...state, deck: [] }\n  } else {\n    const playerIndex = state.players.list.findIndex(\n      player => player.callerId === contextId\n    )\n    const hand = shuffledDeck.filter(\n      (_, index) => {\n        return (index % state.players.list.length) === playerIndex\n      }\n    )\n    return { ...state, hand }\n  }\n}))\n\nconst game = {\n  startGame,\n  deal,\n}\n\nexport default game;\n","import { Suspense, lazy } from \"react\";\n\nconst withSuspense = (Component) => (props) => (\n  <Suspense fallback=\"Loading...\">\n    <Component {...props}/>\n  </Suspense>\n)\n\nconst Host = withSuspense(lazy(() => import(\"./Host\")))\nconst Guest = withSuspense(lazy(() => import(\"./Guest\")))\n\nexport { Host, Guest }\n","import { withPlayers } from \"components/players\";\nimport game from \"./game\";\nimport { Host, Guest } from \"./client\";\nimport thumbnail from \"./whist.jpg\";\n\nconst name = \"Whist\";\nconst description = \"Whist is a classic English trick-taking card game which was widely played in the 18th and 19th centuries.\"\nconst image = { alt: \"whist game\", src: thumbnail }\n\nconst playersOptions = { minPlayers: 4, maxPlayers: 4 }\n\nconst Whist = withPlayers(playersOptions, { name, description, image, Host, Guest, game });\n\nexport default Whist;\n","export default __webpack_public_path__ + \"static/media/whist.c3db2b56.jpg\";","import { withSecret, withRandom } from \"@compendium/peer-party\";\n\nconst game = {\n  passPotato: withRandom(withSecret(({ callerId, revealSecret, state, random, contextId }) => {\n    if (!revealSecret(callerId, s => s.hotPotato)) {\n      throw new Error(\"Must have potato to throw it\");\n    }\n    const numPlayers = state.players.list.length;\n    const playerIndex = Math.floor(random() * numPlayers);\n    const player = state.players.list[playerIndex];\n    if (player.callerId === contextId) {\n      return { ...state, hotPotato: true }\n    } else {\n      return { ...state, hotPotato: false }\n    }\n  })),\n\n  setBackgroundColour: ({ state, args }) => {\n    return { ...state, backgroundColour: args.backgroundColour };\n  },\n\n  throwPotato: withRandom(withSecret(({ state, random, contextId }) => {\n    const numPlayers = state.players.list.length;\n    const playerIndex = Math.floor(random() * numPlayers);\n    const player = state.players.list[playerIndex];\n    if (player.callerId === contextId) {\n      return { ...state, hotPotato: true }\n    } else {\n      return { ...state, hotPotato: false }\n    }\n  })),\n\n  stopMusic: withSecret(({ state, revealSecret }) => {\n    const hotPotatoPlayer = state.players.list.find(({ callerId  }) => (\n      revealSecret(callerId, s => s.hotPotato)\n    ));\n    return { ...state, loser: hotPotatoPlayer.callerId };\n  }),\n}\n\nexport default game;\n","import { Suspense, lazy } from \"react\";\n\nconst withSuspense = (Component) => (props) => (\n  <Suspense fallback=\"Loading...\">\n    <Component {...props}/>\n  </Suspense>\n)\n\nconst Host = withSuspense(lazy(() => import(\"./Host\")))\nconst Guest = withSuspense(lazy(() => import(\"./Guest\")))\n\nexport { Host, Guest }\n","import game from \"./game\";\nimport { Host, Guest } from \"./client\";\nimport presetTheme from '@rebass/preset'\nimport { withPlayers } from \"components/players\"\nimport thumbnail from \"./hot-potato.jpg\"\n\nconst name = \"Hot Potato\";\nconst theme = presetTheme;\n\nconst description = \"Pass the potato to your friends.\"\nconst image = { alt: \"A potato\", src: thumbnail }\n\nconst HotPotato = withPlayers({ maxPlayers: 16, minPlayers: 2 }, {\n  name,\n  description,\n  image,\n  theme,\n  Host,\n  Guest,\n  game\n})\n\nexport default HotPotato;\n","export default __webpack_public_path__ + \"static/media/hot-potato.1be24716.jpg\";","import Chess from 'chess.js';\n\nconst game = {\n  chessMove: ({ state, args }) => {\n    const chess = new Chess(state.board);\n    if (!chess.move(args.chessMove)) {\n      throw new Error(\"Invalid move\")\n    }\n    return { ...state, board: chess.fen() }\n  }\n}\n\nexport default game;\n","import { Suspense, lazy } from \"react\";\n\nconst withSuspense = (Component) => (props) => (\n  <Suspense fallback=\"Loading...\">\n    <Component {...props}/>\n  </Suspense>\n)\n\nconst Host = withSuspense(lazy(() => import(\"./Host\")))\nconst Guest = withSuspense(lazy(() => import(\"./Guest\")))\n\nexport { Host, Guest }\n","export default __webpack_public_path__ + \"static/media/chess.03b3bcf5.jpg\";","import TicTacToe from \"games/tic-tac-toe\";\nimport Whist from \"games/whist\";\nimport HotPotato from \"games/hot-potato\";\nimport Chess from \"games/chess\";\n\nconst compendium = [\n  Chess,\n  TicTacToe,\n  HotPotato,\n  Whist,\n];\n\nexport default compendium;\n","import game from \"./game\";\nimport { Host, Guest } from \"./client\";\nimport presetTheme from '@rebass/preset'\nimport thumbnail from \"./chess.jpg\"\n\nconst name = \"Chess\";\nconst theme = presetTheme;\n\nconst description = \"Chess is a recreational and competitive board game played between two players.\";\nconst image = { alt: \"A chess board\", src: thumbnail }\n\nconst Chess = { name, theme, image, description, Host, Guest, game };\n\nexport default Chess;\n","import randomWords from \"random-words\";\nimport isEqual from \"lodash/isEqual\";\n\nconst permutations = [\n  [0, 1, 2],\n  [0, 2, 1],\n  [1, 0, 2],\n  [2, 0, 1],\n  [2, 1, 0],\n  [1, 2, 0],\n];\n\nexport const createRoomId = (compendiumIndex) => {\n  const order = permutations[compendiumIndex]\n  const words = randomWords({ exactly: 3 }).sort();\n  const orderedWords = order.map(o => words[o])\n  const roomId = orderedWords.join('-')\n  return roomId\n}\n\nexport const decodeCompendiumIndex = (roomId) => {\n  const words = roomId.split('-')\n  const sortedWords = [...words].sort()\n  const permutation = words.map(word => sortedWords.findIndex((w) => word === w))\n  const compendiumIndex = permutations.findIndex((permu) => isEqual(permu, permutation))\n  return compendiumIndex;\n}\n","import { useState, useEffect } from \"react\";\nimport compendium from \"./compendium\";\nimport { decodeCompendiumIndex } from \"./rooms\";\n\nconst getGame = (roomId) => {\n  const compendiumIndex = decodeCompendiumIndex(roomId)\n  const game = compendium[compendiumIndex];\n  return game;\n}\n\nconst useGame = (roomId) => {\n  const [game, setGame] = useState({ name: null, Host: null, Guest: null, game: null });\n  useEffect(() => setGame(getGame(roomId)), [])\n  return game;\n}\n\nexport default useGame;\n","import { useState } from \"react\";\nimport { Box } from \"rebass/styled-components\";\nimport { Input, Label } from \"@rebass/forms/styled-components\";\nimport uniqueId from 'lodash/uniqueId';\n\nfunction LabelledInput({\n  label,\n  onChange = () => {},\n  value = \"\",\n  placeholder = \"\",\n  ...props\n}) {\n  const [id] = useState(() => uniqueId('input-'))\n  return (\n    <Box>\n      <Label htmlFor={id} color=\"text\" fontFamily=\"body\" my={2}>{label}</Label>\n      <Input id={id} color=\"text\" fontFamily=\"body\" my={2} onChange={onChange} value={value} placeholder={placeholder}/>\n    </Box>\n  );\n}\n\nexport default LabelledInput;","import Input from \"./Input\";\nexport default Input;","import JoinForm from \"./JoinForm\"\nexport default JoinForm;","import React, { useState } from \"react\";\nimport { Box, Button } from \"rebass/styled-components\";\nimport Input from \"components/input\"\n\nconst JoinForm = ({ onJoinGame = () => {} }) => {\n  const [value, set] = useState();\n\n  const onChange = (e) => {\n    set(e.target.value);\n    e.preventDefault();\n  }\n\n  const onSubmit = () => onJoinGame(value);\n\n  return (\n    <Box minWidth=\"10em\" px={2} my={4} width={['60%', '50%', '20em']}>\n      <Input onChange={onChange} value={value} label=\"Enter the code to join a game\"/>\n      <Button my={2} onClick={onSubmit} onKeyPress={onSubmit}>Join Game</Button>\n    </Box>\n  );\n}\n\nexport default JoinForm;","import { useState } from \"react\";\nimport { Box } from \"rebass/styled-components\";\nimport { Label, Select } from \"@rebass/forms/styled-components\";\nimport uniqueId from 'lodash/uniqueId';\n\nfunction Dropdown({ options, onChange, value, label, ...props }) {\n  const [id] = useState(() => uniqueId('input-'))\n  return (\n    <Box>\n      <Label htmlFor={id} color=\"text\" fontFamily=\"body\" my={2}>{label}</Label>\n      <Select id={id} color=\"text\" fontFamily=\"body\" my={2} onChange={onChange} value={value}>\n        {options.map((option, index) =>\n          <option value={index} key={index}>{option}</option>)}\n      </Select>\n    </Box>\n  );\n}\n\nexport default Dropdown;","import Dropdown from \"./Dropdown\";\nexport default Dropdown;","import HostForm from \"./HostForm\";\nexport default HostForm;","import { useState } from \"react\";\nimport { Box, Button } from \"rebass/styled-components\";\nimport Dropdown from \"components/dropdown\";\n\nconst HostForm = ({ compendium = [], onNewGame = () => {} }) => {\n  const [value, set] = useState(0);\n\n  const onChange = (e) => {\n    set(e.target.value);\n    e.preventDefault();\n  }\n\n  const onSubmit = () => onNewGame(value);\n\n  const options = compendium.map(({ name }) => name);\n\n  return (\n    <Box minWidth=\"10em\" px={2} my={4} width={['60%', '50%', '20em']}>\n      <Dropdown options={options} label=\"Choose a game to host...\" onChange={onChange} value={value} />\n      <Button my={2} onClick={onSubmit} onKeyPress={onSubmit}>Host New Game</Button>\n    </Box>\n  )\n}\n\nexport default HostForm;","import toPairs from \"lodash/toPairs\";\nimport { Flex, Heading, Link } from \"rebass/styled-components\";\n\nfunction NavHeading({ children }) {\n  return (\n    <Flex flexGrow={2} justifyContent=\"center\" alignItems=\"center\">\n      <Heading>{children}</Heading>\n    </Flex>\n  ) \n}\n\nfunction NavLink({ children, onKeyPress, onClick, href=\"#\", ...rest }) {\n  const prepareHandler = (handler) => (e) => {\n    e.preventDefault();\n    if (handler) handler();\n    return false;\n  }\n  return (\n    <Flex {...rest} py={2} px={3}>\n      <Link\n        fontFamily=\"heading\"\n        variant=\"nav\"\n        onClick={onClick && prepareHandler(onClick)}\n        onKeyPress={onKeyPress && prepareHandler(onKeyPress)}\n        href={href}\n      >\n        {children}\n      </Link>\n    </Flex>\n  )\n}\n\nfunction MenuItem ({ children, ...rest }) {\n  return (\n    <NavLink flexGrow=\"1\" justifyContent=\"center\" {...rest}>{children}</NavLink>\n  )\n}\n\nfunction Nav ({ children }) {\n  return (\n    <Flex flexWrap=\"wrap\" p={1} backgroundColor={\"muted\"}>\n      {children}\n    </Flex>\n  )\n}\n\nfunction NavMenu ({ children, hidden }) {\n  if (hidden) return null;\n  return (\n    <Flex flexWrap=\"wrap\" p={1} backgroundColor={\"highlight\"}>\n      {children}\n    </Flex>\n  )\n}\n\nfunction NavBar ({\n  leftButtonLabel = \"Home\",\n  leftButtonHandler = () => {},\n  title = \"Compendium Games\",\n  onMenuToggle = () => {},\n  menuIsHidden = false,\n  menuItems = {}\n }) {\n  // const history = useHistory();\n  // const goHome = () => history.push(\"/\")\n  return (\n    <>\n      <Nav>\n        <NavLink onClick={leftButtonHandler} onKeyPress={leftButtonHandler}>{leftButtonLabel}</NavLink>\n        <NavHeading>{title}</NavHeading>\n        <NavLink onClick={onMenuToggle} onKeyPress={onMenuToggle}>\n          {menuIsHidden ? \"Menu\" : \"Close\"}\n        </NavLink>\n      </Nav>\n      <NavMenu hidden={menuIsHidden}>\n        {toPairs(menuItems).map(([label, handler], index) => (\n          handler.constructor === String ? (\n            <MenuItem key={index} href={handler}>{label}</MenuItem>\n          ) : (\n            <MenuItem key={index} onClick={handler} onKeyPress={handler}>{label}</MenuItem>\n          )\n        ))}\n      </NavMenu>\n    </>\n  )\n}\n\nexport default NavBar;","import NavBar from \"./NavBar\";\nexport default NavBar;","import { Suspense, lazy } from \"react\";\nimport { Heading, Flex } from \"rebass/styled-components\";\n\nconst ReactTyped = lazy(() => import(\"react-typed\"));\n\nconst TypedBanner = ({ typedSentences, stopped = false }) => (\n  <Flex px=\"20%\" py={5} my={4} backgroundColor=\"secondary\">\n    <Heading color=\"muted\" sx={{ userSelect: \"none\" }}>\n      <Suspense fallback=\"Loading...\">\n        <ReactTyped\n          strings={typedSentences}\n          typeSpeed={50}\n          backSpeed={50}\n          backDelay={1}\n          loop\n          smartBackspace\n          stopped={stopped}\n        />\n      </Suspense>\n    </Heading>\n  </Flex>\n);\n\nexport default TypedBanner;","import TypedBanner from \"./TypedBanner\";\nexport default TypedBanner;","import Paragraph from \"components/paragraph\";\nimport Heading from \"components/heading\";\nimport { Button, Box, Card, Image, Flex } from \"rebass/styled-components\";\n\nconst leftWidthVariants = {\n  primary: [\"20em\", \"22em\"],\n  secondary: [\"14em\", \"16em\"],\n};\n\nconst rightWidthVariants = {\n  primary: [\"14em\", \"16em\"],\n  secondary: [\"10em\", \"12em\"],\n};\n\nconst CallToActionCard = ({\n  imageSrc,\n  imageAlt,\n  headingText,\n  bodyText,\n  onAction = () => {},\n  buttonLabel,\n  variant = \"primary\",\n}) => {\n  const leftWidth = leftWidthVariants[variant];\n  const rightWidth = rightWidthVariants[variant];\n  return (\n    <Card m={3} display=\"inline-flex\">\n      <Flex flexDirection=\"row\" height=\"100%\">\n        <Flex width={leftWidth} backgroundColor=\"gray\" alignItems=\"center\" justifyContent=\"center\" m={3}>\n          <Image src={imageSrc} alt={imageAlt} />\n        </Flex>\n        <Box width={rightWidth} m={3} pt={2}>\n          <Heading variant={variant}>{headingText}</Heading>\n          <Paragraph>{bodyText}</Paragraph>\n          <Flex justifyContent=\"end\" mt={3}>\n            <Button\n              onClick={onAction}\n              onKeyPress={onAction}\n              variant={variant}\n            >\n              {buttonLabel}\n            </Button>\n          </Flex>\n        </Box>\n      </Flex>\n    </Card>\n  );\n}\n\nexport default CallToActionCard;","import CallToActionCard from \"./CallToActionCard\";\nexport default CallToActionCard;","import { useReducer } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { createRoomId } from \"./rooms\";\nimport compendium from \"./compendium\";\nimport { Flex } from \"rebass/styled-components\";\nimport JoinForm from \"components/join-form\";\nimport HostForm from \"components/host-form\";\nimport NavBar from \"components/navbar\";\nimport TypedBanner from \"components/typed-banner\";\nimport CallToActionCard from \"components/cta-card\"\n\nconst Home = ({ stopped }) => {\n  const { push } = useHistory();\n  const [hideMenu, toggleMenu] = useReducer(o => !o, true)\n\n  const onNewGame = (compendiumIndex) => {\n    const roomId = createRoomId(compendiumIndex);\n    push(`/host/${roomId}`)\n  }\n\n  const onJoinGame = (roomId) => {\n    push(`/guest/${roomId}`)\n  }\n\n  const onGoHome = () => push(\"/\");\n\n  const menuItems = {\n    GitHub: \"https://www.github.com/SmileyJames/compendium\",\n    Documentation: \"/docs\",\n    Storybook: \"/storybook\",\n  }\n\n  const typedSentences = \n    compendium.map(o => o.name).map(name => `Remotely play a game of ${name}!`)\n\n  return (\n    <>\n      <NavBar leftButtonHandler={onGoHome} menuIsHidden={hideMenu} onMenuToggle={toggleMenu} menuItems={menuItems} />\n      <Flex flexWrap=\"wrap\" flexDirection=\"row\" justifyContent=\"space-evenly\">\n        <HostForm compendium={compendium} onNewGame={onNewGame} />\n        <JoinForm onJoinGame={onJoinGame} />\n      </Flex>\n      <TypedBanner stopped={stopped} typedSentences={typedSentences}/>\n      <Flex justifyContent=\"space-around\" flexDirection=\"row\" flexWrap=\"wrap\">\n        {\n          compendium.map(\n            ({ name, image, description }, index) => (\n              <CallToActionCard\n                key={index}\n                variant={index === 0 ? \"primary\" : \"secondary\"}\n                headingText={name}\n                imageSrc={image.src}\n                imageAlt={image.alt}\n                bodyText={description}\n                onAction={() => onNewGame(index)}\n                buttonLabel={`Start ${name}`}\n              />\n            )\n          )\n        }\n      </Flex>\n    </>\n  )\n}\n\nexport default Home;\n","import base from '@rebass/preset'\nimport merge from \"lodash/merge\";\n\nmerge(base, {\n  fonts: {\n    heading: \"'Montserrat', sans-serif\",\n    body: \"'Roboto', sans-serif\",\n  }\n})\nexport default base;\n","import { ThemeProvider } from \"styled-components\";\nimport { usePartyHost, usePartyGuest } from \"@compendium/peer-party\";\nimport { HashRouter, Switch, Route, useParams } from \"react-router-dom\";\nimport useGame from \"./useGame\";\nimport Home from \"./Home\";\nimport baseTheme from \"./theme\"\n\nconst HostRoute = () => {\n  const { roomId } = useParams();\n  const { theme, Host, game } = useGame(roomId);\n  const { state, moves, connections } = usePartyHost({ roomId, game });\n  return (\n    <ThemeProvider theme={theme || baseTheme}>\n      {Host && <Host roomId={roomId} state={state} moves={moves} connections={connections} />}\n    </ThemeProvider>\n  )\n}\n\nconst GuestRoute = () => {\n  const { roomId } = useParams();\n  const { theme,  Guest, game } = useGame(roomId);\n  const { connectionId, connected, state, moves } = usePartyGuest({ roomId, game });\n  return (\n    <ThemeProvider theme={theme || baseTheme}>\n      {Guest && <Guest connectionId={connectionId} roomId={roomId} connected={connected} state={state} moves={moves}/>}\n    </ThemeProvider>\n  )\n}\n\nconst Router = () =>\n  <HashRouter>\n    <Switch>\n      <Route path=\"/host/:roomId\">\n        <HostRoute/>\n      </Route>\n      <Route path=\"/guest/:roomId\">\n        <GuestRoute/>\n      </Route>\n      <Route exact path=\"/\">\n        <ThemeProvider theme={baseTheme}>\n          <Home/>\n        </ThemeProvider>\n      </Route>\n    </Switch>\n  </HashRouter>\n\nexport default Router;\n","import Router from \"./Router\";\nimport { createGlobalStyle } from \"styled-components\"\n\nconst NormaliseStyles = createGlobalStyle`\n  body, html, #root {\n    margin: 0;\n    height: 100%;\n  }\n`\n\nconst App = () =>\n  <>\n    <Router/>\n    <NormaliseStyles/>\n  </>\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { memo } from 'react'\nimport twemoji from 'twemoji'\n\nconst Emoji = memo(({ emoji }) => (\n  <span\n    dangerouslySetInnerHTML={{\n      __html: twemoji.parse(emoji, { folder: 'svg', ext: '.svg' }),\n    }}\n  />\n));\n\nexport default Emoji;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Picker } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\n\nconst Background = styled.div`\n  background-color: rgba(0, 0, 0, 0.8);\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Wrapper = styled.div`\n  display: inline-block;\n`;\n \nconst EmojiPicker = ({ onSelectEmoji, onHide }) => {\n  const onSelect = (emoji) => {\n    onSelectEmoji(emoji.native);\n  }\n  return (\n    <Background tabIndex onKeyPress={onHide} onClick={onHide}>\n      <Wrapper onClick={(e) => e.stopPropagation()}>\n        <Picker onSelect={onSelect} set=\"twitter\" />\n      </Wrapper>\n    </Background>\n  );\n};\n\nexport default EmojiPicker;","import Emoji from \"./Emoji\";\nimport EmojiPicker from \"./EmojiPicker\";\n\nexport default Emoji;\nexport { EmojiPicker }","export const NOUGHTS = 1;\nexport const CROSSES = 2;\n\nconst startGame = ({ state, callerId, args }) => ({\n  crossesPlayer: args.crossesConnId,\n  noughtsPlayer: args.noughtsConnId,\n  board: Array(9).fill(null),\n});\n\nconst fillSquare = ({ state, callerId, args }) => {\n  let player = null\n  if (callerId === state.crossesPlayer) {\n    player = CROSSES;\n  } else if (callerId === state.noughtsPlayer) {\n    player = NOUGHTS;\n  } else {\n    throw new Error('Connection is not a player');\n  }\n\n  if (state.board[args.position] !== null) {\n    throw new Error('Position filled');\n  }\n\n  const board = [...state.board];\n  board.splice(args.position, 1, player);\n\n  return ({\n    ...state,\n    board,\n  })\n}\n\nconst TicTacToe = {\n  fillSquare,\n  startGame,\n}\n\nexport default TicTacToe;\n","export default __webpack_public_path__ + \"static/media/AH.1a5ea790.svg\";","export default __webpack_public_path__ + \"static/media/AC.0e3c2151.svg\";","export default __webpack_public_path__ + \"static/media/AD.5c4da062.svg\";","export default __webpack_public_path__ + \"static/media/AS.0beacefa.svg\";","export default __webpack_public_path__ + \"static/media/2H.cb701b97.svg\";","export default __webpack_public_path__ + \"static/media/2C.276c3f69.svg\";","export default __webpack_public_path__ + \"static/media/2D.bc21ec2a.svg\";","export default __webpack_public_path__ + \"static/media/2S.ec187ad2.svg\";","export default __webpack_public_path__ + \"static/media/3H.cba17cfa.svg\";","export default __webpack_public_path__ + \"static/media/3C.4defbcf5.svg\";","export default __webpack_public_path__ + \"static/media/3D.8d12a3fc.svg\";","export default __webpack_public_path__ + \"static/media/3S.ed80cdda.svg\";","export default __webpack_public_path__ + \"static/media/4H.8924ea52.svg\";","export default __webpack_public_path__ + \"static/media/4C.3ebe0e73.svg\";","export default __webpack_public_path__ + \"static/media/4D.433a1ecc.svg\";","export default __webpack_public_path__ + \"static/media/4S.7e474260.svg\";","export default __webpack_public_path__ + \"static/media/5H.04a38bb9.svg\";","export default __webpack_public_path__ + \"static/media/5C.809e552d.svg\";","export default __webpack_public_path__ + \"static/media/5D.03b1a4af.svg\";","export default __webpack_public_path__ + \"static/media/5S.f4e082a6.svg\";","export default __webpack_public_path__ + \"static/media/6H.5380d254.svg\";","export default __webpack_public_path__ + \"static/media/6C.1f69ca79.svg\";","export default __webpack_public_path__ + \"static/media/6D.8c9d26ce.svg\";","export default __webpack_public_path__ + \"static/media/6S.33eb8c1b.svg\";","export default __webpack_public_path__ + \"static/media/7H.156a2f08.svg\";","export default __webpack_public_path__ + \"static/media/7C.cb6a5b5c.svg\";","export default __webpack_public_path__ + \"static/media/7D.bc93fd45.svg\";","export default __webpack_public_path__ + \"static/media/7S.f91490c5.svg\";","export default __webpack_public_path__ + \"static/media/8H.878dbca5.svg\";","export default __webpack_public_path__ + \"static/media/8C.e91af699.svg\";","export default __webpack_public_path__ + \"static/media/8D.ca4420e9.svg\";","export default __webpack_public_path__ + \"static/media/8S.fd5cd6f8.svg\";","export default __webpack_public_path__ + \"static/media/9H.57bfd8e3.svg\";","export default __webpack_public_path__ + \"static/media/9C.c6a841cc.svg\";","export default __webpack_public_path__ + \"static/media/9D.3d612a15.svg\";","export default __webpack_public_path__ + \"static/media/9S.6c7e4615.svg\";","export default __webpack_public_path__ + \"static/media/10H.c8c8e4de.svg\";","export default __webpack_public_path__ + \"static/media/10C.0cc64a48.svg\";","export default __webpack_public_path__ + \"static/media/10D.956683a1.svg\";","export default __webpack_public_path__ + \"static/media/10S.99cb26ab.svg\";","export default __webpack_public_path__ + \"static/media/JH.86f58f4f.svg\";","export default __webpack_public_path__ + \"static/media/JC.b801c5a7.svg\";","export default __webpack_public_path__ + \"static/media/JD.a0e75607.svg\";","export default __webpack_public_path__ + \"static/media/JS.1a6f34e2.svg\";","export default __webpack_public_path__ + \"static/media/QH.f56614ef.svg\";","export default __webpack_public_path__ + \"static/media/QC.3eb5bae0.svg\";","export default __webpack_public_path__ + \"static/media/QD.c20eb8d2.svg\";","export default __webpack_public_path__ + \"static/media/QS.cc68ac97.svg\";","export default __webpack_public_path__ + \"static/media/KH.3d6b1be6.svg\";","export default __webpack_public_path__ + \"static/media/KC.ca193598.svg\";","export default __webpack_public_path__ + \"static/media/KD.32d1a9f8.svg\";","export default __webpack_public_path__ + \"static/media/KS.b54b6bba.svg\";","export default __webpack_public_path__ + \"static/media/JOKER.96be08d3.svg\";","const SUITS = ['H', 'D', 'S', 'C'];\nconst JOKER = 0,\n  ACE = 1,\n  JACK = 11,\n  QUEEN = 12,\n  KING = 13;\nconst VALUES = [ACE, 2, 3, 4, 5, 6, 7, 8, 9, 10, JACK, QUEEN, KING];\n\nexport {\n  SUITS,\n  VALUES,\n  JOKER,\n  ACE,\n  JACK,\n  QUEEN,\n  KING,\n}\n","import { JOKER, SUITS, VALUES } from \"./model\";\n\nconst constructDeckOfCards = ({ jokers = 0 } = {}) => {\n  const cards = []\n  for (let suit of SUITS) {\n    for (let value of VALUES) {\n      cards.push({ suit, value });\n    }\n  }\n\n  for (let i = 0; i < jokers; i++) {\n    cards.push({ suit: null, value: JOKER });\n  }\n\n  return cards;\n}\n\n\nexport default constructDeckOfCards;\n","import React from 'react'\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin-bottom: -9em;\n  margin-right: -3em;\n\n  ${({ order }) => order && `order: ${order};`}\n`;\n\nconst UnSelectable = styled.div`\n  position: relative;\n  margin-top: 2em;\n`;\n\nconst Selectable = styled(UnSelectable)`\n  &:hover {\n    margin-top: 1em;\n    margin-bottom: 1em;\n    cursor: pointer;\n  }\n\n  ${({ isSelected }) => isSelected && `\n    margin-top: 0em;\n    margin-bottom: 2em;\n\n    &:hover {\n      margin-top: 0em;\n      margin-bottom: 2em;\n    }\n  `}\n`;\n\nconst Overlay = styled.div`\n  opacity: 0.4;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border-radius: 0.5em;\n\n  ${({ isSelected, selectColor }) => isSelected && selectColor && `\n    background-color: ${selectColor};\n  `}\n`;\n\nconst FaceImg = styled.img`\n  width: 9em;\n  display: block;\n`;\n\nconst SelectableFace = ({ isSelected, selectColor, faceImage, altText, onClick }) => (\n  <Selectable isSelected={isSelected}>\n    <FaceImg src={faceImage} alt={altText} />\n    <Overlay isSelected={isSelected} selectColor={selectColor} onClick={onClick}/>\n  </Selectable>\n);\n\nconst UnSelectableFace = ({ faceImage, altText }) => (\n  <UnSelectable>\n    <FaceImg src={faceImage} alt={altText}/>\n  </UnSelectable>\n);\n\nconst Card = ({ order, canBeSelected, isSelected, selectColor, faceImage, altText, onClick }) => {\n  const Face = canBeSelected ? SelectableFace : UnSelectableFace;\n  return (\n    <Container order={order}>\n      <Face isSelected={isSelected} selectColor={selectColor} faceImage={faceImage} altText={altText} onClick={onClick} />\n    </Container>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport HA from './cards/AH.svg'\nimport CA from './cards/AC.svg'\nimport DA from './cards/AD.svg'\nimport SA from './cards/AS.svg'\nimport H2 from './cards/2H.svg'\nimport C2 from './cards/2C.svg'\nimport D2 from './cards/2D.svg'\nimport S2 from './cards/2S.svg'\nimport H3 from './cards/3H.svg'\nimport C3 from './cards/3C.svg'\nimport D3 from './cards/3D.svg'\nimport S3 from './cards/3S.svg'\nimport H4 from './cards/4H.svg'\nimport C4 from './cards/4C.svg'\nimport D4 from './cards/4D.svg'\nimport S4 from './cards/4S.svg'\nimport H5 from './cards/5H.svg'\nimport C5 from './cards/5C.svg'\nimport D5 from './cards/5D.svg'\nimport S5 from './cards/5S.svg'\nimport H6 from './cards/6H.svg'\nimport C6 from './cards/6C.svg'\nimport D6 from './cards/6D.svg'\nimport S6 from './cards/6S.svg'\nimport H7 from './cards/7H.svg'\nimport C7 from './cards/7C.svg'\nimport D7 from './cards/7D.svg'\nimport S7 from './cards/7S.svg'\nimport H8 from './cards/8H.svg'\nimport C8 from './cards/8C.svg'\nimport D8 from './cards/8D.svg'\nimport S8 from './cards/8S.svg'\nimport H9 from './cards/9H.svg'\nimport C9 from './cards/9C.svg'\nimport D9 from './cards/9D.svg'\nimport S9 from './cards/9S.svg'\nimport H10 from './cards/10H.svg'\nimport C10 from './cards/10C.svg'\nimport D10 from './cards/10D.svg'\nimport S10 from './cards/10S.svg'\nimport HJ from './cards/JH.svg'\nimport CJ from './cards/JC.svg'\nimport DJ from './cards/JD.svg'\nimport SJ from './cards/JS.svg'\nimport HQ from './cards/QH.svg'\nimport CQ from './cards/QC.svg'\nimport DQ from './cards/QD.svg'\nimport SQ from './cards/QS.svg'\nimport HK from './cards/KH.svg'\nimport CK from './cards/KC.svg'\nimport DK from './cards/KD.svg'\nimport SK from './cards/KS.svg'\nimport JKR from './cards/JOKER.svg'\nimport { JOKER, ACE, KING, QUEEN, JACK } from '../game'\nimport Card from \"./Card\";\n\nconst getFaceImage = ({ suit, value }) => {\n  if (value === JOKER) {\n    return JKR\n  } else if (value === ACE && suit === 'H') {\n    return HA\n  } else if (value === ACE && suit === 'D') {\n    return DA\n  } else if (value === ACE && suit === 'S') {\n    return SA\n  } else if (value === ACE && suit === 'C') {\n    return CA\n  } else if (value === 2 && suit === 'H') {\n    return H2\n  } else if (value === 2 && suit === 'D') {\n    return D2\n  } else if (value === 2 && suit === 'S') {\n    return S2\n  } else if (value === 2 && suit === 'C') {\n    return C2\n  } else if (value === 3 && suit === 'H') {\n    return H3\n  } else if (value === 3 && suit === 'D') {\n    return D3\n  } else if (value === 3 && suit === 'S') {\n    return S3\n  } else if (value === 3 && suit === 'C') {\n    return C3\n  } else if (value === 4 && suit === 'H') {\n    return H4\n  } else if (value === 4 && suit === 'D') {\n    return D4\n  } else if (value === 4 && suit === 'S') {\n    return S4\n  } else if (value === 4 && suit === 'C') {\n    return C4\n  } else if (value === 5 && suit === 'H') {\n    return H5\n  } else if (value === 5 && suit === 'D') {\n    return D5\n  } else if (value === 5 && suit === 'S') {\n    return S5\n  } else if (value === 5 && suit === 'C') {\n    return C5\n  } else if (value === 6 && suit === 'H') {\n    return H6\n  } else if (value === 6 && suit === 'D') {\n    return D6\n  } else if (value === 6 && suit === 'S') {\n    return S6\n  } else if (value === 6 && suit === 'C') {\n    return C6\n  } else if (value === 7 && suit === 'H') {\n    return H7\n  } else if (value === 7 && suit === 'D') {\n    return D7\n  } else if (value === 7 && suit === 'S') {\n    return S7\n  } else if (value === 7 && suit === 'C') {\n    return C7\n  } else if (value === 8 && suit === 'H') {\n    return H8\n  } else if (value === 8 && suit === 'D') {\n    return D8\n  } else if (value === 8 && suit === 'S') {\n    return S8\n  } else if (value === 8 && suit === 'C') {\n    return C8\n  } else if (value === 9 && suit === 'H') {\n    return H9\n  } else if (value === 9 && suit === 'D') {\n    return D9\n  } else if (value === 9 && suit === 'S') {\n    return S9\n  } else if (value === 9 && suit === 'C') {\n    return C9\n  } else if (value === 10 && suit === 'H') {\n    return H10\n  } else if (value === 10 && suit === 'D') {\n    return D10\n  } else if (value === 10 && suit === 'S') {\n    return S10\n  } else if (value === 10 && suit === 'C') {\n    return C10\n  } else if (value === JACK && suit === 'H') {\n    return HJ\n  } else if (value === JACK && suit === 'D') {\n    return DJ\n  } else if (value === JACK && suit === 'S') {\n    return SJ\n  } else if (value === JACK && suit === 'C') {\n    return CJ\n  } else if (value === QUEEN && suit === 'H') {\n    return HQ\n  } else if (value === QUEEN && suit === 'D') {\n    return DQ\n  } else if (value === QUEEN && suit === 'S') {\n    return SQ\n  } else if (value === QUEEN && suit === 'C') {\n    return CQ\n  } else if (value === KING && suit === 'H') {\n    return HK\n  } else if (value === KING && suit === 'D') {\n    return DK\n  } else if (value === KING && suit === 'S') {\n    return SK\n  } else if (value === KING && suit === 'C') {\n    return CK\n  }\n}\n\nconst getAltText = ({ value, suit }) => {\n  if (value === JOKER) {\n    return '🃏 Joker'\n  } else if (value === ACE && suit === 'H') {\n    return '🂱 Ace of Hearts'\n  } else if (value === ACE && suit === 'D') {\n    return '🃁 Ace of Diamonds'\n  } else if (value === ACE && suit === 'S') {\n    return '🂡 Ace of Spaces'\n  } else if (value === ACE && suit === 'C') {\n    return '🃑 Ace of Clubs'\n  } else if (value === 2 && suit === 'H') {\n    return '🂲 Two of Hearts'\n  } else if (value === 2 && suit === 'D') {\n    return '🃂 Two of Diamonds'\n  } else if (value === 2 && suit === 'S') {\n    return '🂢 Two of Spades'\n  } else if (value === 2 && suit === 'C') {\n    return '🃒 Two of Clubs'\n  } else if (value === 3 && suit === 'H') {\n    return '🂳 Three of Hearts'\n  } else if (value === 3 && suit === 'D') {\n    return '🃃 Three of Diamonds'\n  } else if (value === 3 && suit === 'S') {\n    return '🂣 Three of Spades'\n  } else if (value === 3 && suit === 'C') {\n    return '🃓 Three of Clubs'\n  } else if (value === 4 && suit === 'H') {\n    return '🂴 Four of Hearts'\n  } else if (value === 4 && suit === 'D') {\n    return '🃄 Four of Diamonds'\n  } else if (value === 4 && suit === 'S') {\n    return '🂤 Four of Spades'\n  } else if (value === 4 && suit === 'C') {\n    return '🃔 Four of Clubs'\n  } else if (value === 5 && suit === 'H') {\n    return '🂵 Five of Hearts'\n  } else if (value === 5 && suit === 'D') {\n    return '🃅 Five of Diamonds'\n  } else if (value === 5 && suit === 'S') {\n    return '🂥 Five of Spades'\n  } else if (value === 5 && suit === 'C') {\n    return '🃕 Five of Clubs'\n  } else if (value === 6 && suit === 'H') {\n    return '🂶 Six of Hearts'\n  } else if (value === 6 && suit === 'D') {\n    return '🃆 Six of Diamomnds'\n  } else if (value === 6 && suit === 'S') {\n    return '🂦 Six of Spades'\n  } else if (value === 6 && suit === 'C') {\n    return '🃖 Six of Clubs'\n  } else if (value === 7 && suit === 'H') {\n    return '🂷 Seven of Hearts'\n  } else if (value === 7 && suit === 'D') {\n    return '🃇 Seven of Diamonds'\n  } else if (value === 7 && suit === 'S') {\n    return '🂧 Seven of Spades'\n  } else if (value === 7 && suit === 'C') {\n    return '🃗 Seven of Clubs'\n  } else if (value === 8 && suit === 'H') {\n    return '🂸 Eight of Hearts'\n  } else if (value === 8 && suit === 'D') {\n    return '🃈 Eight of Diamonds'\n  } else if (value === 8 && suit === 'S') {\n    return '🂨 Eight of Spades'\n  } else if (value === 8 && suit === 'C') {\n    return '🃘 Eight of Clubs'\n  } else if (value === 9 && suit === 'H') {\n    return '🂹 Nine of Hearts'\n  } else if (value === 9 && suit === 'D') {\n    return '🃉 Nine of Diamonds'\n  } else if (value === 9 && suit === 'S') {\n    return '🂩 Nine of Spades'\n  } else if (value === 9 && suit === 'C') {\n    return '🃙 Nine of Clubs'\n  } else if (value === 10 && suit === 'H') {\n    return '🂺 Ten of Hearts'\n  } else if (value === 10 && suit === 'D') {\n    return '🃊 Ten of Diamonds'\n  } else if (value === 10 && suit === 'S') {\n    return '🂪 Ten of Spades'\n  } else if (value === 10 && suit === 'C') {\n    return '🃚 Ten of Clubs'\n  } else if (value === JACK && suit === 'H') {\n    return '🂻 Jack of Hearts'\n  } else if (value === JACK && suit === 'D') {\n    return '🃋 Jack of Diamonds'\n  } else if (value === JACK && suit === 'S') {\n    return '🂫 Jack of Spades'\n  } else if (value === JACK && suit === 'C') {\n    return '🃛 Jack of Clubs'\n  } else if (value === QUEEN && suit === 'H') {\n    return '🂽 Queen of Hearts'\n  } else if (value === QUEEN && suit === 'D') {\n    return '🃍 Queen of Diamonds'\n  } else if (value === QUEEN && suit === 'S') {\n    return '🂭 Queen of Spades'\n  } else if (value === QUEEN && suit === 'C') {\n    return '🃝 Queen of Clubs'\n  } else if (value === KING && suit === 'H') {\n    return '🂾 King of Hearts'\n  } else if (value === KING && suit === 'D') {\n    return '🃞 King of Diamonds'\n  } else if (value === KING && suit === 'S') {\n    return '🂮 King of Spades'\n  } else if (value === KING && suit === 'C') {\n    return '🃞 King of Clubs'\n  }\n}\n\nconst CardFront = ({ value, suit, canBeSelected = false, isSelected = false, selectColor = null }) => {\n  console.log(\"select\", selectColor);\n  const faceImage = getFaceImage({ value, suit });\n  const altText = getAltText({ value, suit });\n  return (\n    <Card faceImage={faceImage} altText={altText} isSelected={isSelected} canBeSelected={canBeSelected} selectColor={selectColor}/>\n  );\n}\n\nexport default CardFront;\n","export default __webpack_public_path__ + \"static/media/RED_BACK.eea8c6b0.svg\";","export default __webpack_public_path__ + \"static/media/BLUE_BACK.d7aabd90.svg\";","import React from \"react\";\nimport RED_BACK from './cards/RED_BACK.svg'\nimport BLUE_BACK from './cards/BLUE_BACK.svg'\nimport Card from \"./Card\";\n\nconst getFaceImage = ({ colour }) => {\n  if (colour === 'R') {\n    return RED_BACK\n  } else if (colour === 'B') {\n    return BLUE_BACK\n  }\n}\n\nconst CardBack = ({ colour, isSelected = false, canBeSelected = false, selectColor = null }) => {\n  const faceImage = getFaceImage({ colour });\n  return (\n    <Card faceImage={faceImage} altText='🂠 Card Back' isSelected={isSelected} canBeSelected={canBeSelected} selectColor={selectColor}/>\n  );\n}\n\nexport default CardBack;\n","export default __webpack_public_path__ + \"static/media/felt.5b148bae.png\";","import styled from \"styled-components\";\nimport felt from \"./felt.png\";\n\nconst FeltTable = styled.div`\n  background-color: rgb(10, 80, 20);\n  background-image: url(${felt});\n  height: 100%;\n  padding: 5%;\n`;\n\nexport default FeltTable;\n","import styled from \"styled-components\";\n\nconst Hand = styled.section`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  max-height: 50%;\n\n  padding-right: 3em;\n  padding-bottom: 9em;\n`;\n\nexport default Hand;\n","import { PlayingCardFront } from \"./client\";\nexport * from \"./client\";\nexport * from \"./game\";\nexport default PlayingCardFront;"],"sourceRoot":""}