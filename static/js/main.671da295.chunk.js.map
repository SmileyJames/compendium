{"version":3,"sources":["../../.yarn/cache/peerjs-npm-1.3.2-8966839def-8766e61cf9.zip/node_modules/peerjs/dist sync","../../src/usePersist.ts","../../src/random.ts","../../src/shared.ts","../../src/secret.ts","../../src/host/useGameState.ts","../../src/host/stores.ts","../../src/usePeer.ts","../../src/host/useConnections.ts","../../src/host/usePartyHost.ts","../../src/host/useRandom.ts","../../src/host/useMoves.ts","../../src/host/useInputBuffer.ts","../../src/host/useSendSyncs.ts","../../src/guest/funcs.ts","../../src/guest/useSync.ts","../../src/guest/useMoves.ts","../../src/guest/usePartyGuest.ts","../../src/guest/stores.ts","../../src/guest/useConnection.ts","../../src/guest/useAck.ts","components/players/client/index.js","games/tic-tac-toe/game/index.js","games/tic-tac-toe/client/Guest.js","games/tic-tac-toe/client/Host.js","games/tic-tac-toe/index.js","components/players/game/index.js","components/playing-card/client/cards/AH.svg","components/playing-card/client/cards/AC.svg","components/playing-card/client/cards/AD.svg","components/playing-card/client/cards/AS.svg","components/playing-card/client/cards/2H.svg","components/playing-card/client/cards/2C.svg","components/playing-card/client/cards/2D.svg","components/playing-card/client/cards/2S.svg","components/playing-card/client/cards/3H.svg","components/playing-card/client/cards/3C.svg","components/playing-card/client/cards/3D.svg","components/playing-card/client/cards/3S.svg","components/playing-card/client/cards/4H.svg","components/playing-card/client/cards/4C.svg","components/playing-card/client/cards/4D.svg","components/playing-card/client/cards/4S.svg","components/playing-card/client/cards/5H.svg","components/playing-card/client/cards/5C.svg","components/playing-card/client/cards/5D.svg","components/playing-card/client/cards/5S.svg","components/playing-card/client/cards/6H.svg","components/playing-card/client/cards/6C.svg","components/playing-card/client/cards/6D.svg","components/playing-card/client/cards/6S.svg","components/playing-card/client/cards/7H.svg","components/playing-card/client/cards/7C.svg","components/playing-card/client/cards/7D.svg","components/playing-card/client/cards/7S.svg","components/playing-card/client/cards/8H.svg","components/playing-card/client/cards/8C.svg","components/playing-card/client/cards/8D.svg","components/playing-card/client/cards/8S.svg","components/playing-card/client/cards/9H.svg","components/playing-card/client/cards/9C.svg","components/playing-card/client/cards/9D.svg","components/playing-card/client/cards/9S.svg","components/playing-card/client/cards/10H.svg","components/playing-card/client/cards/10C.svg","components/playing-card/client/cards/10D.svg","components/playing-card/client/cards/10S.svg","components/playing-card/client/cards/JH.svg","components/playing-card/client/cards/JC.svg","components/playing-card/client/cards/JD.svg","components/playing-card/client/cards/JS.svg","components/playing-card/client/cards/QH.svg","components/playing-card/client/cards/QC.svg","components/playing-card/client/cards/QD.svg","components/playing-card/client/cards/QS.svg","components/playing-card/client/cards/KH.svg","components/playing-card/client/cards/KC.svg","components/playing-card/client/cards/KD.svg","components/playing-card/client/cards/KS.svg","components/playing-card/client/cards/JOKER.svg","components/playing-card/game/model.js","components/playing-card/game/constructDeckOfCards.js","components/playing-card/client/Card.js","components/playing-card/client/CardFront.js","components/playing-card/client/cards/RED_BACK.svg","components/playing-card/client/cards/BLUE_BACK.svg","components/playing-card/client/CardBack.js","components/playing-card/client/felt.png","components/playing-card/client/FeltTable.js","components/playing-card/client/Hand.js","components/playing-card/index.js","games/whist/game/index.js","components/emoji/Emoji.js","components/emoji/EmojiPicker.js","components/emoji/index.js","components/players/client/Host.js","components/players/client/Guest.js","games/whist/index.js","games/whist/client/Host.js","games/whist/client/Guest.js","games/hot-potato/game/index.js","games/hot-potato/client/Host.js","games/hot-potato/client/Guest.js","compendium.js","games/hot-potato/index.js","rooms.js","useGame.js","Home.js","theme.js","Router.js","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","usePersist","useState","item","store","JSON","defaultValue","state","setState","useEffect","key","withRandom","moveFn","isRandomMove","getMoves","connectionId","roomId","game","getMove","move","constructMoves","handleMove","Proxy","get","moves","has","args","Symbol","Object","Reflect","withSecret","isSecretMove","useGameState","random","connectionIds","logEvent","window","states","setStates","useStatesStore","useMemo","input","useCallback","revealSecret","fn","contextId","event","index","isRandom","isSecret","genSeed","simpleMoveArgs","randomMixin","seedrandom","secretMixin","newState","diff","reducer","newStates","error","console","destructPeer","peer","setPeer","opts","host","secure","usePeer","open","setOpen","useReducer","a","attempts","countAttempt","retry","timeout","setTimeout","clearTimeout","onConnectionClosed","useConnections","connections","setConnections","connectionLogSizeMap","useRef","addConnectionId","onGuestEvent","setOnGuestEvent","conn","appendConnection","isInteger","size","updateLogSizeMap","isString","isObject","validMoves","m","validateEvent","conns","c","removeConnection","usePartyHost","secret","useRandom","eventLogs","setEventLogs","logs","useEventLogStore","onEvent","setOnHostEvent","useMoves","inputBuffer","setInputBuffer","pushInput","inputItem","head","tail","useInputBuffer","connection","eventLog","numSent","events","i","useSendSyncs","logSizeToIndex","logSize","constructReducer","patch","o","moveArgs","useSync","data","clearData","setLogSize","updateLogSize","cache","sync","constructMovesHandler","setMoves","preempt","emit","usePartyGuest","useIdStore","useStateStore","useLogSizeStore","setData","connected","setConnected","serialization","connect","useConnection","ack","useAck","options","Component","TicTacToe","guestMoves","fillSquare","player","crossesPlayer","noughtsPlayer","board","position","splice","hostMoves","startGame","crossesConnId","noughtsConnId","Array","fill","Button","styled","button","Tile","div","Board","TileOrButton","value","onClick","Guest","map","name","Host","length","to","location","joinAsAPlayer","players","list","maxPlayers","emoji","playerList","initPlayers","minPlayers","everyoneIsIn","SUITS","JACK","QUEEN","KING","VALUES","constructDeckOfCards","jokers","cards","suit","push","Container","order","UnSelectable","Selectable","isSelected","Overlay","selectColor","FaceImg","img","SelectableFace","faceImage","altText","src","alt","UnSelectableFace","Card","canBeSelected","Face","CardFront","log","JKR","HA","DA","SA","CA","H2","D2","S2","C2","H3","D3","S3","C3","H4","D4","S4","C4","H5","D5","S5","C5","H6","D6","S6","C6","H7","D7","S7","C7","H8","D8","S8","C8","H9","D9","S9","C9","H10","D10","S10","C10","HJ","DJ","SJ","CJ","HQ","DQ","SQ","CQ","HK","DK","SK","CK","getFaceImage","getAltText","CardBack","colour","RED_BACK","BLUE_BACK","FeltTable","felt","Hand","section","PlayingCardFront","playersGame","discard","deck","hand","deal","Emoji","memo","dangerouslySetInnerHTML","__html","twemoji","parse","folder","ext","Background","Wrapper","EmojiPicker","onSelectEmoji","onHide","tabIndex","onKeyPress","stopPropagation","onSelect","native","set","PlayerList","children","flexGrow","alignItems","width","height","my","mx","HowToJoin","fontSize","fontWeight","color","everyonesIn","canStartGame","checkIfCanStartGame","flexDirection","justifyContent","JoinScreen","onJoin","setName","setEmoji","pickerIsShown","setPickerIsShown","showPicker","hidePicker","join","htmlFor","onChange","target","variant","Spectator","Waiting","isPlayer","findIndex","findConnectionIsPlayer","gameIsFull","checkIfGameIsFull","Whist","props","withGuestPlayers","passPotato","s","hotPotato","numPlayers","playerIndex","Math","floor","setBackgroundColour","backgroundColour","throwPotato","stopMusic","hotPotatoPlayer","find","playerId","loser","onThrowPotato","mr","Box","EmojiBox","Disconnected","OpenHands","Potato","onPassPotato","compendium","theme","presetTheme","permutations","getGame","compendiumIndex","words","split","sortedWords","sort","permutation","word","w","permu","isEqual","decodeCompendiumIndex","useGame","setGame","NewGame","onNewGame","onSubmit","preventDefault","JoinGame","onJoinGame","Home","useHistory","mt","randomWords","exactly","createRoomId","base","HostRoute","useParams","baseTheme","GuestRoute","Router","path","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.671da295.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 132;","import { useState, useEffect, Dispatch, SetStateAction } from 'react'\n\nfunction usePersist<T>(\n  store: Storage,\n  key: string,\n  defaultValue: T | (() => T)\n): [T, Dispatch<SetStateAction<T>>] {\n  const [state, setState] = useState<T>(() => {\n    const item = store.getItem(key)\n    if (item) {\n      return JSON.parse(item ?? '')\n    } else {\n      return defaultValue instanceof Function ? defaultValue() : defaultValue\n    }\n  })\n\n  useEffect(() => {\n    store.setItem(key, JSON.stringify(state))\n  }, [key, state, store])\n\n  return [state, setState]\n}\n\nexport default usePersist\n","import { RandomNumberGenerator, Move, RandomMove, RandomSecretMove } from '.'\nimport { Seed } from './types'\n\n/**\n * A higher order function to provide `random`, a random number generator, to a move defintion.\n * ```js\n * withRandom(({ random, state }) => {\n *   const isHeads = random() > 0.5;\n *   return ({ ...state, isHeads })\n * })\n * ```\n * @param moveFn A game move definition, which will require randomness\n * @return A random move definition\n */\nexport function withRandom(moveFn: Move): RandomMove | RandomSecretMove {\n  moveFn._isRandom = true\n  return moveFn as RandomMove | RandomSecretMove\n}\n\nexport const isRandomMove = (moveFn: Move) => moveFn._isRandom\n\nexport const shuffle = ({\n  random = Math.random,\n  array\n}: {\n  random: RandomNumberGenerator\n  array: any[]\n}) => {\n  const length = array == null ? 0 : array.length\n  if (!length) {\n    return []\n  }\n  let index = -1\n  const lastIndex = length - 1\n  const result = [...array]\n  while (++index < length) {\n    const rand = index + Math.floor(random() * (lastIndex - index + 1))\n    const value = result[rand]\n    result[rand] = result[index]\n    result[index] = value\n  }\n  return result\n}\n\nexport function genSeed(random: RandomNumberGenerator): Seed {\n  return random().toString()\n}\n","import has from 'lodash/has'\nimport { PeerId, Game, Args, Moves, Move } from '.'\nimport { MoveHandler } from './types'\n\ninterface GetMovesArgs {\n  connectionId: PeerId\n  roomId: PeerId\n  game: Game\n}\n\nfunction getMoves({ connectionId, roomId, game }: GetMovesArgs): Moves {\n  return connectionId === roomId ? game.hostMoves : game.guestMoves\n}\n\ninterface GetMoveArgs extends GetMovesArgs {\n  move: string\n}\n\nexport function getMove({\n  connectionId,\n  roomId,\n  game,\n  move\n}: GetMoveArgs): Move {\n  return getMoves({ connectionId, roomId, game })[move]\n}\n\ninterface ConstructMovesArgs extends GetMovesArgs {\n  handleMove: MoveHandler\n}\n\nexport function constructMoves({\n  game,\n  connectionId,\n  roomId,\n  handleMove\n}: ConstructMovesArgs): Moves {\n  return new Proxy(\n    {},\n    {\n      get: (target, key, receiver) => {\n        const moves = getMoves({ connectionId, roomId, game })\n        if (has(moves, key)) {\n          return (args: Args) => handleMove({ move: key.toString(), args })\n        } else if (key === Symbol.iterator && moves) {\n          return Object.keys(moves)[Symbol.iterator].bind(target)\n        } else {\n          return Reflect.get(target, key, receiver)\n        }\n      }\n    }\n  )\n}\n","import { Move, SecretMove, RandomSecretMove } from '.'\n\n/**\n * A higher order function to provide `contextId` and `revealASecret`, enabling the move\n * to return a different state for different peers.\n * ```js\n * withSecret(({ contextId, roomId, revealSecret, state }) => {\n *   const isHostContext = roomId === contextId\n *   if (isHostContext) {\n *     return ({ ...state, deck: state.deck.slice(1) })\n *   } else {\n *     const topCardOfDeck = revealSecret(roomId, s => s.deck[0])\n *     return ({ ...state, revealedCard: topCardOfDeck })\n *   }\n * })\n * ```\n * @param moveFn A move defition that needs to be secretive\n * @return A move defintion with context awareness and access to secret state\n */\nexport function withSecret(moveFn: Move): SecretMove | RandomSecretMove {\n  moveFn._isSecret = true\n  return moveFn as SecretMove | RandomSecretMove\n}\n\nexport const isSecretMove = (moveFn: Move) => moveFn._isSecret\n","import { useCallback, useMemo } from 'react'\nimport { diff } from 'jsondiffpatch'\nimport seedrandom from 'seedrandom'\nimport { useStatesStore } from './stores'\nimport { isRandomMove, genSeed } from '../random'\nimport { getMove } from '../shared'\nimport { isSecretMove } from '../secret'\nimport {\n  State,\n  PeerId,\n  RandomNumberGenerator,\n  Args,\n  RevealSecretFunction,\n  Game,\n  RandomMove,\n  SecretMove,\n  SimpleMove,\n  RandomArgsMixin,\n  SecretArgsMixin,\n  RandomSecretMove\n} from '..'\nimport { EventItem } from '../types'\nimport { EventLogger } from '.'\n\ntype ReducerArgs = {\n  state: State\n  contextId: PeerId\n  connectionId: PeerId\n  roomId: PeerId\n  random: RandomNumberGenerator\n  game: Game\n  move: string\n  args: Args\n  revealSecret: RevealSecretFunction\n}\n\nconst reducer = ({\n  state,\n  contextId,\n  connectionId,\n  roomId,\n  random,\n  game,\n  move,\n  args,\n  revealSecret\n}: ReducerArgs) => {\n  const moveFn = getMove({ connectionId, roomId, game, move })\n  const event: EventItem = { index: null, connectionId, move, args }\n\n  let newState: State\n\n  const isRandom = isRandomMove(moveFn)\n  const isSecret = isSecretMove(moveFn)\n\n  if (isRandom) {\n    event.seed = genSeed(random)\n  }\n\n  const simpleMoveArgs = { state, roomId, connectionId, args }\n  const randomMixin: RandomArgsMixin | null = isRandom\n    ? { random: seedrandom(event.seed) }\n    : null\n  const secretMixin: SecretArgsMixin | null = isSecret\n    ? { contextId, revealSecret }\n    : null\n\n  if (randomMixin && !isSecret) {\n    const randomMoveFn = moveFn as RandomMove\n    newState = randomMoveFn({ ...simpleMoveArgs, ...randomMixin })\n    return { state: newState, event }\n  }\n\n  if (secretMixin) {\n    if (!isRandom) {\n      const secretMoveFn = moveFn as SecretMove\n      newState = secretMoveFn({ ...simpleMoveArgs, ...secretMixin })\n    }\n\n    if (randomMixin) {\n      const randomSecretMoveFn = moveFn as RandomSecretMove\n      newState = randomSecretMoveFn({\n        ...simpleMoveArgs,\n        ...secretMixin,\n        ...randomMixin\n      })\n    }\n\n    event.patch = diff(state, newState)\n    return { state: newState, event }\n  }\n\n  const simpleMoveFn = moveFn as SimpleMove\n  newState = simpleMoveFn(simpleMoveArgs)\n  return { state: newState, event }\n}\n\ntype UseGameStateArgs = {\n  roomId: PeerId\n  game: Game\n  random: RandomNumberGenerator\n  connectionIds: PeerId[]\n  logEvent: EventLogger\n}\nconst useGameState = ({\n  roomId,\n  game,\n  random,\n  connectionIds,\n  logEvent\n}: UseGameStateArgs) => {\n  const { states, setStates } = useStatesStore(roomId)\n  const hostState = useMemo(() => states[roomId] || {}, [roomId, states])\n  const input = useCallback(\n    ({ connectionId, move, args }) => {\n      if (connectionIds == null) return\n      const revealSecret = (id: PeerId, fn: (s: State) => State) =>\n        fn(states[id])\n      setStates((states) =>\n        [...connectionIds, roomId].reduce((newStates, contextId) => {\n          try {\n            const { state, event } = reducer({\n              state: states[contextId] || {},\n              connectionId,\n              args,\n              move,\n              roomId,\n              game,\n              contextId,\n              random,\n              revealSecret\n            })\n            newStates[contextId] = state\n            logEvent({ connectionId: contextId, event })\n          } catch (error) {\n            console.error('Invalid Event', error)\n          }\n          return newStates\n        }, {})\n      )\n    },\n    [logEvent, connectionIds, states, roomId, game, random, setStates]\n  )\n\n  return { state: hostState, input }\n}\n\nexport default useGameState\n","import usePersist from '../usePersist'\nimport { useCallback, Dispatch, SetStateAction } from 'react'\nimport { PeerId } from '..'\nimport { EventItem } from '../types'\nimport { States, EventLogs, EventLogger } from '.'\n\nexport function useStatesStore(\n  roomId: PeerId\n): { states: States; setStates: Dispatch<SetStateAction<States>> } {\n  const [states, setStates] = usePersist<States>(\n    window.localStorage,\n    `hostState-${roomId}`,\n    {}\n  )\n\n  return { states, setStates }\n}\n\nexport function useEventLogStore(\n  roomId: PeerId\n): { eventLogs: EventLogs; logEvent: EventLogger } {\n  const [eventLogs, setEventLogs] = usePersist<EventLogs>(\n    window.localStorage,\n    `eventLog-${roomId}`,\n    {}\n  )\n  const logEvent = useCallback(\n    ({ connectionId, event }: { connectionId: PeerId; event: EventItem }) => {\n      setEventLogs((eventLogs) => {\n        const logs = eventLogs[connectionId] || []\n        return { ...eventLogs, [connectionId]: [...logs, event] }\n      })\n    },\n    [setEventLogs]\n  )\n  return { eventLogs, logEvent }\n}\n","import {\n  useEffect,\n  useState,\n  useReducer,\n  Dispatch,\n  SetStateAction\n} from 'react'\nimport Peer from 'peerjs'\nimport { ConnectionStatus, PeerId } from '.'\n\ntype PeerSetter = Dispatch<SetStateAction<Peer | null>>\nconst destructPeer = ({\n  peer,\n  setPeer\n}: {\n  peer: Peer\n  setPeer: PeerSetter\n}) => {\n  peer && peer.destroy()\n  setPeer(null)\n}\n\nconst opts = { host: 'signalling.compendium.games', secure: true }\n\nfunction usePeer(id: PeerId): { open: ConnectionStatus; peer: Peer | null } {\n  const [peer, setPeer] = useState<Peer | null>(null)\n  const [open, setOpen] = useState(false)\n  const [attempts, countAttempt] = useReducer((a: number) => a + 1, 0)\n\n  useEffect(() => {\n    if (open) return\n\n    const peer = new Peer(id, opts)\n    setPeer(peer)\n\n    const retry = () => {\n      setOpen(false)\n      destructPeer({ peer, setPeer })\n      countAttempt()\n    }\n\n    let timeout = setTimeout(retry, 1000)\n\n    peer.on('open', () => {\n      clearTimeout(timeout)\n      setOpen(true)\n    })\n\n    const onConnectionClosed = () => {\n      clearTimeout(timeout)\n      timeout = setTimeout(retry, 1000)\n    }\n    peer.on('close', onConnectionClosed)\n    peer.on('disconnected', onConnectionClosed)\n    peer.on('error', onConnectionClosed)\n\n    return () => {\n      destructPeer({ peer, setPeer })\n      clearTimeout(timeout)\n    }\n  }, [attempts, id])\n\n  return { open, peer }\n}\n\nexport default usePeer\n","import {\n  useRef,\n  useState,\n  useEffect,\n  useReducer,\n  MutableRefObject,\n  Dispatch,\n  SetStateAction\n} from 'react'\nimport { isString, isObject, isInteger } from 'lodash'\nimport usePeer from '../usePeer'\nimport { PeerId, Game } from '..'\nimport { LogSize, ConnectionList, Connection } from '../types'\nimport { PeerAcks, InputerSetter, InputItem, Inputer } from '.'\n\nconst validateEvent = (event: InputItem, validMoves: string[]) =>\n  event &&\n  isString(event.move) &&\n  isObject(event.args) &&\n  validMoves.findIndex((m) => m === event.move) > -1\n\ntype ConnectionArgs = {\n  setConnections: Dispatch<SetStateAction<ConnectionList>>\n  conn: Connection\n}\n\nconst appendConnection = ({ setConnections, conn }: ConnectionArgs) => {\n  setConnections((conns: ConnectionList) => [...conns, conn])\n}\n\nconst removeConnection = ({ setConnections, conn }: ConnectionArgs) => {\n  setConnections((conns: ConnectionList) =>\n    conns.filter((c: Connection) => c !== conn)\n  )\n}\n\ntype UpdateLogSizeMapArgs = {\n  conn: Connection\n  connectionLogSizeMap: MutableRefObject<PeerAcks>\n  size: LogSize\n}\nconst updateLogSizeMap = ({\n  conn,\n  connectionLogSizeMap,\n  size = 0\n}: UpdateLogSizeMapArgs) => {\n  connectionLogSizeMap.current[conn.peer] = size\n}\n\ntype UseConnectionsArgs = { game: Game; roomId: PeerId }\ntype UseConnectionsReturn = {\n  connections: ConnectionList\n  connectionIds: PeerId[]\n  connectionLogSizeMap: MutableRefObject<PeerAcks>\n  setOnGuestEvent: InputerSetter\n}\nfunction useConnections({\n  game,\n  roomId\n}: UseConnectionsArgs): UseConnectionsReturn {\n  const { peer } = usePeer(roomId)\n  const [connections, setConnections] = useState<ConnectionList>([])\n  const connectionLogSizeMap = useRef<PeerAcks>({})\n  const [connectionIds, addConnectionId] = useReducer(\n    (state: PeerId[], connId: PeerId) => [...state, connId],\n    []\n  )\n  const [onGuestEvent, setOnGuestEvent] = useState<Inputer>(() => () => {})\n\n  useEffect(() => {\n    if (!peer || !onGuestEvent) return\n\n    peer.on('connection', (conn) => {\n      conn.on('open', () => {\n        appendConnection({ setConnections, conn })\n        addConnectionId(conn.peer)\n      })\n\n      conn.on('data', ({ index, ...event }) => {\n        if (isInteger(index)) {\n          updateLogSizeMap({ conn, connectionLogSizeMap, size: index + 1 })\n        }\n\n        if (\n          (isInteger(index) || index === null) &&\n          validateEvent(event, Object.keys(game.guestMoves))\n        ) {\n          onGuestEvent({ ...event, connectionId: conn.peer })\n        }\n      })\n\n      conn.on('close', () => {\n        removeConnection({ setConnections, conn })\n      })\n\n      conn.on('error', (error) => {\n        console.error(conn.peer, error)\n      })\n    })\n  }, [peer, game, roomId, onGuestEvent])\n\n  return { connections, connectionIds, connectionLogSizeMap, setOnGuestEvent }\n}\n\nexport default useConnections\n","import { useMemo } from 'react'\nimport { useEventLogStore } from './stores'\nimport useGameState from './useGameState'\nimport useConnections from './useConnections'\nimport useMoves from './useMoves'\nimport useSendSyncs from './useSendSyncs'\nimport useInputBuffer from './useInputBuffer'\nimport { Connection } from '../types'\nimport useRandom from './useRandom'\nimport { UsePartyHostArgs, UsePartyHostReturn } from '..'\n\n/**\n * A React hook that, provided the game rules and a shared room identifier,\n * returns the host's state representation and an object with moves\n * to call on the host's user action.\n */\nfunction usePartyHost({\n  roomId,\n  game,\n  secret\n}: UsePartyHostArgs): UsePartyHostReturn {\n  // The host will need to make some random decisions\n  const random = useRandom({ secret, roomId })\n\n  // The event log will store validated events, so we can sync guests.\n  const { eventLogs, logEvent } = useEventLogStore(roomId)\n\n  // Guests connect and send (not trusted) events.\n  // The host remembers the last event a guest has acknowledged receiving a sync for.\n  const {\n    setOnGuestEvent,\n    connections,\n    connectionIds,\n    connectionLogSizeMap\n  } = useConnections({ game, roomId })\n\n  // The host creates events also\n  const { setOnHostEvent, moves } = useMoves({ roomId, game })\n\n  // When an event takes places, applies it to a state for each connection, to check it is a valid move.\n  // If no error is thrown it is a valid move, then the state is updated and the valid event is logged.\n  const { state, input } = useGameState({\n    roomId,\n    game,\n    logEvent,\n    random,\n    connectionIds\n  })\n\n  // Connect yet-to-be-validated guest and host events to the event handler\n  useInputBuffer({ setOnHostEvent, setOnGuestEvent, input })\n\n  // Update active connections with valid events in the log they have yet to acknowledge.\n  useSendSyncs({ connections, connectionLogSizeMap, eventLogs })\n\n  const activeConnectionIds = useMemo(\n    () => connections.map((conn: Connection) => conn.peer),\n    [connections]\n  )\n\n  return { state, moves, connections: activeConnectionIds }\n}\n\nexport default usePartyHost\n","import { useMemo } from 'react'\nimport seedrandom from 'seedrandom'\nimport { PeerId, RandomNumberGenerator, Secret } from '..'\n\nfunction useRandom({\n  secret,\n  roomId\n}: {\n  secret?: Secret\n  roomId: PeerId\n}): RandomNumberGenerator {\n  const random = useMemo<RandomNumberGenerator>(\n    () => seedrandom(secret || roomId),\n    [secret, roomId]\n  )\n  return random\n}\n\nexport default useRandom\n","import { useState, useMemo, useCallback } from 'react'\nimport { constructMoves } from '../shared'\nimport { PeerId, Game, Moves } from '..'\nimport { InputerSetter, Inputer } from '.'\n\ntype UseMovesArgs = { roomId: PeerId; game: Game }\n\ntype UseMovesReturn = { moves: Moves; setOnHostEvent: InputerSetter }\n\nfunction useMoves({ roomId, game }: UseMovesArgs): UseMovesReturn {\n  const [onEvent, setOnHostEvent] = useState<Inputer>(() => () => null)\n\n  const handleMove = useCallback(\n    (event) => {\n      onEvent({ ...event, connectionId: roomId })\n    },\n    [roomId, onEvent]\n  )\n\n  const moves = useMemo(() => {\n    if (!handleMove || !roomId || !game) return {}\n    return constructMoves({ game, connectionId: roomId, roomId, handleMove })\n  }, [roomId, game, handleMove])\n\n  return { moves, setOnHostEvent }\n}\n\nexport default useMoves\n","import { useEffect, useState } from 'react'\nimport { InputerSetter, Inputer, InputList, InputItem } from '.'\n\ntype UseInputBufferArgs = {\n  setOnGuestEvent: InputerSetter\n  setOnHostEvent: InputerSetter\n  input: Inputer\n}\n\nfunction useInputBuffer({\n  setOnGuestEvent,\n  setOnHostEvent,\n  input\n}: UseInputBufferArgs) {\n  const [inputBuffer, setInputBuffer] = useState<InputList>([])\n\n  useEffect(() => {\n    const pushInput = (inputItem: InputItem) => {\n      setInputBuffer((buffer: InputList) => [...buffer, inputItem])\n    }\n    setOnGuestEvent(() => pushInput)\n    setOnHostEvent(() => pushInput)\n  }, [setOnGuestEvent, setOnHostEvent, setInputBuffer])\n\n  useEffect(() => {\n    if (!inputBuffer.length || !input) return\n    setInputBuffer(([head, ...tail]) => {\n      input(head)\n      return tail\n    })\n  }, [inputBuffer, input, setInputBuffer])\n}\n\nexport default useInputBuffer\n","import { useEffect, MutableRefObject } from 'react'\nimport { ConnectionList, EventItem } from '../types'\nimport { EventLogs, PeerAcks } from '.'\n\ntype UseSendSyncArgs = {\n  connections: ConnectionList\n  connectionLogSizeMap: MutableRefObject<PeerAcks>\n  eventLogs: EventLogs\n}\nfunction useSendSyncs({\n  connections,\n  connectionLogSizeMap,\n  eventLogs\n}: UseSendSyncArgs): void {\n  useEffect(() => {\n    if (eventLogs == null) return\n    for (const connection of connections) {\n      const eventLog = eventLogs[connection.peer] || []\n      const numSent = connectionLogSizeMap.current[connection.peer] || 0\n      if (eventLog.length > numSent) {\n        const events = eventLog\n          .slice(numSent)\n          .map((e: EventItem, i: number) => ({ ...e, index: numSent + i }))\n        connection.send(events)\n      }\n    }\n  }, [connections, connectionLogSizeMap, eventLogs])\n}\n\nexport default useSendSyncs\n","import seedrandom, { State } from 'seedrandom'\nimport { patch } from 'jsondiffpatch'\nimport { getMove } from '../shared'\nimport { isRandomMove } from '../random'\nimport { isSecretMove } from '../secret'\nimport { Game, SimpleMoveArgs, RandomMove, SimpleMove, PeerId } from '..'\nimport { EventList, LogSize, Index } from '../types'\n\nexport function logSizeToIndex(logSize: LogSize): Index {\n  const index = logSize - 1\n  return index < 0 ? null : index\n}\n\nexport const constructReducer = ({\n  game,\n  events,\n  roomId\n}: {\n  game: Game\n  events: EventList\n  roomId: PeerId\n}) => (state: State) => {\n  try {\n    return events.reduce((o, event) => {\n      const moveFn = getMove({\n        connectionId: event.connectionId,\n        roomId,\n        game,\n        move: event.move\n      })\n\n      if (isSecretMove(moveFn)) {\n        if (event.patch == null) {\n          throw new Error('Secret moves require a state patch from the host')\n        }\n        patch(o, event.patch)\n        return o\n      }\n\n      const moveArgs: SimpleMoveArgs = {\n        state: o,\n        roomId,\n        connectionId: event.connectionId,\n        args: event.args\n      }\n\n      if (isRandomMove(moveFn)) {\n        if (event.seed == null) {\n          throw new Error('Random moves require a seed from the host')\n        }\n        const random = seedrandom(event.seed)\n        const randomMoveFn = moveFn as RandomMove\n        return randomMoveFn({ ...moveArgs, random })\n      }\n\n      const simpleMoveFn = moveFn as SimpleMove\n      return simpleMoveFn(moveArgs)\n    }, state)\n  } catch (e) {\n    console.error(e)\n    return state\n  }\n}\n","import { useEffect } from 'react'\nimport { constructReducer } from './funcs'\nimport { Game, PeerId } from '..'\nimport { EventList } from '../types'\nimport { CacheAndStateSetter, LogSizeSetter } from '.'\n\ntype SyncArgs = {\n  setState: CacheAndStateSetter\n  roomId: PeerId\n  game: Game\n  events: EventList\n}\nconst sync = ({ setState, roomId, game, events }: SyncArgs) => {\n  const reducer = constructReducer({ game, roomId, events })\n  setState(({ state }) => {\n    const newState = reducer(state)\n    return { state: newState, cache: newState }\n  })\n}\n\ntype UpdateLogSizeArgs = { setLogSize: LogSizeSetter; events: EventList }\nconst updateLogSize = ({ setLogSize, events }: UpdateLogSizeArgs) => {\n  setLogSize((events[events.length - 1].index ?? 0) + 1)\n}\n\ntype UseSyncArgs = {\n  data: EventList\n  clearData: () => void\n  game: Game\n  roomId: PeerId\n  setState: CacheAndStateSetter\n  setLogSize: LogSizeSetter\n}\nfunction useSync({\n  data,\n  clearData,\n  game,\n  roomId,\n  setState,\n  setLogSize\n}: UseSyncArgs): void {\n  useEffect(() => {\n    if (!data || !data.length) return\n    const events = [...data]\n    clearData()\n    updateLogSize({ setLogSize, events })\n    sync({ setState, roomId, game, events })\n  }, [data, clearData, game, roomId, setLogSize, setState])\n}\n\nexport default useSync\n","import { useEffect, useState, Dispatch, SetStateAction } from 'react'\nimport { getMove, constructMoves } from '../shared'\nimport { logSizeToIndex, constructReducer } from './funcs'\nimport { isRandomMove } from '../random'\nimport { isSecretMove } from '../secret'\nimport { Moves, PeerId, Game, Args, ConnectionStatus } from '..'\nimport { LogSize, Emit } from '../types'\nimport { CacheAndStateSetter, DataConnectionRef } from '.'\n\nconst emit = ({ conn, emit }: { emit: Emit; conn: DataConnectionRef }) => {\n  conn.current?.send(emit)\n}\n\ntype PreemptArgs = {\n  game: Game\n  setState: CacheAndStateSetter\n  move: string\n  args: Args\n  connectionId: PeerId\n  roomId: PeerId\n}\nconst preempt = ({\n  setState,\n  game,\n  move,\n  args,\n  connectionId,\n  roomId\n}: PreemptArgs) => {\n  const reducer = constructReducer({\n    game,\n    roomId,\n    events: [{ index: null, move, args, connectionId }]\n  })\n  setState(({ state, cache }) => ({\n    cache: reducer(cache),\n    state\n  }))\n}\n\ntype ConstructMovesHandlerArgs = {\n  conn: DataConnectionRef\n  connectionId: PeerId\n  logSize: LogSize\n  roomId: PeerId\n  game: Game\n  setState: CacheAndStateSetter\n  setMoves: Dispatch<SetStateAction<Moves | null>>\n}\nfunction constructMovesHandler({\n  conn,\n  connectionId,\n  setMoves,\n  setState,\n  game,\n  logSize,\n  roomId\n}: ConstructMovesHandlerArgs): void {\n  const handleMove = ({ move, args }: { move: string; args: Args }) => {\n    const moveFn = getMove({ connectionId, roomId, game, move })\n    if (!isRandomMove(moveFn) && !isSecretMove(moveFn)) {\n      preempt({ setState, game, move, args, roomId, connectionId })\n    }\n    const index = logSizeToIndex(logSize)\n    emit({ conn, emit: { move, args, index } })\n  }\n  setMoves(() => constructMoves({ game, connectionId, roomId, handleMove }))\n}\n\ntype UseMovesArgs = {\n  connected: ConnectionStatus\n  conn: DataConnectionRef\n  id: PeerId\n  setState: CacheAndStateSetter\n  roomId: PeerId\n  game: Game\n  logSize: LogSize\n}\ntype UseMovesReturn = { moves: Moves | null }\nfunction useMoves({\n  connected,\n  conn,\n  id,\n  setState,\n  roomId,\n  game,\n  logSize\n}: UseMovesArgs): UseMovesReturn {\n  const [moves, setMoves] = useState<Moves | null>(null)\n  useEffect(() => {\n    if (!connected) return\n    constructMovesHandler({\n      conn,\n      connectionId: id,\n      setMoves,\n      setState,\n      roomId,\n      game,\n      logSize\n    })\n  }, [connected, conn, id, setMoves, setState, roomId, game, logSize])\n  return { moves }\n}\n\nexport default useMoves\n","import useAck from './useAck'\nimport useSync from './useSync'\nimport useMoves from './useMoves'\nimport useConnection from './useConnection'\nimport { useIdStore, useStateStore, useLogSizeStore } from './stores'\nimport { UsePartyGuestArgs, UsePartyGuestReturn } from '..'\n\n/**\n * A React hook that, provided the game rules and a shared room identifier,\n * returns the guest's state representation and an object with moves\n * to call on the guest's user action.\n */\nfunction usePartyGuest({\n  roomId,\n  game\n}: UsePartyGuestArgs): UsePartyGuestReturn {\n  const { id } = useIdStore(roomId)\n  const { cache, setState } = useStateStore(roomId)\n  const { logSize, setLogSize } = useLogSizeStore(roomId)\n  const { connected, conn, data, clearData } = useConnection({ id, roomId })\n  useAck({ connected, conn, logSize })\n  useSync({ data, clearData, game, roomId, setState, setLogSize })\n  const { moves } = useMoves({\n    connected,\n    conn,\n    id,\n    setState,\n    roomId,\n    game,\n    logSize\n  })\n  return { connectionId: id, connected, state: cache, moves }\n}\n\nexport default usePartyGuest\n","import usePersist from '../usePersist'\nimport { v4 as uuid } from 'uuid'\nimport { PeerId, State } from '..'\nimport { LogSize } from '../types'\nimport { CacheAndState, CacheAndStateSetter } from '.'\n\nimport { Dispatch, SetStateAction } from 'react'\n\nexport function useIdStore(roomId: PeerId): { id: PeerId } {\n  const [id] = usePersist<PeerId>(window.localStorage, `id-${roomId}`, uuid)\n  return { id }\n}\n\ntype UseStateStoreReturn = { cache: State; setState: CacheAndStateSetter }\nexport function useStateStore(roomId: PeerId): UseStateStoreReturn {\n  const [{ cache }, setState] = usePersist<CacheAndState>(\n    window.localStorage,\n    `guestState-${roomId}`,\n    { state: {}, cache: {} }\n  )\n  return { cache, setState }\n}\n\ntype UseLogSizeStoreReturn = {\n  logSize: LogSize\n  setLogSize: Dispatch<SetStateAction<LogSize>>\n}\nexport function useLogSizeStore(roomId: PeerId): UseLogSizeStoreReturn {\n  const [logSize, setLogSize] = usePersist<number>(\n    window.localStorage,\n    `logSize-${roomId}`,\n    0\n  )\n  return { logSize, setLogSize }\n}\n","import { useEffect, useRef, useState, useReducer } from 'react'\nimport usePeer from '../usePeer'\nimport { DataConnectionRef } from '.'\nimport Peer, { DataConnection } from 'peerjs'\nimport { PeerId } from '..'\nimport { EventList } from '../types'\n\nfunction connect({\n  roomId,\n  peer\n}: {\n  roomId: PeerId\n  peer: Peer\n}): DataConnection {\n  return peer.connect(roomId, { serialization: 'json' })\n}\n\ntype UseConnectionArgs = { id: PeerId; roomId: PeerId }\ntype UseConnectionReturn = {\n  connected: boolean\n  conn: DataConnectionRef\n  data: EventList\n  clearData: () => void\n}\nfunction useConnection({ id, roomId }: UseConnectionArgs): UseConnectionReturn {\n  const conn = useRef<DataConnection | null>(null)\n  const { open, peer } = usePeer(id)\n  const [data, setData] = useState<EventList>([])\n  const [connected, setConnected] = useState<boolean>(false)\n  const [attempts, countAttempt] = useReducer((a: number) => a + 1, 0)\n\n  useEffect(() => {\n    if (!peer || !open || connected) return\n\n    conn.current = connect({ peer, roomId })\n\n    const retry = () => {\n      conn.current = null\n      setConnected(false)\n      countAttempt()\n    }\n    const timeout = setTimeout(retry, 1000)\n\n    conn.current.on('open', () => {\n      clearTimeout(timeout)\n      setConnected(true)\n    })\n\n    conn.current.on('data', (data) => {\n      setData((stream) => [...stream, ...data])\n    })\n\n    conn.current.on('close', () => {\n      clearTimeout(timeout)\n      retry()\n    })\n\n    conn.current.on('error', (error) => {\n      console.error(error)\n    })\n  }, [attempts, open, connected, roomId, peer])\n\n  const clearData = () => {\n    setData([])\n  }\n  return { connected: open && connected, conn, data, clearData }\n}\n\nexport default useConnection\n","import { useEffect } from 'react'\nimport { logSizeToIndex } from './funcs'\nimport { DataConnectionRef } from '.'\nimport { Index } from '../types'\n\nconst ack = ({ conn, index }: { conn: DataConnectionRef; index: Index }) => {\n  conn.current?.send({ index })\n}\n\ntype UseAckArgs = {\n  connected: boolean\n  conn: DataConnectionRef\n  logSize: number\n}\nfunction useAck({ connected, conn, logSize }: UseAckArgs): void {\n  useEffect(() => {\n    if (!conn.current || !connected) return\n    const index = logSizeToIndex(logSize)\n    ack({ conn, index })\n  }, [connected, conn, logSize])\n}\n\nexport default useAck\n","import React from \"react\";\nimport Host from \"./Host\";\nimport Guest from \"./Guest\";\n\nconst withGuestPlayers = (Component) => ({ children, ...props }) => (\n    <Guest {...props}>\n        <Component {...props}>\n            {children}\n        </Component>\n    </Guest>\n)\n\nconst withHostPlayers = (options, Component) => ({ children, ...props }) => (\n    <Host {...options} {...props}>\n        <Component {...props}>\n            {children}\n        </Component>\n    </Host>\n)\n\nexport { Host, Guest, withGuestPlayers, withHostPlayers }\n","export const NOUGHTS = 1;\nexport const CROSSES = 2;\n\nconst startGame = ({ state, connectionId, args }) => ({\n  crossesPlayer: args.crossesConnId,\n  noughtsPlayer: args.noughtsConnId,\n  board: Array(9).fill(null),\n});\n\nconst fillSquare = ({ state, connectionId, args }) => {\n  let player = null\n  if (connectionId === state.crossesPlayer) {\n    player = CROSSES;\n  } else if (connectionId === state.noughtsPlayer) {\n    player = NOUGHTS;\n  } else {\n    throw new Error('Connection is not a player');\n  }\n\n  if (state.board[args.position] !== null) {\n    throw new Error('Position filled');\n  }\n\n  const board = [...state.board];\n  board.splice(args.position, 1, player);\n\n  return ({\n    ...state,\n    board,\n  })\n}\n\nconst TicTacToe = {\n  guestMoves: {\n    fillSquare,\n  },\n  \n  hostMoves: {\n    startGame,\n  },\n}\n\nexport default TicTacToe;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { NOUGHTS, CROSSES } from \"../game\";\n\nconst Button = styled.button`\n  width: 33.333%;\n  height: 33.333%;\n  background-color: white;\n  border: 2px solid red;\n  color: black;\n  text-align: center;\n  float: left;\n  box-sizing: border-box;\n`;\n\nconst Tile = styled.div`\n  width: 33.333%;\n  height: 33.333%;\n  background-color: white;\n  border: 2px solid red;\n  color: black;\n  text-align: center;\n  float: left;\n  box-sizing: border-box;\n`;\n\nconst Board = styled.div`\n  width: 30em;\n  height: 30em;\n`;\n\nconst TileOrButton = ({ value, onClick }) =>\n  (value === null)\n    ? <Button onClick={onClick}></Button>\n    : <Tile>\n        {value === NOUGHTS ? \"O\" : null}\n        {value === CROSSES ? \"X\" : null}\n      </Tile>\n\nconst Guest = ({ connected, state, moves }) => (\n  <>\n    {connected ? null : <p>Disconnected..</p>}\n    <Board>\n      {state.board && state.board.map((value, position) =>\n        <TileOrButton key={position} value={value} onClick={() => connected && moves.fillSquare({ position })} />\n      )}\n    </Board>\n  </>\n)\n\nexport default Guest;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { NOUGHTS, CROSSES } from \"../game\";\n\nconst Tile = styled.div`\n  width: 33.333%;\n  height: 33.333%;\n  background-color: cyan;\n  border: 2px solid yellow;\n  color: black;\n  text-align: center;\n  float: left;\n  box-sizing: border-box;\n`;\n\nconst Board = styled.div`\n  width: 30em;\n  height: 30em;\n`;\n\nconst Host = ({ state, roomId, moves, connections }) => {\n  useEffect(() => {\n    if (!state.board && connections.length >= 2) {\n      const [crossesConnId, noughtsConnId] = connections;\n      moves.startGame({ crossesConnId, noughtsConnId });\n    }\n  }, [connections])\n\n  return (\n    <>\n      {connections.length < 2 && (\n        <Link to={`/guest/${roomId}`}>\n          {window.location.host}#/guest/{roomId}\n        </Link>\n      )}\n      <Board>\n        {state.board && state.board.map((value, position) => (\n          <Tile key={position}>\n            {value === NOUGHTS ? \"O\" : null}\n            {value === CROSSES ? \"X\" : null}\n          </Tile>\n        ))}\n      </Board>\n    </>\n  );\n}\n\nexport default Host;\n","import game from \"./game\";\nimport { Host, Guest } from \"./client\";\n\nconst name = \"Tic Tac Toe\";\n\nconst TicTacToe = { name, Host, Guest, game };\n\nexport default TicTacToe;\n","const joinAsAPlayer = ({ state, connectionId, args }) => {\n  if (state.players.list.length >= state.players.maxPlayers) {\n    throw new Error(\"The number of players has reached it's maximum\");\n  }\n  const player = { connectionId, name: args.name, emoji: args.emoji };\n  const playerList = [...state.players.list, player];\n  const players = { ...state.players, list: playerList };\n  return { ...state, players };\n}\n\nconst initPlayers = ({ state, args }) => {\n  const players = {\n    maxPlayers: args.maxPlayers,\n    minPlayers: args.minPlayers,\n    everyoneIsIn: false,\n    list: []\n  }\n  return { ...state, players }\n}\n\nconst everyoneIsIn = ({ state }) => {\n  if (state.players.list.length > state.players.maxPlayers) {\n    throw new Error(\"Too many players\");\n  }\n  if (state.players.list.length < state.players.minPlayers) {\n    throw new Error(\"Not enough players\");\n  }\n  return {\n    ...state,\n    players: {\n      ...state.players,\n      everyoneIsIn: true\n    }\n  }\n}\n\nconst game = {\n  guestMoves: {\n    joinAsAPlayer,\n  },\n  \n  hostMoves: {\n    initPlayers,\n    everyoneIsIn,\n  },\n}\n\nexport default game;\n","export default __webpack_public_path__ + \"static/media/AH.1a5ea790.svg\";","export default __webpack_public_path__ + \"static/media/AC.0e3c2151.svg\";","export default __webpack_public_path__ + \"static/media/AD.5c4da062.svg\";","export default __webpack_public_path__ + \"static/media/AS.0beacefa.svg\";","export default __webpack_public_path__ + \"static/media/2H.cb701b97.svg\";","export default __webpack_public_path__ + \"static/media/2C.276c3f69.svg\";","export default __webpack_public_path__ + \"static/media/2D.bc21ec2a.svg\";","export default __webpack_public_path__ + \"static/media/2S.ec187ad2.svg\";","export default __webpack_public_path__ + \"static/media/3H.cba17cfa.svg\";","export default __webpack_public_path__ + \"static/media/3C.4defbcf5.svg\";","export default __webpack_public_path__ + \"static/media/3D.8d12a3fc.svg\";","export default __webpack_public_path__ + \"static/media/3S.ed80cdda.svg\";","export default __webpack_public_path__ + \"static/media/4H.8924ea52.svg\";","export default __webpack_public_path__ + \"static/media/4C.3ebe0e73.svg\";","export default __webpack_public_path__ + \"static/media/4D.433a1ecc.svg\";","export default __webpack_public_path__ + \"static/media/4S.7e474260.svg\";","export default __webpack_public_path__ + \"static/media/5H.04a38bb9.svg\";","export default __webpack_public_path__ + \"static/media/5C.809e552d.svg\";","export default __webpack_public_path__ + \"static/media/5D.03b1a4af.svg\";","export default __webpack_public_path__ + \"static/media/5S.f4e082a6.svg\";","export default __webpack_public_path__ + \"static/media/6H.5380d254.svg\";","export default __webpack_public_path__ + \"static/media/6C.1f69ca79.svg\";","export default __webpack_public_path__ + \"static/media/6D.8c9d26ce.svg\";","export default __webpack_public_path__ + \"static/media/6S.33eb8c1b.svg\";","export default __webpack_public_path__ + \"static/media/7H.156a2f08.svg\";","export default __webpack_public_path__ + \"static/media/7C.cb6a5b5c.svg\";","export default __webpack_public_path__ + \"static/media/7D.bc93fd45.svg\";","export default __webpack_public_path__ + \"static/media/7S.f91490c5.svg\";","export default __webpack_public_path__ + \"static/media/8H.878dbca5.svg\";","export default __webpack_public_path__ + \"static/media/8C.e91af699.svg\";","export default __webpack_public_path__ + \"static/media/8D.ca4420e9.svg\";","export default __webpack_public_path__ + \"static/media/8S.fd5cd6f8.svg\";","export default __webpack_public_path__ + \"static/media/9H.57bfd8e3.svg\";","export default __webpack_public_path__ + \"static/media/9C.c6a841cc.svg\";","export default __webpack_public_path__ + \"static/media/9D.3d612a15.svg\";","export default __webpack_public_path__ + \"static/media/9S.6c7e4615.svg\";","export default __webpack_public_path__ + \"static/media/10H.c8c8e4de.svg\";","export default __webpack_public_path__ + \"static/media/10C.0cc64a48.svg\";","export default __webpack_public_path__ + \"static/media/10D.956683a1.svg\";","export default __webpack_public_path__ + \"static/media/10S.99cb26ab.svg\";","export default __webpack_public_path__ + \"static/media/JH.86f58f4f.svg\";","export default __webpack_public_path__ + \"static/media/JC.b801c5a7.svg\";","export default __webpack_public_path__ + \"static/media/JD.a0e75607.svg\";","export default __webpack_public_path__ + \"static/media/JS.1a6f34e2.svg\";","export default __webpack_public_path__ + \"static/media/QH.f56614ef.svg\";","export default __webpack_public_path__ + \"static/media/QC.3eb5bae0.svg\";","export default __webpack_public_path__ + \"static/media/QD.c20eb8d2.svg\";","export default __webpack_public_path__ + \"static/media/QS.cc68ac97.svg\";","export default __webpack_public_path__ + \"static/media/KH.3d6b1be6.svg\";","export default __webpack_public_path__ + \"static/media/KC.ca193598.svg\";","export default __webpack_public_path__ + \"static/media/KD.32d1a9f8.svg\";","export default __webpack_public_path__ + \"static/media/KS.b54b6bba.svg\";","export default __webpack_public_path__ + \"static/media/JOKER.96be08d3.svg\";","const SUITS = ['H', 'D', 'S', 'C'];\nconst JOKER = 0,\n  ACE = 1,\n  JACK = 11,\n  QUEEN = 12,\n  KING = 13;\nconst VALUES = [ACE, 2, 3, 4, 5, 6, 7, 8, 9, 10, JACK, QUEEN, KING];\n\nexport {\n  SUITS,\n  VALUES,\n  JOKER,\n  ACE,\n  JACK,\n  QUEEN,\n  KING,\n}\n","import { JOKER, SUITS, VALUES } from \"./model\";\n\nconst constructDeckOfCards = ({ jokers = 0 } = {}) => {\n  const cards = []\n  for (let suit of SUITS) {\n    for (let value of VALUES) {\n      cards.push({ suit, value });\n    }\n  }\n\n  for (let i = 0; i < jokers; i++) {\n    cards.push({ suit: null, value: JOKER });\n  }\n\n  return cards;\n}\n\n\nexport default constructDeckOfCards;\n","import React from 'react'\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin-bottom: -9em;\n  margin-right: -3em;\n\n  ${({ order }) => order && `order: ${order};`}\n`;\n\nconst UnSelectable = styled.div`\n  position: relative;\n  margin-top: 2em;\n`;\n\nconst Selectable = styled(UnSelectable)`\n  &:hover {\n    margin-top: 1em;\n    margin-bottom: 1em;\n    cursor: pointer;\n  }\n\n  ${({ isSelected }) => isSelected && `\n    margin-top: 0em;\n    margin-bottom: 2em;\n\n    &:hover {\n      margin-top: 0em;\n      margin-bottom: 2em;\n    }\n  `}\n`;\n\nconst Overlay = styled.div`\n  opacity: 0.4;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border-radius: 0.5em;\n\n  ${({ isSelected, selectColor }) => isSelected && selectColor && `\n    background-color: ${selectColor};\n  `}\n`;\n\nconst FaceImg = styled.img`\n  width: 9em;\n  display: block;\n`;\n\nconst SelectableFace = ({ isSelected, selectColor, faceImage, altText, onClick }) => (\n  <Selectable isSelected={isSelected}>\n    <FaceImg src={faceImage} alt={altText} />\n    <Overlay isSelected={isSelected} selectColor={selectColor} onClick={onClick}/>\n  </Selectable>\n);\n\nconst UnSelectableFace = ({ faceImage, altText }) => (\n  <UnSelectable>\n    <FaceImg src={faceImage} alt={altText}/>\n  </UnSelectable>\n);\n\nconst Card = ({ order, canBeSelected, isSelected, selectColor, faceImage, altText, onClick }) => {\n  const Face = canBeSelected ? SelectableFace : UnSelectableFace;\n  return (\n    <Container order={order}>\n      <Face isSelected={isSelected} selectColor={selectColor} faceImage={faceImage} altText={altText} onClick={onClick} />\n    </Container>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport HA from './cards/AH.svg'\nimport CA from './cards/AC.svg'\nimport DA from './cards/AD.svg'\nimport SA from './cards/AS.svg'\nimport H2 from './cards/2H.svg'\nimport C2 from './cards/2C.svg'\nimport D2 from './cards/2D.svg'\nimport S2 from './cards/2S.svg'\nimport H3 from './cards/3H.svg'\nimport C3 from './cards/3C.svg'\nimport D3 from './cards/3D.svg'\nimport S3 from './cards/3S.svg'\nimport H4 from './cards/4H.svg'\nimport C4 from './cards/4C.svg'\nimport D4 from './cards/4D.svg'\nimport S4 from './cards/4S.svg'\nimport H5 from './cards/5H.svg'\nimport C5 from './cards/5C.svg'\nimport D5 from './cards/5D.svg'\nimport S5 from './cards/5S.svg'\nimport H6 from './cards/6H.svg'\nimport C6 from './cards/6C.svg'\nimport D6 from './cards/6D.svg'\nimport S6 from './cards/6S.svg'\nimport H7 from './cards/7H.svg'\nimport C7 from './cards/7C.svg'\nimport D7 from './cards/7D.svg'\nimport S7 from './cards/7S.svg'\nimport H8 from './cards/8H.svg'\nimport C8 from './cards/8C.svg'\nimport D8 from './cards/8D.svg'\nimport S8 from './cards/8S.svg'\nimport H9 from './cards/9H.svg'\nimport C9 from './cards/9C.svg'\nimport D9 from './cards/9D.svg'\nimport S9 from './cards/9S.svg'\nimport H10 from './cards/10H.svg'\nimport C10 from './cards/10C.svg'\nimport D10 from './cards/10D.svg'\nimport S10 from './cards/10S.svg'\nimport HJ from './cards/JH.svg'\nimport CJ from './cards/JC.svg'\nimport DJ from './cards/JD.svg'\nimport SJ from './cards/JS.svg'\nimport HQ from './cards/QH.svg'\nimport CQ from './cards/QC.svg'\nimport DQ from './cards/QD.svg'\nimport SQ from './cards/QS.svg'\nimport HK from './cards/KH.svg'\nimport CK from './cards/KC.svg'\nimport DK from './cards/KD.svg'\nimport SK from './cards/KS.svg'\nimport JKR from './cards/JOKER.svg'\nimport { JOKER, ACE, KING, QUEEN, JACK } from '../game'\nimport Card from \"./Card\";\n\nconst getFaceImage = ({ suit, value }) => {\n  if (value === JOKER) {\n    return JKR\n  } else if (value === ACE && suit === 'H') {\n    return HA\n  } else if (value === ACE && suit === 'D') {\n    return DA\n  } else if (value === ACE && suit === 'S') {\n    return SA\n  } else if (value === ACE && suit === 'C') {\n    return CA\n  } else if (value === 2 && suit === 'H') {\n    return H2\n  } else if (value === 2 && suit === 'D') {\n    return D2\n  } else if (value === 2 && suit === 'S') {\n    return S2\n  } else if (value === 2 && suit === 'C') {\n    return C2\n  } else if (value === 3 && suit === 'H') {\n    return H3\n  } else if (value === 3 && suit === 'D') {\n    return D3\n  } else if (value === 3 && suit === 'S') {\n    return S3\n  } else if (value === 3 && suit === 'C') {\n    return C3\n  } else if (value === 4 && suit === 'H') {\n    return H4\n  } else if (value === 4 && suit === 'D') {\n    return D4\n  } else if (value === 4 && suit === 'S') {\n    return S4\n  } else if (value === 4 && suit === 'C') {\n    return C4\n  } else if (value === 5 && suit === 'H') {\n    return H5\n  } else if (value === 5 && suit === 'D') {\n    return D5\n  } else if (value === 5 && suit === 'S') {\n    return S5\n  } else if (value === 5 && suit === 'C') {\n    return C5\n  } else if (value === 6 && suit === 'H') {\n    return H6\n  } else if (value === 6 && suit === 'D') {\n    return D6\n  } else if (value === 6 && suit === 'S') {\n    return S6\n  } else if (value === 6 && suit === 'C') {\n    return C6\n  } else if (value === 7 && suit === 'H') {\n    return H7\n  } else if (value === 7 && suit === 'D') {\n    return D7\n  } else if (value === 7 && suit === 'S') {\n    return S7\n  } else if (value === 7 && suit === 'C') {\n    return C7\n  } else if (value === 8 && suit === 'H') {\n    return H8\n  } else if (value === 8 && suit === 'D') {\n    return D8\n  } else if (value === 8 && suit === 'S') {\n    return S8\n  } else if (value === 8 && suit === 'C') {\n    return C8\n  } else if (value === 9 && suit === 'H') {\n    return H9\n  } else if (value === 9 && suit === 'D') {\n    return D9\n  } else if (value === 9 && suit === 'S') {\n    return S9\n  } else if (value === 9 && suit === 'C') {\n    return C9\n  } else if (value === 10 && suit === 'H') {\n    return H10\n  } else if (value === 10 && suit === 'D') {\n    return D10\n  } else if (value === 10 && suit === 'S') {\n    return S10\n  } else if (value === 10 && suit === 'C') {\n    return C10\n  } else if (value === JACK && suit === 'H') {\n    return HJ\n  } else if (value === JACK && suit === 'D') {\n    return DJ\n  } else if (value === JACK && suit === 'S') {\n    return SJ\n  } else if (value === JACK && suit === 'C') {\n    return CJ\n  } else if (value === QUEEN && suit === 'H') {\n    return HQ\n  } else if (value === QUEEN && suit === 'D') {\n    return DQ\n  } else if (value === QUEEN && suit === 'S') {\n    return SQ\n  } else if (value === QUEEN && suit === 'C') {\n    return CQ\n  } else if (value === KING && suit === 'H') {\n    return HK\n  } else if (value === KING && suit === 'D') {\n    return DK\n  } else if (value === KING && suit === 'S') {\n    return SK\n  } else if (value === KING && suit === 'C') {\n    return CK\n  }\n}\n\nconst getAltText = ({ value, suit }) => {\n  if (value === JOKER) {\n    return '🃏 Joker'\n  } else if (value === ACE && suit === 'H') {\n    return '🂱 Ace of Hearts'\n  } else if (value === ACE && suit === 'D') {\n    return '🃁 Ace of Diamonds'\n  } else if (value === ACE && suit === 'S') {\n    return '🂡 Ace of Spaces'\n  } else if (value === ACE && suit === 'C') {\n    return '🃑 Ace of Clubs'\n  } else if (value === 2 && suit === 'H') {\n    return '🂲 Two of Hearts'\n  } else if (value === 2 && suit === 'D') {\n    return '🃂 Two of Diamonds'\n  } else if (value === 2 && suit === 'S') {\n    return '🂢 Two of Spades'\n  } else if (value === 2 && suit === 'C') {\n    return '🃒 Two of Clubs'\n  } else if (value === 3 && suit === 'H') {\n    return '🂳 Three of Hearts'\n  } else if (value === 3 && suit === 'D') {\n    return '🃃 Three of Diamonds'\n  } else if (value === 3 && suit === 'S') {\n    return '🂣 Three of Spades'\n  } else if (value === 3 && suit === 'C') {\n    return '🃓 Three of Clubs'\n  } else if (value === 4 && suit === 'H') {\n    return '🂴 Four of Hearts'\n  } else if (value === 4 && suit === 'D') {\n    return '🃄 Four of Diamonds'\n  } else if (value === 4 && suit === 'S') {\n    return '🂤 Four of Spades'\n  } else if (value === 4 && suit === 'C') {\n    return '🃔 Four of Clubs'\n  } else if (value === 5 && suit === 'H') {\n    return '🂵 Five of Hearts'\n  } else if (value === 5 && suit === 'D') {\n    return '🃅 Five of Diamonds'\n  } else if (value === 5 && suit === 'S') {\n    return '🂥 Five of Spades'\n  } else if (value === 5 && suit === 'C') {\n    return '🃕 Five of Clubs'\n  } else if (value === 6 && suit === 'H') {\n    return '🂶 Six of Hearts'\n  } else if (value === 6 && suit === 'D') {\n    return '🃆 Six of Diamomnds'\n  } else if (value === 6 && suit === 'S') {\n    return '🂦 Six of Spades'\n  } else if (value === 6 && suit === 'C') {\n    return '🃖 Six of Clubs'\n  } else if (value === 7 && suit === 'H') {\n    return '🂷 Seven of Hearts'\n  } else if (value === 7 && suit === 'D') {\n    return '🃇 Seven of Diamonds'\n  } else if (value === 7 && suit === 'S') {\n    return '🂧 Seven of Spades'\n  } else if (value === 7 && suit === 'C') {\n    return '🃗 Seven of Clubs'\n  } else if (value === 8 && suit === 'H') {\n    return '🂸 Eight of Hearts'\n  } else if (value === 8 && suit === 'D') {\n    return '🃈 Eight of Diamonds'\n  } else if (value === 8 && suit === 'S') {\n    return '🂨 Eight of Spades'\n  } else if (value === 8 && suit === 'C') {\n    return '🃘 Eight of Clubs'\n  } else if (value === 9 && suit === 'H') {\n    return '🂹 Nine of Hearts'\n  } else if (value === 9 && suit === 'D') {\n    return '🃉 Nine of Diamonds'\n  } else if (value === 9 && suit === 'S') {\n    return '🂩 Nine of Spades'\n  } else if (value === 9 && suit === 'C') {\n    return '🃙 Nine of Clubs'\n  } else if (value === 10 && suit === 'H') {\n    return '🂺 Ten of Hearts'\n  } else if (value === 10 && suit === 'D') {\n    return '🃊 Ten of Diamonds'\n  } else if (value === 10 && suit === 'S') {\n    return '🂪 Ten of Spades'\n  } else if (value === 10 && suit === 'C') {\n    return '🃚 Ten of Clubs'\n  } else if (value === JACK && suit === 'H') {\n    return '🂻 Jack of Hearts'\n  } else if (value === JACK && suit === 'D') {\n    return '🃋 Jack of Diamonds'\n  } else if (value === JACK && suit === 'S') {\n    return '🂫 Jack of Spades'\n  } else if (value === JACK && suit === 'C') {\n    return '🃛 Jack of Clubs'\n  } else if (value === QUEEN && suit === 'H') {\n    return '🂽 Queen of Hearts'\n  } else if (value === QUEEN && suit === 'D') {\n    return '🃍 Queen of Diamonds'\n  } else if (value === QUEEN && suit === 'S') {\n    return '🂭 Queen of Spades'\n  } else if (value === QUEEN && suit === 'C') {\n    return '🃝 Queen of Clubs'\n  } else if (value === KING && suit === 'H') {\n    return '🂾 King of Hearts'\n  } else if (value === KING && suit === 'D') {\n    return '🃞 King of Diamonds'\n  } else if (value === KING && suit === 'S') {\n    return '🂮 King of Spades'\n  } else if (value === KING && suit === 'C') {\n    return '🃞 King of Clubs'\n  }\n}\n\nconst CardFront = ({ value, suit, canBeSelected = false, isSelected = false, selectColor = null }) => {\n  console.log(\"select\", selectColor);\n  const faceImage = getFaceImage({ value, suit });\n  const altText = getAltText({ value, suit });\n  return (\n    <Card faceImage={faceImage} altText={altText} isSelected={isSelected} canBeSelected={canBeSelected} selectColor={selectColor}/>\n  );\n}\n\nexport default CardFront;\n","export default __webpack_public_path__ + \"static/media/RED_BACK.eea8c6b0.svg\";","export default __webpack_public_path__ + \"static/media/BLUE_BACK.d7aabd90.svg\";","import React from \"react\";\nimport RED_BACK from './cards/RED_BACK.svg'\nimport BLUE_BACK from './cards/BLUE_BACK.svg'\nimport Card from \"./Card\";\n\nconst getFaceImage = ({ colour }) => {\n  if (colour === 'R') {\n    return RED_BACK\n  } else if (colour === 'B') {\n    return BLUE_BACK\n  }\n}\n\nconst CardBack = ({ colour, isSelected = false, canBeSelected = false, selectColor = null }) => {\n  const faceImage = getFaceImage({ colour });\n  return (\n    <Card faceImage={faceImage} altText='🂠 Card Back' isSelected={isSelected} canBeSelected={canBeSelected} selectColor={selectColor}/>\n  );\n}\n\nexport default CardBack;\n","export default __webpack_public_path__ + \"static/media/felt.5b148bae.png\";","import styled from \"styled-components\";\nimport felt from \"./felt.png\";\n\nconst FeltTable = styled.div`\n  background-color: rgb(10, 80, 20);\n  background-image: url(${felt});\n  height: 100%;\n  padding: 5%;\n`;\n\nexport default FeltTable;\n","import styled from \"styled-components\";\n\nconst Hand = styled.section`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  max-height: 50%;\n\n  padding-right: 3em;\n  padding-bottom: 9em;\n`;\n\nexport default Hand;\n","import { PlayingCardFront } from \"./client\";\nexport * from \"./client\";\nexport * from \"./game\";\nexport default PlayingCardFront;","import playersGame from \"components/players/game\";\nimport { constructDeckOfCards } from \"components/playing-card\";\n\nconst connectionIsHosts = ({ roomId, connectionId }) => (\n  roomId === connectionId\n);\n\nconst startGame = ({ state, roomId, connectionId }) => {\n  const newState = { ...state, discard: [] };\n  const isHost = connectionIsHosts({ roomId, connectionId });\n  if (isHost) {\n    newState.deck = constructDeckOfCards();\n  } else {\n    newState.hand = []\n  }\n  return newState;\n}\n\nconst deal = () => {}\n\nconst game = {\n  guestMoves: {\n    ...playersGame.guestMoves,\n  },\n  \n  hostMoves: {\n    ...playersGame.hostMoves,\n    startGame,\n    deal,\n  },\n}\n\nexport default game;\n","import React, { memo } from 'react'\nimport twemoji from 'twemoji'\n\nconst Emoji = memo(({ emoji }) => (\n  <span\n    dangerouslySetInnerHTML={{\n      __html: twemoji.parse(emoji, { folder: 'svg', ext: '.svg' }),\n    }}\n  />\n));\n\nexport default Emoji;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Picker } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\n\nconst Background = styled.div`\n  background-color: rgba(0, 0, 0, 0.8);\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Wrapper = styled.div`\n  display: inline-block;\n`;\n \nconst EmojiPicker = ({ onSelectEmoji, onHide }) => {\n  const onSelect = (emoji) => {\n    onSelectEmoji(emoji.native);\n  }\n  return (\n    <Background tabIndex onKeyPress={onHide} onClick={onHide}>\n      <Wrapper onClick={(e) => e.stopPropagation()}>\n        <Picker onSelect={onSelect} set=\"twitter\" />\n      </Wrapper>\n    </Background>\n  );\n};\n\nexport default EmojiPicker;","import Emoji from \"./Emoji\";\nimport EmojiPicker from \"./EmojiPicker\";\n\nexport default Emoji;\nexport { EmojiPicker }","import React, { useEffect } from \"react\";\nimport Emoji from \"components/emoji\";\nimport { Flex, Box, Button, Text } from \"rebass/styled-components\";\n\nconst checkIfCanStartGame = ({ state: { players } }) => (\n  players.list.length >= players.minPlayers\n);\n\nconst PlayerList = ({ children, players }) => {\n  return (\n    <Flex>\n      <Box flexGrow={1}>\n        {players.map(({ name, emoji }, index) => (\n          <Flex alignItems=\"center\"  key={index}>\n            <Box width=\"2em\" height=\"2em\" my={2} mx={3}>\n              {emoji && <Emoji emoji={emoji}/>}\n            </Box>\n            {name}\n          </Flex>\n        ))}\n      </Box>\n      <Box flexGrow={3}>\n        {children}\n      </Box>\n    </Flex>\n  );\n}\n\nconst HowToJoin = ({ roomId }) => (\n  <Text fontSize={[ 3, 4, 5 ]} fontWeight='bold' color='secondary'>\n    Join: {roomId}\n  </Text>\n)\n\nconst Host = ({ state, roomId, moves, connections, maxPlayers, minPlayers, children }) => {\n  useEffect(() => {\n    if (!state.players && moves?.initPlayers) {\n      moves.initPlayers({ maxPlayers, minPlayers });\n    }\n  }, [state.players, moves]);\n\n  if (!state.players) return null;\n  if (state.players.everyonesIn) return children;\n  const canStartGame = checkIfCanStartGame({ state });\n  return (\n    <PlayerList players={state.players.list}>\n      <Flex height=\"100%\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"space-around\">\n        <HowToJoin roomId={roomId}/>\n        {canStartGame && (\n          <Button\n            my={2}\n            onClick={() => moves.startGame()}\n            onKeyPress={() => moves.startGame()}\n          >\n            Start Game\n          </Button>\n        )}\n      </Flex>\n    </PlayerList>\n  )\n};\n\nexport default Host;\n","import React, { useState } from \"react\";\nimport Emoji, { EmojiPicker } from \"components/emoji\";\nimport { Flex, Box, Button, Text } from \"rebass/styled-components\";\nimport { Input, Label } from \"@rebass/forms/styled-components\";\n\nconst JoinScreen = ({ onJoin }) => {\n  const [name, setName] = useState(\"\");\n  const [emoji, setEmoji] = useState('😎');\n  const [pickerIsShown, setPickerIsShown] = useState(false);\n  const showPicker = () => setPickerIsShown(true);\n  const hidePicker = () => setPickerIsShown(false);\n\n  const join = () => {\n    name?.length && onJoin({ name, emoji })\n  }\n\n  const onSelectEmoji = (emoji) => {\n    setEmoji(emoji);\n    hidePicker();\n  }\n\n  return (\n    <>\n      {pickerIsShown && <EmojiPicker onHide={hidePicker} onSelectEmoji={onSelectEmoji} />}\n      <Flex my={5} alignItems=\"center\" flexDirection=\"column\">\n        <Box width={'10em'} height={'10em'} onKeyPress={showPicker} onClick={showPicker}>\n          <Emoji emoji={emoji}/>\n        </Box>\n        <Box my={2}>\n          <Text fontSize={[ 3, 4, 5 ]} fontWeight='bold' color='primary'>\n            {name}\n          </Text>\n        </Box>\n        <Box>\n          <Label htmlFor=\"nickname\">Nickname</Label>\n          <Input id=\"nickname\" onChange={(e) => setName(e.target.value)} value={name}/>\n        </Box>\n        <Box my={3}>\n          <Button variant=\"primary\" onKeyPress={join} onClick={join}>\n            Sit down to Play\n          </Button>\n        </Box>\n      </Flex>\n    </>\n  );\n}\n\nconst Spectator = () => (\n  <Flex height=\"100vh\" justifyContent=\"center\" alignItems=\"center\">\n    <Text fontSize={[ 3, 4, 5 ]} fontWeight='bold' color='primary'>\n      You are a Spectator\n    </Text>\n  </Flex>\n)\n\nconst Waiting = () => (\n  <Flex height=\"100vh\" justifyContent=\"center\" alignItems=\"center\">\n    <Text fontSize={[ 3, 4, 5 ]} fontWeight='bold' color='primary'>\n      Be patient, the host is setting up your game.\n    </Text>\n  </Flex>\n)\n\nconst findConnectionIsPlayer = ({ players, connectionId }) => (\n  players.findIndex(player => player.connectionId === connectionId) > -1\n)\n\nconst checkIfGameIsFull = ({ state: { players } }) => (\n  players.list.length > players.maxPlayers\n);\n\nconst Guest = ({ children, state, roomId, moves, connectionId }) => {\n  if (!state.players) {\n    return <Waiting/>;\n  }\n\n  const isPlayer = findConnectionIsPlayer({ players: state.players.list, connectionId });\n\n  const onJoin = ({ name, emoji }) => {\n    moves.joinAsAPlayer({ name, emoji });\n  }\n\n  if (state.players.everyonesIn) {\n    return isPlayer ? children : <Spectator/>;\n  } else {\n    const gameIsFull = checkIfGameIsFull({ state });\n    return isPlayer || gameIsFull ? <Waiting/> : <JoinScreen onJoin={onJoin}/>;\n  }\n}\n\nexport default Guest;\n","import game from \"./game\";\nimport { Host, Guest } from \"./client\";\n\nconst name = \"Whist\";\n\nconst Whist = { name, Host, Guest, game };\n\nexport default Whist;\n","import React from \"react\";\nimport { withHostPlayers } from \"components/players/client\"\nimport PlayingCard, { PlayingCardBack, FeltTable, Hand } from \"components/playing-card\";\n\nconst Host = withHostPlayers({ maxPlayers: 4, minPlayers: 4 }, ({ state, roomId, moves, connections }) => {\n  return (\n    <FeltTable>\n      <PlayingCardBack colour=\"R\"/>\n      <Hand>\n        {state.discard && state.discard.map(({ suit, value }) => (\n          <PlayingCard suit={suit} value={value}/>  \n        ))}\n      </Hand>\n    </FeltTable>\n  );\n})\n\nexport default Host;\n","import React from \"react\";\nimport { withGuestPlayers } from \"components/players/client\"\nimport PlayingCard, { FeltTable, Hand } from \"components/playing-card\";\n\nconst Guest = withGuestPlayers(({ state, roomId, moves, connectionId }) => {\n  return (\n    <FeltTable>\n      <Hand>\n        {state.hand && state.hand.map(({ suit, value }) => (\n          <PlayingCard suit={suit} value={value}/>  \n        ))}\n      </Hand>\n    </FeltTable>\n  );\n})\n\nexport default Guest;\n","import { withSecret, withRandom } from \"@compendium/peer-party\";\n\nconst game = {\n  guestMoves: {\n    passPotato: withRandom(withSecret(({ connectionId, revealSecret, state, random, contextId }) => {\n      if (!revealSecret(connectionId, s => s.hotPotato)) {\n        throw new Error(\"Must have potato to throw it\");\n      }\n      const numPlayers = state.players.list.length;\n      const playerIndex = Math.floor(random() * numPlayers);\n      const player = state.players.list[playerIndex];\n      if (player === contextId) {\n        return { ...state, hotPotato: true }\n      } else {\n        return { ...state, hotPotato: false }\n      }\n    })),\n  },\n  \n  hostMoves: {\n    setBackgroundColour: ({ state, args }) => {\n      return { ...state, backgroundColour: args.backgroundColour };\n    },\n    throwPotato: withRandom(withSecret(({ state, random, contextId, revealSecret }) => {\n      const numPlayers = state.players.list.length;\n      const playerIndex = Math.floor(random() * numPlayers);\n      const player = state.players.list[playerIndex];\n      if (player === contextId) {\n        return { ...state, hotPotato: true }\n      } else {\n        return { ...state, hotPotato: false }\n      }\n    })),\n    stopMusic: withSecret(({ state, revealSecret }) => {\n      const hotPotatoPlayer = state.players.list.find(playerId => (\n        revealSecret(playerId, s => s.hotPotato)\n      ));\n      return { ...state, loser: hotPotatoPlayer };\n    }),\n  },\n}\n\nexport default game;\n","import React from \"react\";\nimport { Button, Flex } from \"rebass/styled-components\";\n\nconst Host = ({ moves }) => {\n  const onThrowPotato = () => moves.throwPotato();\n  return (\n    <Flex>\n      <Button onClick={onThrowPotato} onKeyPress={onThrowPotato} variant='primary' mr={2}>\n        Throw the Hot Potato, to your Guests!\n       </Button>\n    </Flex>\n  );\n};\n\nexport default Host;\n","import React from \"react\";\nimport Emoji from \"components/emoji\";\nimport { Text, Button, Flex, Box } from \"rebass/styled-components\";\n\nconst Container = Box\n\nconst EmojiBox = ({ emoji = '♥'}) => (\n  <Flex>\n    <Box width=\"20vh\" height=\"20vh\">\n      <Emoji emoji={emoji}/>\n    </Box>\n  </Flex>\n)\n\nconst Disconnected = () => (\n  <Container>\n    <Text\n      fontSize={[ 3, 4, 5 ]}\n      fontWeight='bold'\n      color='primary'\n    >\n      Not Connected to the Host!\n    </Text>\n  </Container>\n);\n\nconst OpenHands = () => (\n  <Container>\n    <EmojiBox emoji={'👐'}/>\n    <Text\n      fontSize={[ 3, 4, 5 ]}\n      fontWeight='bold'\n      color='primary'\n    >\n      Phew, no hot potato! \n    </Text>\n  </Container>\n)\n\nconst Potato = ({ onPassPotato = () => {} }) => (\n  <Container>\n    <EmojiBox emoji={'🥔'}/>\n    <Text\n      fontSize={[ 3, 4, 5 ]}\n      fontWeight='bold'\n      color='primary'\n    >\n      Oww! Hot potato! \n    </Text>\n    <Button onClick={onPassPotato} onKeyPress={onPassPotato} variant='primary' mr={2}>Pass the Potato</Button>\n  </Container>\n)\n\nconst Guest = ({ state, roomId, moves, connectionId, connected }) => {\n  if (!connected) {\n    return (\n      <Disconnected/>\n    );\n  }\n\n  if (state.hotPotato) {\n    return (\n      <Potato onPassPotato={() => moves.passPotato()} />\n    )\n  } else {\n    return (\n      <OpenHands/>\n    )\n  }  \n};\n\nexport default Guest;","import TicTacToe from \"games/tic-tac-toe\";\nimport Whist from \"games/whist\";\nimport HotPotato from \"games/hot-potato\";\n\nconst compendium = [\n  TicTacToe,\n  Whist,\n  HotPotato,\n];\n\nexport default compendium;\n","import game from \"./game\";\nimport { Host, Guest } from \"./client\";\nimport presetTheme from '@rebass/preset'\n\nconst name = \"Hot Potato\";\nconst theme = presetTheme;\n\nconst HotPotato = { name, theme, Host, Guest, game };\n\nexport default HotPotato;\n","import randomWords from \"random-words\";\nimport isEqual from \"lodash/isEqual\";\n\nconst permutations = [\n  [0, 1, 2],\n  [0, 2, 1],\n  [1, 0, 2],\n  [2, 0, 1],\n  [2, 1, 0],\n  [1, 2, 0],\n];\n\nexport const createRoomId = (compendiumIndex) => {\n  const order = permutations[compendiumIndex]\n  const words = randomWords({ exactly: 3 }).sort();\n  const orderedWords = order.map(o => words[o])\n  const roomId = orderedWords.join('-')\n  return roomId\n}\n\nexport const decodeCompendiumIndex = (roomId) => {\n  const words = roomId.split('-')\n  const sortedWords = [...words].sort()\n  const permutation = words.map(word => sortedWords.findIndex((w) => word === w))\n  const compendiumIndex = permutations.findIndex((permu) => isEqual(permu, permutation))\n  return compendiumIndex;\n}\n","import { useState, useEffect } from \"react\";\nimport compendium from \"./compendium\";\nimport { decodeCompendiumIndex } from \"./rooms\";\n\nconst getGame = (roomId) => {\n  const compendiumIndex = decodeCompendiumIndex(roomId)\n  const game = compendium[compendiumIndex];\n  return game;\n}\n\nconst useGame = (roomId) => {\n  const [game, setGame] = useState({ name: null, Host: null, Guest: null, game: null });\n  useEffect(() => setGame(getGame(roomId)), [])\n  return game;\n}\n\nexport default useGame;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { createRoomId } from \"./rooms\";\nimport compendium from \"./compendium\";\nimport { Heading, Flex, Box, Button } from \"rebass/styled-components\";\nimport { Select, Input, Label } from \"@rebass/forms/styled-components\";\n\n\nconst NewGame = ({ onNewGame }) => {\n  const [value, set] = useState(0);\n\n  const onChange = (e) => {\n    set(e.target.value);\n    e.preventDefault();\n  }\n\n  const onSubmit = () => onNewGame(value);\n\n  return (\n    <Box my={4} width={['100%', '80%', '35em']}>\n      <Select m={1} onChange={onChange} value={value}>\n        {compendium.map(({ name }, index) =>\n          <option value={index} key={index}>{name}</option>)}\n      </Select>\n      <Button m={1} onClick={onSubmit} onKeyPress={onSubmit}>Host New Game</Button>\n    </Box>\n  )\n}\n\nconst JoinGame = ({ onJoinGame }) => {\n  const [value, set] = useState();\n\n  const onChange = (e) => {\n    set(e.target.value);\n    e.preventDefault();\n  }\n\n  const onSubmit = () => onJoinGame(value);\n\n  return (\n    <Box my={4} width={['100%', '80%', '35em']}>\n      <Box>\n        <Label>\n          Room Password\n        </Label>\n        <Input onChange={onChange} value={value}/>\n      </Box>\n      <Button m={1} onClick={onSubmit} onKeyPress={onSubmit}>Join Game</Button>\n    </Box>\n  );\n}\n\n\nconst Home = () => {\n  const { push } = useHistory();\n\n  const onNewGame = (compendiumIndex) => {\n    const roomId = createRoomId(compendiumIndex);\n    push(`/host/${roomId}`)\n  }\n\n  const onJoinGame = (roomId) => {\n    push(`/guest/${roomId}`)\n  }\n\n  return (\n    <Flex mx={['2em', '15%', '20%']} flexDirection=\"column\">\n      <Heading mt={4} fontSize={[ 5, 6 ]} color='primary'>\n        Compendium Games\n      </Heading>\n      <NewGame onNewGame={onNewGame} />\n      <JoinGame onJoinGame={onJoinGame} />\n    </Flex>\n  )\n}\n\n\nexport default Home;\n","import base from '@rebass/preset'\nexport default base;\n","import { ThemeProvider } from \"styled-components\";\nimport { usePartyHost, usePartyGuest } from \"@compendium/peer-party\";\nimport { HashRouter, Switch, Route, useParams } from \"react-router-dom\";\nimport useGame from \"./useGame\";\nimport Home from \"./Home\";\nimport baseTheme from \"./theme\"\n\nconst HostRoute = () => {\n  const { roomId } = useParams();\n  const { theme, Host, game } = useGame(roomId);\n  const { state, moves, connections } = usePartyHost({ roomId, game });\n  return (\n    <ThemeProvider theme={theme || baseTheme}>\n      {Host && <Host roomId={roomId} state={state} moves={moves} connections={connections} />}\n    </ThemeProvider>\n  )\n}\n\nconst GuestRoute = () => {\n  const { roomId } = useParams();\n  const { theme,  Guest, game } = useGame(roomId);\n  const { connectionId, connected, state, moves } = usePartyGuest({ roomId, game });\n  return (\n    <ThemeProvider theme={theme || baseTheme}>\n      {Guest && <Guest connectionId={connectionId} roomId={roomId} connected={connected} state={state} moves={moves}/>}\n    </ThemeProvider>\n  )\n}\n\nconst Router = () =>\n  <HashRouter>\n    <Switch>\n      <Route path=\"/host/:roomId\">\n        <HostRoute/>\n      </Route>\n      <Route path=\"/guest/:roomId\">\n        <GuestRoute/>\n      </Route>\n      <Route exact path=\"/\">\n        <ThemeProvider theme={baseTheme}>\n          <Home/>\n        </ThemeProvider>\n      </Route>\n    </Switch>\n  </HashRouter>\n\nexport default Router;\n","import Router from \"./Router\";\n\nconst App = () =>\n  <Router/>\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}