{"version":3,"sources":["../../src/usePersist.ts","../../src/random.ts","../../src/shared.ts","../../src/secret.ts","../../src/host/useGameState.ts","../../src/host/stores.ts","../../src/usePeer.ts","../../src/host/useConnections.ts","../../src/host/usePartyHost.ts","../../src/host/useRandom.ts","../../src/host/useMoves.ts","../../src/host/useInputBuffer.ts","../../src/host/useSendSyncs.ts","../../src/guest/funcs.ts","../../src/guest/useSync.ts","../../src/guest/useMoves.ts","../../src/guest/usePartyGuest.ts","components/players/client/index.js","../../src/guest/stores.ts","../../src/guest/useConnection.ts","../../src/guest/useAck.ts","games/tic-tac-toe/game/index.js","games/tic-tac-toe/client/Guest.js","games/tic-tac-toe/client/Host.js","games/tic-tac-toe/index.js","components/players/game/index.js","components/playing-card/client/cards/AH.svg","components/playing-card/client/cards/AC.svg","components/playing-card/client/cards/AD.svg","components/playing-card/client/cards/AS.svg","components/playing-card/client/cards/2H.svg","components/playing-card/client/cards/2C.svg","components/playing-card/client/cards/2D.svg","components/playing-card/client/cards/2S.svg","components/playing-card/client/cards/3H.svg","components/playing-card/client/cards/3C.svg","components/playing-card/client/cards/3D.svg","components/playing-card/client/cards/3S.svg","components/playing-card/client/cards/4H.svg","components/playing-card/client/cards/4C.svg","components/playing-card/client/cards/4D.svg","components/playing-card/client/cards/4S.svg","components/playing-card/client/cards/5H.svg","components/playing-card/client/cards/5C.svg","components/playing-card/client/cards/5D.svg","components/playing-card/client/cards/5S.svg","components/playing-card/client/cards/6H.svg","components/playing-card/client/cards/6C.svg","components/playing-card/client/cards/6D.svg","components/playing-card/client/cards/6S.svg","components/playing-card/client/cards/7H.svg","components/playing-card/client/cards/7C.svg","components/playing-card/client/cards/7D.svg","components/playing-card/client/cards/7S.svg","components/playing-card/client/cards/8H.svg","components/playing-card/client/cards/8C.svg","components/playing-card/client/cards/8D.svg","components/playing-card/client/cards/8S.svg","components/playing-card/client/cards/9H.svg","components/playing-card/client/cards/9C.svg","components/playing-card/client/cards/9D.svg","components/playing-card/client/cards/9S.svg","components/playing-card/client/cards/10H.svg","components/playing-card/client/cards/10C.svg","components/playing-card/client/cards/10D.svg","components/playing-card/client/cards/10S.svg","components/playing-card/client/cards/JH.svg","components/playing-card/client/cards/JC.svg","components/playing-card/client/cards/JD.svg","components/playing-card/client/cards/JS.svg","components/playing-card/client/cards/QH.svg","components/playing-card/client/cards/QC.svg","components/playing-card/client/cards/QD.svg","components/playing-card/client/cards/QS.svg","components/playing-card/client/cards/KH.svg","components/playing-card/client/cards/KC.svg","components/playing-card/client/cards/KD.svg","components/playing-card/client/cards/KS.svg","components/playing-card/client/cards/JOKER.svg","components/playing-card/game/model.js","components/playing-card/game/constructDeckOfCards.js","components/playing-card/client/Card.js","components/playing-card/client/CardFront.js","components/playing-card/client/cards/RED_BACK.svg","components/playing-card/client/cards/BLUE_BACK.svg","components/playing-card/client/CardBack.js","components/playing-card/client/felt.png","components/playing-card/client/FeltTable.js","components/playing-card/client/Hand.js","components/playing-card/index.js","games/whist/game/index.js","components/emoji/Emoji.js","components/emoji/EmojiPicker.js","components/emoji/index.js","components/players/client/Host.js","components/players/client/Guest.js","compendium.js","games/whist/index.js","games/whist/client/Host.js","games/whist/client/Guest.js","rooms.js","useGame.js","Home.js","theme.js","Router.js","App.js","reportWebVitals.js","index.js","../../.yarn/cache/peerjs-npm-1.3.2-8966839def-8766e61cf9.zip/node_modules/peerjs/dist sync"],"names":["usePersist","useState","item","store","JSON","defaultValue","state","setState","useEffect","key","isRandomMove","moveFn","getMoves","connectionId","roomId","game","getMove","move","constructMoves","handleMove","Proxy","get","moves","args","Symbol","Object","Reflect","isSecretMove","useGameState","random","connectionIds","logEvent","window","states","setStates","useStatesStore","useMemo","input","useCallback","revealSecret","id","fn","contextId","event","index","isRandom","isSecret","genSeed","simpleMoveArgs","randomMixin","seedrandom","secretMixin","newState","diff","reducer","newStates","error","console","destructPeer","peer","setPeer","opts","host","secure","usePeer","open","setOpen","useReducer","a","attempts","countAttempt","retry","timeout","setTimeout","clearTimeout","onConnectionClosed","useConnections","connections","setConnections","connectionLogSizeMap","useRef","addConnectionId","onGuestEvent","setOnGuestEvent","conn","appendConnection","isInteger","size","updateLogSizeMap","isString","isObject","validMoves","m","validateEvent","conns","c","removeConnection","usePartyHost","secret","useRandom","eventLogs","setEventLogs","logs","useEventLogStore","onEvent","setOnHostEvent","useMoves","inputBuffer","setInputBuffer","pushInput","inputItem","head","tail","useInputBuffer","connection","eventLog","numSent","events","i","useSendSyncs","logSizeToIndex","logSize","constructReducer","Error","patch","o","moveArgs","e","useSync","data","clearData","setLogSize","updateLogSize","cache","sync","constructMovesHandler","setMoves","preempt","emit","options","Component","usePartyGuest","useIdStore","useStateStore","useLogSizeStore","setData","connected","setConnected","serialization","connect","useConnection","ack","useAck","TicTacToe","guestMoves","fillSquare","player","crossesPlayer","noughtsPlayer","board","position","splice","hostMoves","startGame","crossesConnId","noughtsConnId","Array","fill","Button","styled","button","Tile","div","Board","TileOrButton","value","onClick","Guest","map","name","Host","length","to","location","joinAsAPlayer","players","list","maxPlayers","emoji","playerList","initPlayers","minPlayers","everyoneIsIn","SUITS","JACK","QUEEN","KING","VALUES","constructDeckOfCards","jokers","cards","suit","push","Container","order","UnSelectable","Selectable","isSelected","Overlay","selectColor","FaceImg","img","SelectableFace","faceImage","altText","src","alt","UnSelectableFace","Card","canBeSelected","Face","CardFront","log","JKR","HA","DA","SA","CA","H2","D2","S2","C2","H3","D3","S3","C3","H4","D4","S4","C4","H5","D5","S5","C5","H6","D6","S6","C6","H7","D7","S7","C7","H8","D8","S8","C8","H9","D9","S9","C9","H10","D10","S10","C10","HJ","DJ","SJ","CJ","HQ","DQ","SQ","CQ","HK","DK","SK","CK","getFaceImage","getAltText","CardBack","colour","RED_BACK","BLUE_BACK","FeltTable","felt","Hand","section","PlayingCardFront","playersGame","discard","deck","hand","deal","Emoji","memo","dangerouslySetInnerHTML","__html","twemoji","parse","folder","ext","Background","Wrapper","EmojiPicker","onSelectEmoji","onHide","tabIndex","onKeyPress","stopPropagation","onSelect","native","set","PlayerList","children","flexGrow","alignItems","width","height","my","mx","HowToJoin","fontSize","fontWeight","color","everyonesIn","canStartGame","checkIfCanStartGame","flexDirection","justifyContent","JoinScreen","onJoin","setName","setEmoji","pickerIsShown","setPickerIsShown","showPicker","hidePicker","join","htmlFor","onChange","target","variant","Spectator","Waiting","isPlayer","findIndex","findConnectionIsPlayer","gameIsFull","checkIfGameIsFull","compendium","props","withGuestPlayers","permutations","getGame","compendiumIndex","words","split","sortedWords","sort","permutation","word","w","permu","isEqual","decodeCompendiumIndex","useGame","setGame","NewGame","onNewGame","onSubmit","preventDefault","JoinGame","onJoinGame","Home","useHistory","mt","randomWords","exactly","createRoomId","base","HostRoute","useParams","theme","baseTheme","GuestRoute","Router","path","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","webpackEmptyContext","req","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.9d5318d1.chunk.js","sourcesContent":["import { useState, useEffect, Dispatch, SetStateAction } from \"react\";\n\nfunction usePersist<T>(store: Storage, key: string, defaultValue: T | (() => T)): [T, Dispatch<SetStateAction<T>>] {\n  const [state, setState] = useState<T>(\n    () => {\n      const item = store.getItem(key);\n      if (item) {\n        return JSON.parse(item ?? \"\")\n      } else {\n        return (defaultValue instanceof Function) ? defaultValue() : defaultValue;\n      }\n    }\n  );\n\n  useEffect(() => {\n    store.setItem(key, JSON.stringify(state));\n  }, [key, state, store]);\n\n  return [state, setState];\n}\n\nexport default usePersist;\n","import { RandomNumberGenerator, Move, Seed } from \".\";\n\nexport const withRandom = (moveFn: Move) => {\n  moveFn._isRandom = true;\n  return moveFn;\n}\n\nexport const isRandomMove = (moveFn: Move) => moveFn._isRandom;\n\nexport const shuffle = ({ random = Math.random, array }: { random: RandomNumberGenerator, array: any[] }) => {\n  const length = array == null ? 0 : array.length\n  if (!length) {\n    return []\n  }\n  let index = -1\n  const lastIndex = length - 1\n  const result = [...array];\n  while (++index < length) {\n    const rand = index + Math.floor(random() * (lastIndex - index + 1))\n    const value = result[rand]\n    result[rand] = result[index]\n    result[index] = value\n  }\n  return result\n}\n\nexport function genSeed (random: RandomNumberGenerator): Seed {\n  return random().toString();\n};","import { PeerId, Game, Args, MoveHandler, Moves, Move } from \".\";\n\ninterface GetMovesArgs { connectionId: PeerId, roomId: PeerId, game: Game };\n\nfunction getMoves ({ connectionId, roomId, game }: GetMovesArgs): Moves {\n  return (\n    connectionId === roomId ? game.hostMoves : game.guestMoves\n  );\n};\n\ninterface GetMoveArgs extends GetMovesArgs { move: string };\n\nexport function getMove({ connectionId, roomId, game, move }: GetMoveArgs): Move {\n  return (\n    getMoves({ connectionId, roomId, game })[move]\n  );\n}\n\ninterface ConstructMovesArgs extends GetMovesArgs { handleMove: MoveHandler };\n\nexport function constructMoves ({ game, connectionId, roomId, handleMove }: ConstructMovesArgs): Moves {\n  return new Proxy({}, {\n    get: (target, key, receiver) => {\n      const moves = getMoves({ connectionId, roomId, game });\n      if (moves.hasOwnProperty(key)) {\n        return (args: Args) => handleMove({ move: key.toString(), args });\n      } else if (key === Symbol.iterator && moves) {\n        return Object.keys(moves)[Symbol.iterator].bind(target);\n      } else {\n        return Reflect.get(target, key, receiver);\n      }\n    }\n  });\n}\n","import { Move } from \".\";\n\nexport const withSecret = (moveFn: Move) => {\n  moveFn._isSecret = true;\n  return moveFn;\n}\n\nexport const isSecretMove = (moveFn: Move) => moveFn._isSecret","import { useCallback, useMemo } from \"react\";\nimport { diff } from \"jsondiffpatch\";\nimport seedrandom from \"seedrandom\";\nimport { useStatesStore } from \"./stores\";\nimport { isRandomMove, genSeed } from \"../random\";\nimport { getMove } from \"../shared\";\nimport { isSecretMove } from \"../secret\";\nimport { State, PeerId, RandomNumberGenerator, Args, RevealSecretFunction, Game, EventItem, RandomMove, SecretMove, SimpleMove, RandomArgsMixin, SecretArgsMixin, RandomSecretMove } from \"..\";\nimport { EventLogger } from \".\";\n\ntype ReducerArgs = { \n  state: State,\n  contextId: PeerId,\n  connectionId: PeerId,\n  roomId: PeerId,\n  random: RandomNumberGenerator,\n  game: Game,\n  move: string,\n  args: Args,\n  revealSecret: RevealSecretFunction\n};\n\nconst reducer = ({ state, contextId, connectionId, roomId, random, game, move, args, revealSecret }: ReducerArgs) => {\n  \n  const moveFn = getMove({ connectionId, roomId, game, move })\n  let event: EventItem = { index: null, connectionId, move, args };\n\n  let newState: State;\n\n  const isRandom = isRandomMove(moveFn);\n  const isSecret = isSecretMove(moveFn);\n\n  if (isRandom) {\n    event.seed = genSeed(random);\n  }\n\n  const simpleMoveArgs = { state, roomId, connectionId, args };\n  const randomMixin: RandomArgsMixin | null = isRandom ? { random: seedrandom(event.seed) } : null;\n  const secretMixin: SecretArgsMixin | null = isSecret ? { contextId, revealSecret } : null;\n\n  if (randomMixin && !isSecret) {\n    const randomMoveFn = moveFn as RandomMove;\n    newState = randomMoveFn({ ...simpleMoveArgs, ...randomMixin });\n    return { state: newState, event };\n  }\n\n  if (secretMixin) {\n    if (!isRandom) {\n      const secretMoveFn = moveFn as SecretMove;\n      newState = secretMoveFn({ ...simpleMoveArgs, ...secretMixin });\n    }\n\n    if (randomMixin) {\n      const randomSecretMoveFn = moveFn as RandomSecretMove;\n      newState = randomSecretMoveFn({ ...simpleMoveArgs, ...secretMixin, ...randomMixin })\n    }\n\n    event.patch = diff(state, newState);\n    return { state: newState, event };\n  }\n\n  const simpleMoveFn = moveFn as SimpleMove;\n  newState = simpleMoveFn(simpleMoveArgs);\n  return { state: newState, event };\n}\n\ntype UseGameStateArgs = { roomId: PeerId, game: Game, random: RandomNumberGenerator, connectionIds: PeerId[], logEvent: EventLogger }\nconst useGameState = ({ roomId, game, random , connectionIds, logEvent }: UseGameStateArgs) => {\n  const { states, setStates } = useStatesStore(roomId);\n  const hostState = useMemo(() => (states[roomId] || {}), [roomId, states])\n  const input = useCallback(({ connectionId, move, args }) => {\n    if (connectionIds == null) return;\n    const revealSecret = (id: PeerId, fn: (s: State) => State) => fn(states[id]);\n    setStates((states) => (\n      ([...connectionIds, roomId]).reduce((newStates, contextId) => {\n        try {\n          const { state, event } = reducer({\n            state: states[contextId] || {},\n            connectionId,\n            args,\n            move,\n            roomId,\n            game,\n            contextId,\n            random,\n            revealSecret\n          });\n          newStates[contextId] = state;\n          logEvent({ connectionId: contextId, event });\n        } catch (error) {\n          console.error(\"Invalid Event\", error);\n        } finally {\n          return newStates;\n        }\n      }, {})\n    ));\n  }, [logEvent, connectionIds, states, roomId, game, random, setStates]);\n\n  return { state: hostState, input };\n}\n\nexport default useGameState\n","import usePersist from '../usePersist';\nimport { useCallback, Dispatch, SetStateAction } from 'react';\nimport { PeerId, EventItem } from \"..\"; \nimport { States, EventLogs, EventLogger } from '.';\n\nexport function useStatesStore(roomId: PeerId): { states: States, setStates: Dispatch<SetStateAction<States>> } {\n  const [states, setStates]  = usePersist<States>(\n    window.localStorage,\n    `hostState-${roomId}`,\n    {}\n  );\n\n  return { states, setStates }\n}\n\nexport function useEventLogStore(roomId: PeerId): { eventLogs: EventLogs, logEvent: EventLogger } {\n  const [eventLogs, setEventLogs] = usePersist<EventLogs>(\n    window.localStorage,\n    `eventLog-${roomId}`,\n    {}\n  );\n  const logEvent = useCallback(({ connectionId, event }: { connectionId: PeerId, event: EventItem }) => {\n    setEventLogs((eventLogs) => {\n      const logs = eventLogs[connectionId] || [];\n      return { ...eventLogs, [connectionId]: [...logs, event] };\n    });\n  }, [setEventLogs]);\n  return { eventLogs, logEvent };\n}\n","import { useEffect, useState, useReducer, Dispatch, SetStateAction } from \"react\";\nimport Peer from \"peerjs\";\nimport { PeerId, ConnectionStatus } from \".\";\n\ntype PeerSetter = Dispatch<SetStateAction<Peer | null>>;\nconst destructPeer = ({ peer, setPeer }: { peer: Peer, setPeer: PeerSetter }) => {\n  peer && peer.destroy();\n  setPeer(null);\n};\n\nconst opts = { host: \"signalling.compendium.games\", secure: true };\n\nfunction usePeer(id: PeerId): { open: ConnectionStatus, peer: Peer | null } {\n  const [peer, setPeer] = useState<Peer | null>(null);\n  const [open, setOpen] = useState(false);\n  const [attempts, countAttempt] = useReducer((a: number) => a + 1, 0);\n\n  useEffect(() => {\n    if (open) return;\n\n    const peer = new Peer(id, opts);\n    setPeer(peer);\n\n    const retry = () => {\n      setOpen(false);\n      destructPeer({ peer, setPeer });\n      countAttempt();\n    };\n\n    let timeout = setTimeout(retry, 1000);\n\n    peer.on(\"open\", () => {\n      clearTimeout(timeout);\n      setOpen(true);\n    });\n\n    const onConnectionClosed = () => {\n      clearTimeout(timeout);\n      timeout = setTimeout(retry, 1000);\n    }\n    peer.on(\"close\", onConnectionClosed);\n    peer.on(\"disconnected\", onConnectionClosed);\n    peer.on(\"error\", onConnectionClosed);\n\n    return () => {\n      destructPeer({ peer, setPeer });\n      clearTimeout(timeout);\n    }\n  }, [attempts, id])\n\n  return { open, peer }\n}\n\nexport default usePeer;\n","import { useRef, useState, useEffect, useReducer, MutableRefObject, Dispatch, SetStateAction } from \"react\";\nimport { isString, isObject, isInteger } from \"lodash\";\nimport usePeer from \"../usePeer\";\nimport { PeerId, Game, ConnectionList, Connection } from \"../\";\nimport { PeerAcks, InputerSetter, InputItem, Inputer } from \".\";\nimport { LogSize } from \"..\";\n\nconst validateEvent = (event: InputItem, validMoves: string[]) => (\n  event &&\n  isString(event.move) && \n  isObject(event.args) &&\n  validMoves.findIndex((m) => m === event.move) > -1\n)\n\ntype ConnectionArgs = { setConnections: Dispatch<SetStateAction<ConnectionList>>, conn: Connection };\n\nconst appendConnection = ({ setConnections, conn }: ConnectionArgs) => {\n  setConnections((conns) => [...conns, conn]);\n}\n\nconst removeConnection = ({ setConnections, conn }: ConnectionArgs) => {\n  setConnections((conns) => conns.filter(c => c !== conn))\n}\n\ntype UpdateLogSizeMapArgs = { conn: Connection, connectionLogSizeMap: MutableRefObject<PeerAcks>, size: LogSize };\nconst updateLogSizeMap = ({ conn, connectionLogSizeMap, size = 0 }: UpdateLogSizeMapArgs) => {\n  connectionLogSizeMap.current[conn.peer] = size\n}\n\ntype UseConnectionsArgs = { game: Game, roomId: PeerId }\ntype UseConnectionsReturn = {\n  connections: ConnectionList,\n  connectionIds: PeerId[],\n  connectionLogSizeMap: MutableRefObject<PeerAcks>,\n  setOnGuestEvent: InputerSetter,\n}\nfunction useConnections ({ game, roomId }: UseConnectionsArgs): UseConnectionsReturn {\n  const { peer } = usePeer(roomId);\n  const [connections, setConnections] = useState<ConnectionList>([]);\n  const connectionLogSizeMap = useRef<PeerAcks>({});\n  const [connectionIds, addConnectionId] = useReducer((state: PeerId[], connId: PeerId) => [...state, connId], []);\n  const [onGuestEvent, setOnGuestEvent] = useState<Inputer>(() => () => {});\n\n  useEffect(() => {\n    if (!peer || !onGuestEvent) return;\n\n    peer.on(\"connection\", (conn) => {\n      conn.on(\"open\", () => {\n        appendConnection({ setConnections, conn });\n        addConnectionId(conn.peer);\n      });\n\n      conn.on(\"data\", ({ index, ...event }) => {\n        if (isInteger(index)) {\n          updateLogSizeMap({ conn, connectionLogSizeMap, size: index + 1 });\n        }\n        \n        if (\n          (isInteger(index) || index === null) &&\n          validateEvent(event, Object.keys(game.guestMoves))\n        ) {\n          onGuestEvent({ ...event, connectionId: conn.peer });\n        }\n      })\n\n      conn.on(\"close\", () => {\n        removeConnection({ setConnections, conn });\n      });\n\n      conn.on(\"error\", (error) => {\n        console.error(conn.peer, error)\n      });\n    })\n  }, [peer, game, roomId, onGuestEvent])\n\n  return { connections, connectionIds, connectionLogSizeMap, setOnGuestEvent }\n}\n\nexport default useConnections;","import { useMemo } from \"react\";\nimport { useEventLogStore } from \"./stores\";\nimport useGameState from \"./useGameState\";\nimport useConnections from \"./useConnections\";\nimport useMoves from \"./useMoves\";\nimport useSendSyncs from \"./useSendSyncs\";\nimport useInputBuffer from \"./useInputBuffer\";\n\nimport { PeerId, Game, Secret } from \"../\";\nimport useRandom from \"./useRandom\";\n\ntype HostArgs = { roomId: PeerId, game: Game, secret: Secret };\n\nconst usePartyHost = ({ roomId, game, secret }: HostArgs) => {\n\n  // The host will need to make some random decisions\n  const random = useRandom({ secret, roomId });\n  \n  // The event log will store validated events, so we can sync guests.\n  const { eventLogs, logEvent } = useEventLogStore(roomId);\n\n  // Guests connect and send (not trusted) events.\n  // The host remembers the last event a guest has acknowledged receiving a sync for.\n  const { setOnGuestEvent, connections, connectionIds, connectionLogSizeMap } = useConnections({ game, roomId });\n\n  // The host creates events also\n  const { setOnHostEvent, moves } = useMoves({ roomId, game });\n\n  // When an event takes places, applies it to a state for each connection, to check it is a valid move.\n  // If no error is thrown it is a valid move, then the state is updated and the valid event is logged.\n  const { state, input } = useGameState({ roomId, game, logEvent, random, connectionIds });\n\n  // Connect yet-to-be-validated guest and host events to the event handler\n  useInputBuffer({ setOnHostEvent, setOnGuestEvent, input })\n\n  // Update active connections with valid events in the log they have yet to acknowledge.\n  useSendSyncs({ connections, connectionLogSizeMap, eventLogs });\n\n  const activeConnectionIds = useMemo(() => connections.map(conn => conn.peer), [connections]);\n\n  return { state, moves, connections: activeConnectionIds };\n}\n\nexport default usePartyHost;","import { useMemo } from \"react\";\nimport seedrandom from \"seedrandom\";\nimport { Secret, PeerId, RandomNumberGenerator } from \"..\";\n\nfunction useRandom({ secret, roomId }: { secret: Secret, roomId: PeerId }): RandomNumberGenerator {\n    const random = useMemo<RandomNumberGenerator>(() => seedrandom(secret || roomId), [secret, roomId]);\n    return random;\n};\n\nexport default useRandom;","import { useState, useMemo, useCallback } from \"react\";\nimport { constructMoves } from \"../shared\";\nimport { PeerId, Game, Moves } from \"..\";\nimport { InputerSetter, Inputer } from \".\";\n\ntype UseMovesArgs =  { roomId: PeerId, game: Game };\n\ntype UseMovesReturn = { moves: Moves, setOnHostEvent: InputerSetter };\n\nfunction useMoves({ roomId, game }: UseMovesArgs): UseMovesReturn {\n\n  const [onEvent, setOnHostEvent] = useState<Inputer>(() => () => null);\n\n  const handleMove = useCallback((event) => {\n    onEvent({ ...event, connectionId: roomId })\n  }, [roomId, onEvent]);\n\n  const moves = useMemo(() => {\n    if (!handleMove || !roomId  || !game) return {};\n    return constructMoves({ game, connectionId: roomId, roomId, handleMove });\n  }, [roomId, game, handleMove]);\n\n  return { moves, setOnHostEvent };\n}\n\nexport default useMoves;","import { useEffect, useState } from \"react\";\nimport { InputerSetter, Inputer, InputList, InputItem } from \".\";\n\n\ntype UseInputBufferArgs = { setOnGuestEvent: InputerSetter, setOnHostEvent: InputerSetter, input: Inputer };\n\nfunction useInputBuffer({ setOnGuestEvent, setOnHostEvent, input }: UseInputBufferArgs) {\n    const [inputBuffer, setInputBuffer] = useState<InputList>([]);\n\n    useEffect(() => {\n      const pushInput = (inputItem: InputItem) => {\n        setInputBuffer((buffer: InputList) => ([...buffer, inputItem]));\n      };\n      setOnGuestEvent(() => pushInput);\n      setOnHostEvent(() => pushInput);\n    }, [setOnGuestEvent, setOnHostEvent, setInputBuffer]);\n    \n    useEffect(() => {\n      if (!inputBuffer.length || !input) return;\n      setInputBuffer(([head, ...tail]) => {\n        input(head)\n        return tail;\n      })\n    }, [inputBuffer, input, setInputBuffer]);\n}\n\nexport default useInputBuffer;","import { useEffect, MutableRefObject } from \"react\";\nimport { ConnectionList } from \"..\";\nimport { EventLogs, PeerAcks } from \".\";\n\ntype UseSendSyncArgs = { connections: ConnectionList, connectionLogSizeMap: MutableRefObject<PeerAcks>, eventLogs: EventLogs }\nfunction useSendSyncs({ connections, connectionLogSizeMap, eventLogs }: UseSendSyncArgs): void {\n  useEffect(() => {\n    if (eventLogs == null) return;\n    for (const connection of connections) {\n      const eventLog = eventLogs[connection.peer] || [];\n      const numSent = connectionLogSizeMap.current[connection.peer] || 0;\n      if (eventLog.length > numSent) {\n        const events = eventLog.slice(numSent)\n          .map((e, i) => ({ ...e, index: numSent + i }));\n        connection.send(events);\n      }\n    }\n  }, [connections, connectionLogSizeMap, eventLogs]);\n};\n\nexport default useSendSyncs;\n","import seedrandom, { State } from \"seedrandom\";\nimport { patch } from \"jsondiffpatch\";\nimport { getMove } from \"../shared\";\nimport { isRandomMove } from \"../random\";\nimport { isSecretMove } from \"../secret\";\nimport { PeerId, EventList, Game, SimpleMoveArgs, RandomMove, SimpleMove } from \"..\";\nimport { LogSize, Index } from \"..\";\n\nexport function logSizeToIndex(logSize: LogSize): Index {\n  const index = logSize - 1;\n  return (index < 0) ? null : index;\n};\n\nexport const constructReducer = ({ game, events, roomId }: { game: Game, events: EventList, roomId: PeerId }) => (state: State) => {\n  try {\n    return events.reduce(\n      (o, event) => {\n        const moveFn = getMove({ connectionId: event.connectionId, roomId, game, move: event.move });\n\n        if (isSecretMove(moveFn)) {\n          if (event.patch == null) {\n            throw new Error('Secret moves require a state patch from the host');\n          }\n          patch(o, event.patch);\n          return o;\n        }\n\n        const moveArgs: SimpleMoveArgs  = { state: o, roomId, connectionId: event.connectionId, args: event.args };\n\n        if (isRandomMove(moveFn)) {\n          if (event.seed == null) {\n            throw new Error('Random moves require a seed from the host');\n          }\n          const random = seedrandom(event.seed);\n          const randomMoveFn = moveFn as RandomMove;\n          return randomMoveFn({ ...moveArgs, random });\n        }\n\n        const simpleMoveFn = moveFn as SimpleMove;\n        return simpleMoveFn(moveArgs);\n      },\n      state\n    );\n  } catch (e) {\n    console.error(e);\n    return state;\n  }\n};","import { useEffect } from \"react\";\nimport { constructReducer } from \"./funcs\";\nimport { Game, EventList, PeerId } from \"..\";\nimport { CacheAndStateSetter, LogSizeSetter } from \".\";\n\ntype SyncArgs = { setState: CacheAndStateSetter, roomId: PeerId, game: Game, events: EventList }\nconst sync = ({ setState, roomId, game, events }: SyncArgs) => {\n  const reducer = constructReducer({ game, roomId, events })\n  setState(({ state }) => {\n    const newState = reducer(state);\n    return { state: newState, cache: newState }\n  });\n}\n\ntype UpdateLogSizeArgs = { setLogSize: LogSizeSetter, events: EventList };\nconst updateLogSize = ({ setLogSize, events }: UpdateLogSizeArgs) => {\n  setLogSize((events[events.length - 1].index ?? 0) + 1);\n}\n\ntype UseSyncArgs = {\n  data: EventList,\n  clearData: () => void,\n  game: Game,\n  roomId: PeerId,\n  setState: CacheAndStateSetter,\n  setLogSize: LogSizeSetter,\n}\nfunction useSync({ data, clearData, game, roomId, setState, setLogSize }: UseSyncArgs): void {\n  useEffect(() => {\n    if (!data || !data.length) return;\n    const events = [...data]\n    clearData();\n    updateLogSize({ setLogSize, events });\n    sync({ setState, roomId, game, events })\n  }, [data, clearData, game, roomId, setLogSize, setState])\n}\n\nexport default useSync;\n","import { useEffect, useState, Dispatch, SetStateAction } from \"react\";\nimport { getMove, constructMoves  } from \"../shared\";\nimport { logSizeToIndex, constructReducer } from \"./funcs\";\nimport { isRandomMove } from \"../random\";\nimport { isSecretMove } from \"../secret\";\nimport { LogSize, Moves, ConnectionStatus, PeerId, Game, Args, Emit } from \"..\";\nimport { CacheAndStateSetter, DataConnectionRef } from \".\";\n\nconst emit = ({ conn, emit }: { emit: Emit, conn: DataConnectionRef }) => {\n  conn.current?.send(emit);\n}\n\ntype PreemptArgs = {\n  game: Game,\n  setState: CacheAndStateSetter,\n  move: string,\n  args: Args,\n  connectionId: PeerId,\n  roomId: PeerId,\n}\nconst preempt = ({ setState, game, move, args, connectionId, roomId }: PreemptArgs) => {\n  const reducer = constructReducer({ game, roomId, events: [{ index: null, move, args, connectionId }] })\n  setState(({ state, cache }) => ({\n    cache: reducer(cache),\n    state,\n  }));\n}\n\ntype ConstructMovesHandlerArgs = {\n  conn: DataConnectionRef,\n  connectionId: PeerId,\n  logSize: LogSize,\n  roomId: PeerId,\n  game: Game,\n  setState: CacheAndStateSetter,\n  setMoves: Dispatch<SetStateAction<Moves | null>>\n}\nfunction constructMovesHandler({ conn, connectionId, setMoves, setState, game, logSize, roomId }: ConstructMovesHandlerArgs): void {\n  const handleMove = ({ move, args }: { move: string, args: Args }) => {\n    const moveFn = getMove({ connectionId, roomId, game, move })\n    if (!isRandomMove(moveFn) && !isSecretMove(moveFn)) {\n      preempt({ setState, game, move, args, roomId, connectionId })\n    }\n    const index = logSizeToIndex(logSize);\n    emit({ conn, emit: { move, args, index }});\n  }\n  setMoves(() => constructMoves({ game, connectionId, roomId, handleMove }));\n}\n\ntype UseMovesArgs = {\n  connected: ConnectionStatus,\n  conn: DataConnectionRef,\n  id: PeerId,\n  setState: CacheAndStateSetter,\n  roomId: PeerId,\n  game: Game,\n  logSize: LogSize\n};\ntype UseMovesReturn = { moves: Moves | null };\nfunction useMoves({ connected, conn, id, setState, roomId, game, logSize }: UseMovesArgs): UseMovesReturn {\n  const [moves, setMoves] = useState<Moves | null>(null);\n  useEffect(() => {\n    if (!connected) return;\n    constructMovesHandler({ conn, connectionId: id, setMoves, setState, roomId, game, logSize })\n  }, [connected, conn, id, setMoves, setState, roomId, game, logSize])\n  return { moves };\n}\n\nexport default useMoves;\n","import useAck from \"./useAck\";\nimport useSync from \"./useSync\";\nimport useMoves from \"./useMoves\";\nimport useConnection from \"./useConnection\";\nimport { useIdStore, useStateStore, useLogSizeStore } from \"./stores\";\nimport { UsePartyGuestArgs } from \".\";\n\nconst usePartyGuest = ({ roomId, game }: UsePartyGuestArgs) => {\n  const { id } = useIdStore(roomId);\n  const { cache, setState } = useStateStore(roomId);\n  const { logSize, setLogSize } = useLogSizeStore(roomId);\n  const { connected, conn, data, clearData } = useConnection({ id, roomId })\n  useAck({ connected, conn, logSize });\n  useSync({ data, clearData, game, roomId, setState, setLogSize });\n  const { moves } = useMoves({ connected, conn, id, setState, roomId, game, logSize });\n  return { connectionId: id, connected, state: cache, moves }\n}\n\nexport default usePartyGuest;\n","import React from \"react\";\nimport Host from \"./Host\";\nimport Guest from \"./Guest\";\n\nconst withGuestPlayers = (Component) => ({ children, ...props }) => (\n    <Guest {...props}>\n        <Component {...props}>\n            {children}\n        </Component>\n    </Guest>\n)\n\nconst withHostPlayers = (options, Component) => ({ children, ...props }) => (\n    <Host {...options} {...props}>\n        <Component {...props}>\n            {children}\n        </Component>\n    </Host>\n)\n\nexport { Host, Guest, withGuestPlayers, withHostPlayers }\n","import usePersist from \"../usePersist\";\nimport { v4 as uuid } from \"uuid\";\nimport { PeerId, State } from \"..\";\nimport { CacheAndState, CacheAndStateSetter } from \".\";\nimport { LogSize } from \"..\";\nimport { Dispatch, SetStateAction } from \"react\";\n\nexport function useIdStore(roomId: PeerId): { id: PeerId } {\n  const [id] = usePersist<PeerId>(\n    window.localStorage,\n    `id-${roomId}`,\n    uuid,\n  );\n  return { id };\n}\n\ntype UseStateStoreReturn = { cache: State, setState: CacheAndStateSetter };\nexport function useStateStore(roomId: PeerId): UseStateStoreReturn {\n  const [{ cache }, setState] = usePersist<CacheAndState>(\n    window.localStorage,\n    `guestState-${roomId}`,\n    { state: {}, cache: {} }\n  );\n  return { cache, setState };\n}\n\ntype UseLogSizeStoreReturn = { logSize: LogSize, setLogSize: Dispatch<SetStateAction<LogSize>> };\nexport function useLogSizeStore(roomId: PeerId): UseLogSizeStoreReturn {\n  const [logSize, setLogSize] = usePersist<number>(\n    window.localStorage,\n    `logSize-${roomId}`,\n    0\n  );\n  return { logSize, setLogSize };\n}\n","import { useEffect, useRef, useState, useReducer } from \"react\";\nimport usePeer from \"../usePeer\";\nimport { DataConnectionRef } from \".\";\nimport Peer, { DataConnection } from \"peerjs\";\nimport { PeerId, EventList } from \"..\";\n\n\nfunction connect({ roomId, peer }: { roomId: PeerId, peer: Peer }): DataConnection {\n  return peer.connect(roomId,  { serialization: \"json\" });\n}\n\ntype UseConnectionArgs = { id: PeerId, roomId: PeerId };\ntype UseConnectionReturn = { connected: boolean, conn: DataConnectionRef, data: EventList, clearData: () => void  }; \nfunction useConnection({ id, roomId }: UseConnectionArgs): UseConnectionReturn {\n  const conn = useRef<DataConnection | null>(null);\n  const { open, peer } = usePeer(id);\n  const [data, setData] = useState<EventList>([]);\n  const [connected, setConnected] = useState<boolean>(false);\n  const [attempts, countAttempt] = useReducer((a: number) => a + 1, 0);\n\n  useEffect(() => {\n    if (!peer || !open || connected) return;\n\n    conn.current = connect({ peer, roomId })\n\n    const retry = () => {\n      conn.current = null; \n      setConnected(false);\n      countAttempt();\n    }\n    const timeout = setTimeout(retry, 1000);\n\n    conn.current.on(\"open\", () => {\n      clearTimeout(timeout);\n      setConnected(true); \n    });\n\n    conn.current.on(\"data\", (data) => {\n      setData((stream) => [...stream, ...data]);\n    });\n\n    conn.current.on(\"close\", () => {\n      clearTimeout(timeout);\n      retry();\n    });\n\n    conn.current.on(\"error\", (error) => {\n      console.error(error)\n    });\n\n  }, [attempts, open, connected, roomId, peer]);\n\n  const clearData = () => {\n    setData([]);\n  }\n  return { connected: open && connected, conn, data, clearData }\n}\n\nexport default useConnection;\n","import { useEffect } from \"react\";\nimport { logSizeToIndex } from \"./funcs\";\nimport { DataConnectionRef } from \".\";\nimport { Index } from \"..\";\n\nconst ack = ({ conn, index }: { conn: DataConnectionRef, index: Index }) => {\n  conn.current?.send({ index })\n}\n\ntype UseAckArgs = { connected: boolean, conn: DataConnectionRef, logSize: number };\nfunction useAck ({connected, conn, logSize }: UseAckArgs): void {\n  useEffect(() => {\n    if (!conn.current || !connected) return;\n    const index = logSizeToIndex(logSize)\n    ack({ conn, index })\n  }, [connected, conn, logSize]);\n}\n\nexport default useAck;\n","export const NOUGHTS = 1;\nexport const CROSSES = 2;\n\nconst startGame = ({ state, connectionId, args }) => ({\n  crossesPlayer: args.crossesConnId,\n  noughtsPlayer: args.noughtsConnId,\n  board: Array(9).fill(null),\n});\n\nconst fillSquare = ({ state, connectionId, args }) => {\n  let player = null\n  if (connectionId === state.crossesPlayer) {\n    player = CROSSES;\n  } else if (connectionId === state.noughtsPlayer) {\n    player = NOUGHTS;\n  } else {\n    throw new Error('Connection is not a player');\n  }\n\n  if (state.board[args.position] !== null) {\n    throw new Error('Position filled');\n  }\n\n  const board = [...state.board];\n  board.splice(args.position, 1, player);\n\n  return ({\n    ...state,\n    board,\n  })\n}\n\nconst TicTacToe = {\n  guestMoves: {\n    fillSquare,\n  },\n  \n  hostMoves: {\n    startGame,\n  },\n}\n\nexport default TicTacToe;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { NOUGHTS, CROSSES } from \"../game\";\n\nconst Button = styled.button`\n  width: 33.333%;\n  height: 33.333%;\n  background-color: white;\n  border: 2px solid red;\n  color: black;\n  text-align: center;\n  float: left;\n  box-sizing: border-box;\n`;\n\nconst Tile = styled.div`\n  width: 33.333%;\n  height: 33.333%;\n  background-color: white;\n  border: 2px solid red;\n  color: black;\n  text-align: center;\n  float: left;\n  box-sizing: border-box;\n`;\n\nconst Board = styled.div`\n  width: 30em;\n  height: 30em;\n`;\n\nconst TileOrButton = ({ value, onClick }) =>\n  (value === null)\n    ? <Button onClick={onClick}></Button>\n    : <Tile>\n        {value === NOUGHTS ? \"O\" : null}\n        {value === CROSSES ? \"X\" : null}\n      </Tile>\n\nconst Guest = ({ connected, state, moves }) => (\n  <>\n    {connected ? null : <p>Disconnected..</p>}\n    <Board>\n      {state.board && state.board.map((value, position) =>\n        <TileOrButton key={position} value={value} onClick={() => connected && moves.fillSquare({ position })} />\n      )}\n    </Board>\n  </>\n)\n\nexport default Guest;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { NOUGHTS, CROSSES } from \"../game\";\n\nconst Tile = styled.div`\n  width: 33.333%;\n  height: 33.333%;\n  background-color: cyan;\n  border: 2px solid yellow;\n  color: black;\n  text-align: center;\n  float: left;\n  box-sizing: border-box;\n`;\n\nconst Board = styled.div`\n  width: 30em;\n  height: 30em;\n`;\n\nconst Host = ({ state, roomId, moves, connections }) => {\n  useEffect(() => {\n    if (!state.board && connections.length >= 2) {\n      const [crossesConnId, noughtsConnId] = connections;\n      moves.startGame({ crossesConnId, noughtsConnId });\n    }\n  }, [connections])\n\n  return (\n    <>\n      {connections.length < 2 && (\n        <Link to={`/guest/${roomId}`}>\n          {window.location.host}#/guest/{roomId}\n        </Link>\n      )}\n      <Board>\n        {state.board && state.board.map((value, position) => (\n          <Tile key={position}>\n            {value === NOUGHTS ? \"O\" : null}\n            {value === CROSSES ? \"X\" : null}\n          </Tile>\n        ))}\n      </Board>\n    </>\n  );\n}\n\nexport default Host;\n","import game from \"./game\";\nimport { Host, Guest } from \"./client\";\n\nconst name = \"Tic Tac Toe\";\n\nconst TicTacToe = { name, Host, Guest, game };\n\nexport default TicTacToe;\n","const joinAsAPlayer = ({ state, connectionId, args }) => {\n  if (state.players.list.length >= state.players.maxPlayers) {\n    throw new Error(\"The number of players has reached it's maximum\");\n  }\n  const player = { connectionId, name: args.name, emoji: args.emoji };\n  const playerList = [...state.players.list, player];\n  const players = { ...state.players, list: playerList };\n  return { ...state, players };\n}\n\nconst initPlayers = ({ state, args }) => {\n  const players = {\n    maxPlayers: args.maxPlayers,\n    minPlayers: args.minPlayers,\n    everyoneIsIn: false,\n    list: []\n  }\n  return { ...state, players }\n}\n\nconst everyoneIsIn = ({ state }) => {\n  if (state.players.list.length > state.players.maxPlayers) {\n    throw new Error(\"Too many players\");\n  }\n  if (state.players.list.length < state.players.minPlayers) {\n    throw new Error(\"Not enough players\");\n  }\n  return {\n    ...state,\n    players: {\n      ...state.players,\n      everyoneIsIn: true\n    }\n  }\n}\n\nconst game = {\n  guestMoves: {\n    joinAsAPlayer,\n  },\n  \n  hostMoves: {\n    initPlayers,\n    everyoneIsIn,\n  },\n}\n\nexport default game;\n","export default __webpack_public_path__ + \"static/media/AH.1a5ea790.svg\";","export default __webpack_public_path__ + \"static/media/AC.0e3c2151.svg\";","export default __webpack_public_path__ + \"static/media/AD.5c4da062.svg\";","export default __webpack_public_path__ + \"static/media/AS.0beacefa.svg\";","export default __webpack_public_path__ + \"static/media/2H.cb701b97.svg\";","export default __webpack_public_path__ + \"static/media/2C.276c3f69.svg\";","export default __webpack_public_path__ + \"static/media/2D.bc21ec2a.svg\";","export default __webpack_public_path__ + \"static/media/2S.ec187ad2.svg\";","export default __webpack_public_path__ + \"static/media/3H.cba17cfa.svg\";","export default __webpack_public_path__ + \"static/media/3C.4defbcf5.svg\";","export default __webpack_public_path__ + \"static/media/3D.8d12a3fc.svg\";","export default __webpack_public_path__ + \"static/media/3S.ed80cdda.svg\";","export default __webpack_public_path__ + \"static/media/4H.8924ea52.svg\";","export default __webpack_public_path__ + \"static/media/4C.3ebe0e73.svg\";","export default __webpack_public_path__ + \"static/media/4D.433a1ecc.svg\";","export default __webpack_public_path__ + \"static/media/4S.7e474260.svg\";","export default __webpack_public_path__ + \"static/media/5H.04a38bb9.svg\";","export default __webpack_public_path__ + \"static/media/5C.809e552d.svg\";","export default __webpack_public_path__ + \"static/media/5D.03b1a4af.svg\";","export default __webpack_public_path__ + \"static/media/5S.f4e082a6.svg\";","export default __webpack_public_path__ + \"static/media/6H.5380d254.svg\";","export default __webpack_public_path__ + \"static/media/6C.1f69ca79.svg\";","export default __webpack_public_path__ + \"static/media/6D.8c9d26ce.svg\";","export default __webpack_public_path__ + \"static/media/6S.33eb8c1b.svg\";","export default __webpack_public_path__ + \"static/media/7H.156a2f08.svg\";","export default __webpack_public_path__ + \"static/media/7C.cb6a5b5c.svg\";","export default __webpack_public_path__ + \"static/media/7D.bc93fd45.svg\";","export default __webpack_public_path__ + \"static/media/7S.f91490c5.svg\";","export default __webpack_public_path__ + \"static/media/8H.878dbca5.svg\";","export default __webpack_public_path__ + \"static/media/8C.e91af699.svg\";","export default __webpack_public_path__ + \"static/media/8D.ca4420e9.svg\";","export default __webpack_public_path__ + \"static/media/8S.fd5cd6f8.svg\";","export default __webpack_public_path__ + \"static/media/9H.57bfd8e3.svg\";","export default __webpack_public_path__ + \"static/media/9C.c6a841cc.svg\";","export default __webpack_public_path__ + \"static/media/9D.3d612a15.svg\";","export default __webpack_public_path__ + \"static/media/9S.6c7e4615.svg\";","export default __webpack_public_path__ + \"static/media/10H.c8c8e4de.svg\";","export default __webpack_public_path__ + \"static/media/10C.0cc64a48.svg\";","export default __webpack_public_path__ + \"static/media/10D.956683a1.svg\";","export default __webpack_public_path__ + \"static/media/10S.99cb26ab.svg\";","export default __webpack_public_path__ + \"static/media/JH.86f58f4f.svg\";","export default __webpack_public_path__ + \"static/media/JC.b801c5a7.svg\";","export default __webpack_public_path__ + \"static/media/JD.a0e75607.svg\";","export default __webpack_public_path__ + \"static/media/JS.1a6f34e2.svg\";","export default __webpack_public_path__ + \"static/media/QH.f56614ef.svg\";","export default __webpack_public_path__ + \"static/media/QC.3eb5bae0.svg\";","export default __webpack_public_path__ + \"static/media/QD.c20eb8d2.svg\";","export default __webpack_public_path__ + \"static/media/QS.cc68ac97.svg\";","export default __webpack_public_path__ + \"static/media/KH.3d6b1be6.svg\";","export default __webpack_public_path__ + \"static/media/KC.ca193598.svg\";","export default __webpack_public_path__ + \"static/media/KD.32d1a9f8.svg\";","export default __webpack_public_path__ + \"static/media/KS.b54b6bba.svg\";","export default __webpack_public_path__ + \"static/media/JOKER.96be08d3.svg\";","const SUITS = ['H', 'D', 'S', 'C'];\nconst JOKER = 0,\n  ACE = 1,\n  JACK = 11,\n  QUEEN = 12,\n  KING = 13;\nconst VALUES = [ACE, 2, 3, 4, 5, 6, 7, 8, 9, 10, JACK, QUEEN, KING];\n\nexport {\n  SUITS,\n  VALUES,\n  JOKER,\n  ACE,\n  JACK,\n  QUEEN,\n  KING,\n}\n","import { JOKER, SUITS, VALUES } from \"./model\";\n\nconst constructDeckOfCards = ({ jokers = 0 } = {}) => {\n  const cards = []\n  for (let suit of SUITS) {\n    for (let value of VALUES) {\n      cards.push({ suit, value });\n    }\n  }\n\n  for (let i = 0; i < jokers; i++) {\n    cards.push({ suit: null, value: JOKER });\n  }\n\n  return cards;\n}\n\n\nexport default constructDeckOfCards;\n","import React from 'react'\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin-bottom: -9em;\n  margin-right: -3em;\n\n  ${({ order }) => order && `order: ${order};`}\n`;\n\nconst UnSelectable = styled.div`\n  position: relative;\n  margin-top: 2em;\n`;\n\nconst Selectable = styled(UnSelectable)`\n  &:hover {\n    margin-top: 1em;\n    margin-bottom: 1em;\n    cursor: pointer;\n  }\n\n  ${({ isSelected }) => isSelected && `\n    margin-top: 0em;\n    margin-bottom: 2em;\n\n    &:hover {\n      margin-top: 0em;\n      margin-bottom: 2em;\n    }\n  `}\n`;\n\nconst Overlay = styled.div`\n  opacity: 0.4;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border-radius: 0.5em;\n\n  ${({ isSelected, selectColor }) => isSelected && selectColor && `\n    background-color: ${selectColor};\n  `}\n`;\n\nconst FaceImg = styled.img`\n  width: 9em;\n  display: block;\n`;\n\nconst SelectableFace = ({ isSelected, selectColor, faceImage, altText, onClick }) => (\n  <Selectable isSelected={isSelected}>\n    <FaceImg src={faceImage} alt={altText} />\n    <Overlay isSelected={isSelected} selectColor={selectColor} onClick={onClick}/>\n  </Selectable>\n);\n\nconst UnSelectableFace = ({ faceImage, altText }) => (\n  <UnSelectable>\n    <FaceImg src={faceImage} alt={altText}/>\n  </UnSelectable>\n);\n\nconst Card = ({ order, canBeSelected, isSelected, selectColor, faceImage, altText, onClick }) => {\n  const Face = canBeSelected ? SelectableFace : UnSelectableFace;\n  return (\n    <Container order={order}>\n      <Face isSelected={isSelected} selectColor={selectColor} faceImage={faceImage} altText={altText} onClick={onClick} />\n    </Container>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport HA from './cards/AH.svg'\nimport CA from './cards/AC.svg'\nimport DA from './cards/AD.svg'\nimport SA from './cards/AS.svg'\nimport H2 from './cards/2H.svg'\nimport C2 from './cards/2C.svg'\nimport D2 from './cards/2D.svg'\nimport S2 from './cards/2S.svg'\nimport H3 from './cards/3H.svg'\nimport C3 from './cards/3C.svg'\nimport D3 from './cards/3D.svg'\nimport S3 from './cards/3S.svg'\nimport H4 from './cards/4H.svg'\nimport C4 from './cards/4C.svg'\nimport D4 from './cards/4D.svg'\nimport S4 from './cards/4S.svg'\nimport H5 from './cards/5H.svg'\nimport C5 from './cards/5C.svg'\nimport D5 from './cards/5D.svg'\nimport S5 from './cards/5S.svg'\nimport H6 from './cards/6H.svg'\nimport C6 from './cards/6C.svg'\nimport D6 from './cards/6D.svg'\nimport S6 from './cards/6S.svg'\nimport H7 from './cards/7H.svg'\nimport C7 from './cards/7C.svg'\nimport D7 from './cards/7D.svg'\nimport S7 from './cards/7S.svg'\nimport H8 from './cards/8H.svg'\nimport C8 from './cards/8C.svg'\nimport D8 from './cards/8D.svg'\nimport S8 from './cards/8S.svg'\nimport H9 from './cards/9H.svg'\nimport C9 from './cards/9C.svg'\nimport D9 from './cards/9D.svg'\nimport S9 from './cards/9S.svg'\nimport H10 from './cards/10H.svg'\nimport C10 from './cards/10C.svg'\nimport D10 from './cards/10D.svg'\nimport S10 from './cards/10S.svg'\nimport HJ from './cards/JH.svg'\nimport CJ from './cards/JC.svg'\nimport DJ from './cards/JD.svg'\nimport SJ from './cards/JS.svg'\nimport HQ from './cards/QH.svg'\nimport CQ from './cards/QC.svg'\nimport DQ from './cards/QD.svg'\nimport SQ from './cards/QS.svg'\nimport HK from './cards/KH.svg'\nimport CK from './cards/KC.svg'\nimport DK from './cards/KD.svg'\nimport SK from './cards/KS.svg'\nimport JKR from './cards/JOKER.svg'\nimport { JOKER, ACE, KING, QUEEN, JACK } from '../game'\nimport Card from \"./Card\";\n\nconst getFaceImage = ({ suit, value }) => {\n  if (value === JOKER) {\n    return JKR\n  } else if (value === ACE && suit === 'H') {\n    return HA\n  } else if (value === ACE && suit === 'D') {\n    return DA\n  } else if (value === ACE && suit === 'S') {\n    return SA\n  } else if (value === ACE && suit === 'C') {\n    return CA\n  } else if (value === 2 && suit === 'H') {\n    return H2\n  } else if (value === 2 && suit === 'D') {\n    return D2\n  } else if (value === 2 && suit === 'S') {\n    return S2\n  } else if (value === 2 && suit === 'C') {\n    return C2\n  } else if (value === 3 && suit === 'H') {\n    return H3\n  } else if (value === 3 && suit === 'D') {\n    return D3\n  } else if (value === 3 && suit === 'S') {\n    return S3\n  } else if (value === 3 && suit === 'C') {\n    return C3\n  } else if (value === 4 && suit === 'H') {\n    return H4\n  } else if (value === 4 && suit === 'D') {\n    return D4\n  } else if (value === 4 && suit === 'S') {\n    return S4\n  } else if (value === 4 && suit === 'C') {\n    return C4\n  } else if (value === 5 && suit === 'H') {\n    return H5\n  } else if (value === 5 && suit === 'D') {\n    return D5\n  } else if (value === 5 && suit === 'S') {\n    return S5\n  } else if (value === 5 && suit === 'C') {\n    return C5\n  } else if (value === 6 && suit === 'H') {\n    return H6\n  } else if (value === 6 && suit === 'D') {\n    return D6\n  } else if (value === 6 && suit === 'S') {\n    return S6\n  } else if (value === 6 && suit === 'C') {\n    return C6\n  } else if (value === 7 && suit === 'H') {\n    return H7\n  } else if (value === 7 && suit === 'D') {\n    return D7\n  } else if (value === 7 && suit === 'S') {\n    return S7\n  } else if (value === 7 && suit === 'C') {\n    return C7\n  } else if (value === 8 && suit === 'H') {\n    return H8\n  } else if (value === 8 && suit === 'D') {\n    return D8\n  } else if (value === 8 && suit === 'S') {\n    return S8\n  } else if (value === 8 && suit === 'C') {\n    return C8\n  } else if (value === 9 && suit === 'H') {\n    return H9\n  } else if (value === 9 && suit === 'D') {\n    return D9\n  } else if (value === 9 && suit === 'S') {\n    return S9\n  } else if (value === 9 && suit === 'C') {\n    return C9\n  } else if (value === 10 && suit === 'H') {\n    return H10\n  } else if (value === 10 && suit === 'D') {\n    return D10\n  } else if (value === 10 && suit === 'S') {\n    return S10\n  } else if (value === 10 && suit === 'C') {\n    return C10\n  } else if (value === JACK && suit === 'H') {\n    return HJ\n  } else if (value === JACK && suit === 'D') {\n    return DJ\n  } else if (value === JACK && suit === 'S') {\n    return SJ\n  } else if (value === JACK && suit === 'C') {\n    return CJ\n  } else if (value === QUEEN && suit === 'H') {\n    return HQ\n  } else if (value === QUEEN && suit === 'D') {\n    return DQ\n  } else if (value === QUEEN && suit === 'S') {\n    return SQ\n  } else if (value === QUEEN && suit === 'C') {\n    return CQ\n  } else if (value === KING && suit === 'H') {\n    return HK\n  } else if (value === KING && suit === 'D') {\n    return DK\n  } else if (value === KING && suit === 'S') {\n    return SK\n  } else if (value === KING && suit === 'C') {\n    return CK\n  }\n}\n\nconst getAltText = ({ value, suit }) => {\n  if (value === JOKER) {\n    return '🃏 Joker'\n  } else if (value === ACE && suit === 'H') {\n    return '🂱 Ace of Hearts'\n  } else if (value === ACE && suit === 'D') {\n    return '🃁 Ace of Diamonds'\n  } else if (value === ACE && suit === 'S') {\n    return '🂡 Ace of Spaces'\n  } else if (value === ACE && suit === 'C') {\n    return '🃑 Ace of Clubs'\n  } else if (value === 2 && suit === 'H') {\n    return '🂲 Two of Hearts'\n  } else if (value === 2 && suit === 'D') {\n    return '🃂 Two of Diamonds'\n  } else if (value === 2 && suit === 'S') {\n    return '🂢 Two of Spades'\n  } else if (value === 2 && suit === 'C') {\n    return '🃒 Two of Clubs'\n  } else if (value === 3 && suit === 'H') {\n    return '🂳 Three of Hearts'\n  } else if (value === 3 && suit === 'D') {\n    return '🃃 Three of Diamonds'\n  } else if (value === 3 && suit === 'S') {\n    return '🂣 Three of Spades'\n  } else if (value === 3 && suit === 'C') {\n    return '🃓 Three of Clubs'\n  } else if (value === 4 && suit === 'H') {\n    return '🂴 Four of Hearts'\n  } else if (value === 4 && suit === 'D') {\n    return '🃄 Four of Diamonds'\n  } else if (value === 4 && suit === 'S') {\n    return '🂤 Four of Spades'\n  } else if (value === 4 && suit === 'C') {\n    return '🃔 Four of Clubs'\n  } else if (value === 5 && suit === 'H') {\n    return '🂵 Five of Hearts'\n  } else if (value === 5 && suit === 'D') {\n    return '🃅 Five of Diamonds'\n  } else if (value === 5 && suit === 'S') {\n    return '🂥 Five of Spades'\n  } else if (value === 5 && suit === 'C') {\n    return '🃕 Five of Clubs'\n  } else if (value === 6 && suit === 'H') {\n    return '🂶 Six of Hearts'\n  } else if (value === 6 && suit === 'D') {\n    return '🃆 Six of Diamomnds'\n  } else if (value === 6 && suit === 'S') {\n    return '🂦 Six of Spades'\n  } else if (value === 6 && suit === 'C') {\n    return '🃖 Six of Clubs'\n  } else if (value === 7 && suit === 'H') {\n    return '🂷 Seven of Hearts'\n  } else if (value === 7 && suit === 'D') {\n    return '🃇 Seven of Diamonds'\n  } else if (value === 7 && suit === 'S') {\n    return '🂧 Seven of Spades'\n  } else if (value === 7 && suit === 'C') {\n    return '🃗 Seven of Clubs'\n  } else if (value === 8 && suit === 'H') {\n    return '🂸 Eight of Hearts'\n  } else if (value === 8 && suit === 'D') {\n    return '🃈 Eight of Diamonds'\n  } else if (value === 8 && suit === 'S') {\n    return '🂨 Eight of Spades'\n  } else if (value === 8 && suit === 'C') {\n    return '🃘 Eight of Clubs'\n  } else if (value === 9 && suit === 'H') {\n    return '🂹 Nine of Hearts'\n  } else if (value === 9 && suit === 'D') {\n    return '🃉 Nine of Diamonds'\n  } else if (value === 9 && suit === 'S') {\n    return '🂩 Nine of Spades'\n  } else if (value === 9 && suit === 'C') {\n    return '🃙 Nine of Clubs'\n  } else if (value === 10 && suit === 'H') {\n    return '🂺 Ten of Hearts'\n  } else if (value === 10 && suit === 'D') {\n    return '🃊 Ten of Diamonds'\n  } else if (value === 10 && suit === 'S') {\n    return '🂪 Ten of Spades'\n  } else if (value === 10 && suit === 'C') {\n    return '🃚 Ten of Clubs'\n  } else if (value === JACK && suit === 'H') {\n    return '🂻 Jack of Hearts'\n  } else if (value === JACK && suit === 'D') {\n    return '🃋 Jack of Diamonds'\n  } else if (value === JACK && suit === 'S') {\n    return '🂫 Jack of Spades'\n  } else if (value === JACK && suit === 'C') {\n    return '🃛 Jack of Clubs'\n  } else if (value === QUEEN && suit === 'H') {\n    return '🂽 Queen of Hearts'\n  } else if (value === QUEEN && suit === 'D') {\n    return '🃍 Queen of Diamonds'\n  } else if (value === QUEEN && suit === 'S') {\n    return '🂭 Queen of Spades'\n  } else if (value === QUEEN && suit === 'C') {\n    return '🃝 Queen of Clubs'\n  } else if (value === KING && suit === 'H') {\n    return '🂾 King of Hearts'\n  } else if (value === KING && suit === 'D') {\n    return '🃞 King of Diamonds'\n  } else if (value === KING && suit === 'S') {\n    return '🂮 King of Spades'\n  } else if (value === KING && suit === 'C') {\n    return '🃞 King of Clubs'\n  }\n}\n\nconst CardFront = ({ value, suit, canBeSelected = false, isSelected = false, selectColor = null }) => {\n  console.log(\"select\", selectColor);\n  const faceImage = getFaceImage({ value, suit });\n  const altText = getAltText({ value, suit });\n  return (\n    <Card faceImage={faceImage} altText={altText} isSelected={isSelected} canBeSelected={canBeSelected} selectColor={selectColor}/>\n  );\n}\n\nexport default CardFront;\n","export default __webpack_public_path__ + \"static/media/RED_BACK.eea8c6b0.svg\";","export default __webpack_public_path__ + \"static/media/BLUE_BACK.d7aabd90.svg\";","import React from \"react\";\nimport RED_BACK from './cards/RED_BACK.svg'\nimport BLUE_BACK from './cards/BLUE_BACK.svg'\nimport Card from \"./Card\";\n\nconst getFaceImage = ({ colour }) => {\n  if (colour === 'R') {\n    return RED_BACK\n  } else if (colour === 'B') {\n    return BLUE_BACK\n  }\n}\n\nconst CardBack = ({ colour, isSelected = false, canBeSelected = false, selectColor = null }) => {\n  const faceImage = getFaceImage({ colour });\n  return (\n    <Card faceImage={faceImage} altText='🂠 Card Back' isSelected={isSelected} canBeSelected={canBeSelected} selectColor={selectColor}/>\n  );\n}\n\nexport default CardBack;\n","export default __webpack_public_path__ + \"static/media/felt.5b148bae.png\";","import styled from \"styled-components\";\nimport felt from \"./felt.png\";\n\nconst FeltTable = styled.div`\n  background-color: rgb(10, 80, 20);\n  background-image: url(${felt});\n  height: 100%;\n  padding: 5%;\n`;\n\nexport default FeltTable;\n","import styled from \"styled-components\";\n\nconst Hand = styled.section`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  max-height: 50%;\n\n  padding-right: 3em;\n  padding-bottom: 9em;\n`;\n\nexport default Hand;\n","import { PlayingCardFront } from \"./client\";\nexport * from \"./client\";\nexport * from \"./game\";\nexport default PlayingCardFront;","import playersGame from \"components/players/game\";\nimport { constructDeckOfCards } from \"components/playing-card\";\n\nconst connectionIsHosts = ({ roomId, connectionId }) => (\n  roomId === connectionId\n);\n\nconst startGame = ({ state, roomId, connectionId }) => {\n  const newState = { ...state, discard: [] };\n  const isHost = connectionIsHosts({ roomId, connectionId });\n  if (isHost) {\n    newState.deck = constructDeckOfCards();\n  } else {\n    newState.hand = []\n  }\n  return newState;\n}\n\nconst deal = () => {}\n\nconst game = {\n  guestMoves: {\n    ...playersGame.guestMoves,\n  },\n  \n  hostMoves: {\n    ...playersGame.hostMoves,\n    startGame,\n    deal,\n  },\n}\n\nexport default game;\n","import React, { memo } from 'react'\nimport twemoji from 'twemoji'\n\nconst Emoji = memo(({ emoji }) => (\n  <span\n    dangerouslySetInnerHTML={{\n      __html: twemoji.parse(emoji, { folder: 'svg', ext: '.svg' }),\n    }}\n  />\n));\n\nexport default Emoji;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Picker } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\n\nconst Background = styled.div`\n  background-color: rgba(0, 0, 0, 0.8);\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Wrapper = styled.div`\n  display: inline-block;\n`;\n \nconst EmojiPicker = ({ onSelectEmoji, onHide }) => {\n  const onSelect = (emoji) => {\n    onSelectEmoji(emoji.native);\n  }\n  return (\n    <Background tabIndex onKeyPress={onHide} onClick={onHide}>\n      <Wrapper onClick={(e) => e.stopPropagation()}>\n        <Picker onSelect={onSelect} set=\"twitter\" />\n      </Wrapper>\n    </Background>\n  );\n};\n\nexport default EmojiPicker;","import Emoji from \"./Emoji\";\nimport EmojiPicker from \"./EmojiPicker\";\n\nexport default Emoji;\nexport { EmojiPicker }","import React, { useEffect } from \"react\";\nimport Emoji from \"components/emoji\";\nimport { Flex, Box, Button, Text } from \"rebass/styled-components\";\n\nconst checkIfCanStartGame = ({ state: { players } }) => (\n  players.list.length >= players.minPlayers\n);\n\nconst PlayerList = ({ children, players }) => {\n  return (\n    <Flex>\n      <Box flexGrow={1}>\n        {players.map(({ name, emoji }, index) => (\n          <Flex alignItems=\"center\"  key={index}>\n            <Box width=\"2em\" height=\"2em\" my={2} mx={3}>\n              {emoji && <Emoji emoji={emoji}/>}\n            </Box>\n            {name}\n          </Flex>\n        ))}\n      </Box>\n      <Box flexGrow={3}>\n        {children}\n      </Box>\n    </Flex>\n  );\n}\n\nconst HowToJoin = ({ roomId }) => (\n  <Text fontSize={[ 3, 4, 5 ]} fontWeight='bold' color='secondary'>\n    Join: {roomId}\n  </Text>\n)\n\nconst Host = ({ state, roomId, moves, connections, maxPlayers, minPlayers, children }) => {\n  useEffect(() => {\n    if (!state.players && moves?.initPlayers) {\n      moves.initPlayers({ maxPlayers, minPlayers });\n    }\n  }, [state.players, moves]);\n\n  if (!state.players) return null;\n  if (state.players.everyonesIn) return children;\n  const canStartGame = checkIfCanStartGame({ state });\n  return (\n    <PlayerList players={state.players.list}>\n      <Flex height=\"100%\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"space-around\">\n        <HowToJoin roomId={roomId}/>\n        {canStartGame && (\n          <Button\n            my={2}\n            onClick={() => moves.startGame()}\n            onKeyPress={() => moves.startGame()}\n          >\n            Start Game\n          </Button>\n        )}\n      </Flex>\n    </PlayerList>\n  )\n};\n\nexport default Host;\n","import React, { useState } from \"react\";\nimport Emoji, { EmojiPicker } from \"components/emoji\";\nimport { Flex, Box, Button, Text } from \"rebass/styled-components\";\nimport { Input, Label } from \"@rebass/forms/styled-components\";\n\nconst JoinScreen = ({ onJoin }) => {\n  const [name, setName] = useState(\"\");\n  const [emoji, setEmoji] = useState('😎');\n  const [pickerIsShown, setPickerIsShown] = useState(false);\n  const showPicker = () => setPickerIsShown(true);\n  const hidePicker = () => setPickerIsShown(false);\n\n  const join = () => {\n    name?.length && onJoin({ name, emoji })\n  }\n\n  const onSelectEmoji = (emoji) => {\n    setEmoji(emoji);\n    hidePicker();\n  }\n\n  return (\n    <>\n      {pickerIsShown && <EmojiPicker onHide={hidePicker} onSelectEmoji={onSelectEmoji} />}\n      <Flex my={5} alignItems=\"center\" flexDirection=\"column\">\n        <Box width={'10em'} height={'10em'} onKeyPress={showPicker} onClick={showPicker}>\n          <Emoji emoji={emoji}/>\n        </Box>\n        <Box my={2}>\n          <Text fontSize={[ 3, 4, 5 ]} fontWeight='bold' color='primary'>\n            {name}\n          </Text>\n        </Box>\n        <Box>\n          <Label htmlFor=\"nickname\">Nickname</Label>\n          <Input id=\"nickname\" onChange={(e) => setName(e.target.value)} value={name}/>\n        </Box>\n        <Box my={3}>\n          <Button variant=\"primary\" onKeyPress={join} onClick={join}>\n            Sit down to Play\n          </Button>\n        </Box>\n      </Flex>\n    </>\n  );\n}\n\nconst Spectator = () => (\n  <Flex height=\"100vh\" justifyContent=\"center\" alignItems=\"center\">\n    <Text fontSize={[ 3, 4, 5 ]} fontWeight='bold' color='primary'>\n      You are a Spectator\n    </Text>\n  </Flex>\n)\n\nconst Waiting = () => (\n  <Flex height=\"100vh\" justifyContent=\"center\" alignItems=\"center\">\n    <Text fontSize={[ 3, 4, 5 ]} fontWeight='bold' color='primary'>\n      Be patient, the host is setting up your game.\n    </Text>\n  </Flex>\n)\n\nconst findConnectionIsPlayer = ({ players, connectionId }) => (\n  players.findIndex(player => player.connectionId === connectionId) > -1\n)\n\nconst checkIfGameIsFull = ({ state: { players } }) => (\n  players.list.length > players.maxPlayers\n);\n\nconst Guest = ({ children, state, roomId, moves, connectionId }) => {\n  if (!state.players) {\n    return <Waiting/>;\n  }\n\n  const isPlayer = findConnectionIsPlayer({ players: state.players.list, connectionId });\n\n  const onJoin = ({ name, emoji }) => {\n    moves.joinAsAPlayer({ name, emoji });\n  }\n\n  if (state.players.everyonesIn) {\n    return isPlayer ? children : <Spectator/>;\n  } else {\n    const gameIsFull = checkIfGameIsFull({ state });\n    return isPlayer || gameIsFull ? <Waiting/> : <JoinScreen onJoin={onJoin}/>;\n  }\n}\n\nexport default Guest;\n","import TicTacToe from \"./games/tic-tac-toe\";\nimport Whist from \"./games/whist\";\n\nconst compendium = [\n  TicTacToe,\n  Whist,\n];\n\nexport default compendium;\n","import game from \"./game\";\nimport { Host, Guest } from \"./client\";\n\nconst name = \"Whist\";\n\nconst Whist = { name, Host, Guest, game };\n\nexport default Whist;\n","import React from \"react\";\nimport { withHostPlayers } from \"components/players/client\"\nimport PlayingCard, { PlayingCardBack, FeltTable, Hand } from \"components/playing-card\";\n\nconst Host = withHostPlayers({ maxPlayers: 4, minPlayers: 4 }, ({ state, roomId, moves, connections }) => {\n  return (\n    <FeltTable>\n      <PlayingCardBack colour=\"R\"/>\n      <Hand>\n        {state.discard && state.discard.map(({ suit, value }) => (\n          <PlayingCard suit={suit} value={value}/>  \n        ))}\n      </Hand>\n    </FeltTable>\n  );\n})\n\nexport default Host;\n","import React from \"react\";\nimport { withGuestPlayers } from \"components/players/client\"\nimport PlayingCard, { FeltTable, Hand } from \"components/playing-card\";\n\nconst Guest = withGuestPlayers(({ state, roomId, moves, connectionId }) => {\n  return (\n    <FeltTable>\n      <Hand>\n        {state.hand && state.hand.map(({ suit, value }) => (\n          <PlayingCard suit={suit} value={value}/>  \n        ))}\n      </Hand>\n    </FeltTable>\n  );\n})\n\nexport default Guest;\n","import randomWords from \"random-words\";\nimport isEqual from \"lodash/isEqual\";\n\nconst permutations = [\n  [0, 1, 2],\n  [0, 2, 1],\n  [1, 0, 2],\n  [2, 0, 1],\n  [2, 1, 0],\n  [1, 2, 0],\n];\n\nexport const createRoomId = (compendiumIndex) => {\n  const order = permutations[compendiumIndex]\n  const words = randomWords({ exactly: 3 }).sort();\n  const orderedWords = order.map(o => words[o])\n  const roomId = orderedWords.join('-')\n  return roomId\n}\n\nexport const decodeCompendiumIndex = (roomId) => {\n  const words = roomId.split('-')\n  const sortedWords = [...words].sort()\n  const permutation = words.map(word => sortedWords.findIndex((w) => word === w))\n  const compendiumIndex = permutations.findIndex((permu) => isEqual(permu, permutation))\n  return compendiumIndex;\n}\n","import { useState, useEffect } from \"react\";\nimport compendium from \"./compendium\";\nimport { decodeCompendiumIndex } from \"./rooms\";\n\nconst getGame = (roomId) => {\n  const compendiumIndex = decodeCompendiumIndex(roomId)\n  const game = compendium[compendiumIndex];\n  return game;\n}\n\nconst useGame = (roomId) => {\n  const [game, setGame] = useState({ name: null, Host: null, Guest: null, game: null });\n  useEffect(() => setGame(getGame(roomId)), [])\n  return game;\n}\n\nexport default useGame;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { createRoomId } from \"./rooms\";\nimport compendium from \"./compendium\";\nimport { Heading, Flex, Box, Button } from \"rebass/styled-components\";\nimport { Select, Input, Label } from \"@rebass/forms/styled-components\";\n\n\nconst NewGame = ({ onNewGame }) => {\n  const [value, set] = useState(0);\n\n  const onChange = (e) => {\n    set(e.target.value);\n    e.preventDefault();\n  }\n\n  const onSubmit = () => onNewGame(value);\n\n  return (\n    <Box my={4} width={['100%', '80%', '35em']}>\n      <Select m={1} onChange={onChange} value={value}>\n        {compendium.map(({ name }, index) =>\n          <option value={index} key={index}>{name}</option>)}\n      </Select>\n      <Button m={1} onClick={onSubmit} onKeyPress={onSubmit}>Host New Game</Button>\n    </Box>\n  )\n}\n\nconst JoinGame = ({ onJoinGame }) => {\n  const [value, set] = useState();\n\n  const onChange = (e) => {\n    set(e.target.value);\n    e.preventDefault();\n  }\n\n  const onSubmit = () => onJoinGame(value);\n\n  return (\n    <Box my={4} width={['100%', '80%', '35em']}>\n      <Box>\n        <Label>\n          Room Password\n        </Label>\n        <Input onChange={onChange} value={value}/>\n      </Box>\n      <Button m={1} onClick={onSubmit} onKeyPress={onSubmit}>Join Game</Button>\n    </Box>\n  );\n}\n\n\nconst Home = () => {\n  const { push } = useHistory();\n\n  const onNewGame = (compendiumIndex) => {\n    const roomId = createRoomId(compendiumIndex);\n    push(`/host/${roomId}`)\n  }\n\n  const onJoinGame = (roomId) => {\n    push(`/guest/${roomId}`)\n  }\n\n  return (\n    <Flex mx={['2em', '15%', '20%']} flexDirection=\"column\">\n      <Heading mt={4} fontSize={[ 5, 6 ]} color='primary'>\n        Compendium Games\n      </Heading>\n      <NewGame onNewGame={onNewGame} />\n      <JoinGame onJoinGame={onJoinGame} />\n    </Flex>\n  )\n}\n\n\nexport default Home;\n","import base from '@rebass/preset'\nexport default base;\n","import { ThemeProvider } from \"styled-components\";\nimport { usePartyHost, usePartyGuest } from \"@compendium/peer-party\";\nimport { HashRouter, Switch, Route, useParams } from \"react-router-dom\";\nimport useGame from \"./useGame\";\nimport Home from \"./Home\";\nimport baseTheme from \"./theme\"\n\nconst HostRoute = () => {\n  const { roomId } = useParams();\n  const { theme, Host, game } = useGame(roomId);\n  const { state, moves, connections } = usePartyHost({ roomId, game });\n  return (\n    <ThemeProvider theme={theme || baseTheme}>\n      {Host && <Host roomId={roomId} state={state} moves={moves} connections={connections} />}\n    </ThemeProvider>\n  )\n}\n\nconst GuestRoute = () => {\n  const { roomId } = useParams();\n  const { theme,  Guest, game } = useGame(roomId);\n  const { connectionId, connected, state, moves } = usePartyGuest({ roomId, game });\n  return (\n    <ThemeProvider theme={theme || baseTheme}>\n      {Guest && <Guest connectionId={connectionId} roomId={roomId} connected={connected} state={state} moves={moves}/>}\n    </ThemeProvider>\n  )\n}\n\nconst Router = () =>\n  <HashRouter>\n    <Switch>\n      <Route path=\"/host/:roomId\">\n        <HostRoute/>\n      </Route>\n      <Route path=\"/guest/:roomId\">\n        <GuestRoute/>\n      </Route>\n      <Route exact path=\"/\">\n        <ThemeProvider theme={baseTheme}>\n          <Home/>\n        </ThemeProvider>\n      </Route>\n    </Switch>\n  </HashRouter>\n\nexport default Router;\n","import Router from \"./Router\";\n\nconst App = () =>\n  <Router/>\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 93;"],"sourceRoot":""}